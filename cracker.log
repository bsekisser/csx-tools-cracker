main:0330: Loaded: 038201000610_loader.bin... Start: 0x10020000, End: 0x10323e00
A(0x10020000, 0xea000002, AL, B(0x10020010));

A(0x10020010, 0xe59f0304, AL, LDR(r0, PC, +0x0304); /* [0x1002031c]:0xfffe1160 */);
A(0x10020014, 0xe5901000, AL, LDR(r1, r0, +0x0000); /* [0xfffe1160] */);
A(0x10020018, 0xe3c11017, AL, BIC(r1, r1, 23));
A(0x1002001c, 0xe3811006, AL, ORR(r1, r1, 6));
A(0x10020020, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffe1160] */);
A(0x10020024, 0xe59f02f4, AL, LDR(r0, PC, +0x02f4); /* [0x10020320]:0xfffe1038 */);
A(0x10020028, 0xe5901000, AL, LDR(r1, r0, +0x0000); /* [0xfffe1038] */);
A(0x1002002c, 0xe3c11007, AL, BIC(r1, r1, 7));
A(0x10020030, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffe1038] */);
A(0x10020034, 0xe59f02e8, AL, LDR(r0, PC, +0x02e8); /* [0x10020324]:0xfffe100c */);
A(0x10020038, 0xe59f12e8, AL, LDR(r1, PC, +0x02e8); /* [0x10020328]:0x0000eaef */);
A(0x1002003c, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffe100c] */);
A(0x10020040, 0xe59f02e4, AL, LDR(r0, PC, +0x02e4); /* [0x1002032c]:0xfffe1110 */);
A(0x10020044, 0xe59f12e4, AL, LDR(r1, PC, +0x02e4); /* [0x10020330]:0x06040000 */);
A(0x10020048, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffe1110] */);
A(0x1002004c, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020050, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020054, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020058, 0xe59f02d4, AL, LDR(r0, PC, +0x02d4); /* [0x10020334]:0xfffe1060 */);
A(0x1002005c, 0xe5902000, AL, LDR(r2, r0, +0x0000); /* [0xfffe1060] */);
A(0x10020060, 0xe59f02d0, AL, LDR(r0, PC, +0x02d0); /* [0x10020338]:0xfffece18 */);
A(0x10020064, 0xe3a01d40, AL, MOV(r1, ROR(64, 26)); /* 0x00001000 */);
A(0x10020068, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffece18] */);
A(0x1002006c, 0xe3a00e40, AL, MOV(r0, ROR(64, 28)); /* 0x00000400 */);
A(0x10020070, 0xe2500001, AL, SUBS(r0, r0, 1));
A(0x10020074, 0x1afffffd, NE, B(0x10020070));
A(0x10020078, 0xe59f02bc, AL, LDR(r0, PC, +0x02bc); /* [0x1002033c]:0xfffece00 */);
A(0x1002007c, 0xe59f12bc, AL, LDR(r1, PC, +0x02bc); /* [0x10020340]:0x00000105 */);
A(0x10020080, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffece00] */);
A(0x10020084, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020088, 0xe1a00000, AL, MOV(r0, r0));
A(0x1002008c, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020090, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020094, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020098, 0xe1a00000, AL, MOV(r0, r0));
A(0x1002009c, 0xe1a00000, AL, MOV(r0, r0));
A(0x100200a0, 0xe1a00000, AL, MOV(r0, r0));
A(0x100200a4, 0xe1a00000, AL, MOV(r0, r0));
A(0x100200a8, 0xe1a00000, AL, MOV(r0, r0));
A(0x100200ac, 0xe10f0000, AL, MRS(r0, CPSR));
A(0x100200b0, 0xe200001f, AL, AND(r0, r0, 31));
A(0x100200b4, 0xe3500013, AL, CMP(r0, 19));
A(0x100200b8, 0x03a0c000, EQ, MOV(r12, 0));
A(0x100200bc, 0x03a0b000, EQ, MOV(r11, 0));
A(0x100200c0, 0x03a0a000, EQ, MOV(r10, 0));
A(0x100200c4, 0x03a09000, EQ, MOV(r9, 0));
A(0x100200c8, 0xe3a01000, AL, MOV(r1, 0));
A(0x100200cc, 0xe15c0001, AL, CMP(r12, r1));
A(0x100200d0, 0x03a01002, EQ, MOV(r1, 2));
A(0x100200d4, 0x015b0001, EQ, CMP(r11, r1));
A(0x100200d8, 0x059f1264, EQ, LDR(r1, PC, +0x0264); /* [0x10020344]:0x00002210 */);
A(0x100200dc, 0x159f1264, NE, LDR(r1, PC, +0x0264); /* [0x10020348]:0x00002890 */);
A(0x100200e0, 0xe59f0264, AL, LDR(r0, PC, +0x0264); /* [0x1002034c]:0xfffecf00 */);
A(0x100200e4, 0xe1c010b0, AL, STRH(r1, r0, +0x0000); /* [0xfffecf00] */);
A(0x100200e8, 0xe3a02f40, AL, MOV(r2, ROR(64, 30)); /* 0x00000100 */);
A(0x100200ec, 0xe2522001, AL, SUBS(r2, r2, 1));
A(0x100200f0, 0x1afffffd, NE, B(0x100200ec));
A(0x100200f4, 0xe1d010b0, AL, LDRH(r1, r0, +0x0000); /* [0xfffecf00] */);
A(0x100200f8, 0xe2111001, AL, ANDS(r1, r1, 1));
A(0x100200fc, 0x0afffffc, EQ, B(0x100200f4));
A(0x10020100, 0xe59f0248, AL, LDR(r0, PC, +0x0248); /* [0x10020350]:0xfffecc1c */);
A(0x10020104, 0xe59f1248, AL, LDR(r1, PC, +0x0248); /* [0x10020354]:0x03031011 */);
A(0x10020108, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffecc1c] */);
A(0x1002010c, 0xe59f0244, AL, LDR(r0, PC, +0x0244); /* [0x10020358]:0xfffecc18 */);
A(0x10020110, 0xe59f123c, AL, LDR(r1, PC, +0x023c); /* [0x10020354]:0x03031011 */);
A(0x10020114, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffecc18] */);
A(0x10020118, 0xe59f023c, AL, LDR(r0, PC, +0x023c); /* [0x1002035c]:0xfffecc14 */);
A(0x1002011c, 0xe59f1230, AL, LDR(r1, PC, +0x0230); /* [0x10020354]:0x03031011 */);
A(0x10020120, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffecc14] */);
A(0x10020124, 0xe59f0234, AL, LDR(r0, PC, +0x0234); /* [0x10020360]:0xfffecc5c */);
A(0x10020128, 0xe3a01000, AL, MOV(r1, 0));
A(0x1002012c, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffecc5c] */);
A(0x10020130, 0xe59f022c, AL, LDR(r0, PC, +0x022c); /* [0x10020364]:0xfffecc58 */);
A(0x10020134, 0xe3a01000, AL, MOV(r1, 0));
A(0x10020138, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffecc58] */);
A(0x1002013c, 0xe59f0224, AL, LDR(r0, PC, +0x0224); /* [0x10020368]:0xfffecc54 */);
A(0x10020140, 0xe3a01000, AL, MOV(r1, 0));
A(0x10020144, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffecc54] */);
A(0x10020148, 0xe59f021c, AL, LDR(r0, PC, +0x021c); /* [0x1002036c]:0xfffecc50 */);
A(0x1002014c, 0xe3a01000, AL, MOV(r1, 0));
A(0x10020150, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffecc50] */);
A(0x10020154, 0xe59f0214, AL, LDR(r0, PC, +0x0214); /* [0x10020370]:0xfffe1140 */);
A(0x10020158, 0xe3a01000, AL, MOV(r1, 0));
A(0x1002015c, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffe1140] */);
A(0x10020160, 0xe3a02d40, AL, MOV(r2, ROR(64, 26)); /* 0x00001000 */);
A(0x10020164, 0xe2522001, AL, SUBS(r2, r2, 1));
A(0x10020168, 0x1afffffd, NE, B(0x10020164));
A(0x1002016c, 0xe3a0107f, AL, MOV(r1, 127));
A(0x10020170, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffe1140] */);
A(0x10020174, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020178, 0xe1a00000, AL, MOV(r0, r0));
A(0x1002017c, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020180, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020184, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020188, 0xe1a00000, AL, MOV(r0, r0));
A(0x1002018c, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020190, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020194, 0xe59f01d8, AL, LDR(r0, PC, +0x01d8); /* [0x10020374]:0xfffece04 */);
A(0x10020198, 0xe3a01e40, AL, MOV(r1, ROR(64, 28)); /* 0x00000400 */);
A(0x1002019c, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffece04] */);
A(0x100201a0, 0xe1a00000, AL, MOV(r0, r0));
A(0x100201a4, 0xe1a00000, AL, MOV(r0, r0));
A(0x100201a8, 0xe1a00000, AL, MOV(r0, r0));
A(0x100201ac, 0xe59f01c4, AL, LDR(r0, PC, +0x01c4); /* [0x10020378]:0xfffece08 */);
A(0x100201b0, 0xe59f11c4, AL, LDR(r1, PC, +0x01c4); /* [0x1002037c]:0x0000098e */);
A(0x100201b4, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffece08] */);
A(0x100201b8, 0xe1a00000, AL, MOV(r0, r0));
A(0x100201bc, 0xe1a00000, AL, MOV(r0, r0));
A(0x100201c0, 0xe1a00000, AL, MOV(r0, r0));
A(0x100201c4, 0xe59f01b4, AL, LDR(r0, PC, +0x01b4); /* [0x10020380]:0xfffece14 */);
A(0x100201c8, 0xe3a01001, AL, MOV(r1, 1));
A(0x100201cc, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffece14] */);
A(0x100201d0, 0xe59f01ac, AL, LDR(r0, PC, +0x01ac); /* [0x10020384]:0xfffec808 */);
A(0x100201d4, 0xe3a010f5, AL, MOV(r1, 245));
A(0x100201d8, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffec808] */);
A(0x100201dc, 0xe3a010a0, AL, MOV(r1, 160));
A(0x100201e0, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffec808] */);
A(0x100201e4, 0xe59f019c, AL, LDR(r0, PC, +0x019c); /* [0x10020388]:0xfffeb048 */);
A(0x100201e8, 0xe59f119c, AL, LDR(r1, PC, +0x019c); /* [0x1002038c]:0x0000aaaa */);
A(0x100201ec, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffeb048] */);
A(0x100201f0, 0xe59f0198, AL, LDR(r0, PC, +0x0198); /* [0x10020390]:0xfffeb034 */);
A(0x100201f4, 0xe5901000, AL, LDR(r1, r0, +0x0000); /* [0xfffeb034] */);
A(0x100201f8, 0xe2111010, AL, ANDS(r1, r1, 16));
A(0x100201fc, 0x1afffffb, NE, B(0x100201f0));
A(0x10020200, 0xe59f0180, AL, LDR(r0, PC, +0x0180); /* [0x10020388]:0xfffeb048 */);
A(0x10020204, 0xe59f1188, AL, LDR(r1, PC, +0x0188); /* [0x10020394]:0x00005555 */);
A(0x10020208, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffeb048] */);
A(0x1002020c, 0xe59f017c, AL, LDR(r0, PC, +0x017c); /* [0x10020390]:0xfffeb034 */);
A(0x10020210, 0xe5901000, AL, LDR(r1, r0, +0x0000); /* [0xfffeb034] */);
A(0x10020214, 0xe2111010, AL, ANDS(r1, r1, 16));
A(0x10020218, 0x1afffffb, NE, B(0x1002020c));
A(0x1002021c, 0xe59f0174, AL, LDR(r0, PC, +0x0174); /* [0x10020398]:0xfffec700 */);
A(0x10020220, 0xe3e01000, AL, MVN(r1, 0));
A(0x10020224, 0xe5801004, AL, STR(r1, r0, +0x0004); /* [0xfffec704] */);
A(0x10020228, 0xe3a01027, AL, MOV(r1, 39));
A(0x1002022c, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffec700] */);
A(0x10020230, 0xe3a01000, AL, MOV(r1, 0));
A(0x10020234, 0xee011f10, AL, MCR(CP15, 0, r1, CRn(1), CRm(0));
A(0x10020238, 0xee051f10, AL, MCR(CP15, 0, r1, CRn(5), CRm(0));
A(0x1002023c, 0xee071f17, AL, MCR(CP15, 0, r1, CRn(7), CRm(7));
A(0x10020240, 0xee081f17, AL, MCR(CP15, 0, r1, CRn(8), CRm(7));
A(0x10020244, 0xe1a00000, AL, MOV(r0, r0));
A(0x10020248, 0xe1a00000, AL, MOV(r0, r0));
A(0x1002024c, 0xe59f1148, AL, LDR(r1, PC, +0x0148); /* [0x1002039c]:0xfffec708 */);
A(0x10020250, 0xe1d110b0, AL, LDRH(r1, r1, +0x0000);
A(0x10020254, 0xe59f2144, AL, LDR(r2, PC, +0x0144); /* [0x100203a0]:0x0000025b */);
A(0x10020258, 0xe1821801, AL, ORR(r1, r2, LSL(r1, 0x10)));
A(0x1002025c, 0xe59f2138, AL, LDR(r2, PC, +0x0138); /* [0x1002039c]:0xfffec708 */);
A(0x10020260, 0xe1d220b0, AL, LDRH(r2, r2, +0x0000);
A(0x10020264, 0xe0412802, AL, SUB(r2, r1, LSL(r2, 0x10)));
A(0x10020268, 0xe1520802, AL, CMP(r2, LSL(r2, 0x10)));
A(0x1002026c, 0x3afffffa, CC, B(0x1002025c));
A(0x10020270, 0xe59f012c, AL, LDR(r0, PC, +0x012c); /* [0x100203a4]:0xfffb4018 */);
A(0x10020274, 0xe3a01000, AL, MOV(r1, 0));
A(0x10020278, 0xe1c010b0, AL, STRH(r1, r0, +0x0000); /* [0xfffb4018] */);
A(0x1002027c, 0xe3a000d1, AL, MOV(r0, 209));
A(0x10020280, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x10020284, 0xe59fd11c, AL, LDR(SP, PC, +0x011c); /* [0x100203a8]:0x10d0edf0 */);
A(0x10020288, 0xe3a000d2, AL, MOV(r0, 210));
A(0x1002028c, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x10020290, 0xe59fd114, AL, LDR(SP, PC, +0x0114); /* [0x100203ac]:0x10d0eff0 */);
A(0x10020294, 0xe3a000d3, AL, MOV(r0, 211));
A(0x10020298, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x1002029c, 0xe59fd10c, AL, LDR(SP, PC, +0x010c); /* [0x100203b0]:0x10d0f030 */);
A(0x100202a0, 0xe3a000df, AL, MOV(r0, 223));
A(0x100202a4, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x100202a8, 0xe59fd104, AL, LDR(SP, PC, +0x0104); /* [0x100203b4]:0x10d0f130 */);
A(0x100202ac, 0xe28f0001, AL, ADD(r0, PC, 1));
A(0x100202b0, 0xe12fff10, AL, BX(r0); /* 0x100202b5 */);

T(0x100202b4, 0xf145fdd4, AL, BL(0x10165e60); /* 0x100202b9 + 0x00000ba8, LR = 0x100202b8 */);
T(0x100202b8, 0x0000483f, AL, LDR(r0, PC, 0x00fc); /* [0x100203b8]:0x10d0edb0 */);
T(0x100202ba, 0x0000213f, AL, MOVS(r1, 0x3f));
T(0x100202bc, 0x000022ff, AL, MOVS(r2, 0xff));
T(0x100202be, 0x00005442, AL, STRB(r2, r0, r1));
T(0x100202c0, 0x00001e49, AL, ADDS(r1, r1, 0x1);
T(0x100202c2, 0x0000d5fc, PL, B(0x100202be); /* 0x100202c6 + 0xfffffff8 */);
T(0x100202c4, 0x0000483d, AL, LDR(r0, PC, 0x00f4); /* [0x100203bc]:0x10d0edf0 */);
T(0x100202c6, 0x0000493e, AL, LDR(r1, PC, 0x00f8); /* [0x100203c0]:0x000001ff */);
T(0x100202c8, 0x000022ff, AL, MOVS(r2, 0xff));
T(0x100202ca, 0x00005442, AL, STRB(r2, r0, r1));
T(0x100202cc, 0x00001e49, AL, ADDS(r1, r1, 0x1);
T(0x100202ce, 0x0000d5fc, PL, B(0x100202ca); /* 0x100202d2 + 0xfffffff8 */);
T(0x100202d0, 0x0000483c, AL, LDR(r0, PC, 0x00f0); /* [0x100203c4]:0x10d0eff0 */);
T(0x100202d2, 0x0000213f, AL, MOVS(r1, 0x3f));
T(0x100202d4, 0x000022ff, AL, MOVS(r2, 0xff));
T(0x100202d6, 0x00005442, AL, STRB(r2, r0, r1));
T(0x100202d8, 0x00001e49, AL, ADDS(r1, r1, 0x1);
T(0x100202da, 0x0000d5fc, PL, B(0x100202d6); /* 0x100202de + 0xfffffff8 */);
T(0x100202dc, 0x0000483a, AL, LDR(r0, PC, 0x00e8); /* [0x100203c8]:0x10d0f030 */);
T(0x100202de, 0x000021ff, AL, MOVS(r1, 0xff));
T(0x100202e0, 0x000022ff, AL, MOVS(r2, 0xff));
T(0x100202e2, 0x00005442, AL, STRB(r2, r0, r1));
T(0x100202e4, 0x00001e49, AL, ADDS(r1, r1, 0x1);
T(0x100202e6, 0x0000d5fc, PL, B(0x100202e2); /* 0x100202ea + 0xfffffff8 */);
T(0x100202e8, 0xf145fdd4, AL, BL(0x10165e94); /* 0x100202ed + 0x00000ba8, LR = 0x100202ec */);
T(0x100202ec, 0xf146fdb2, AL, BL(0x10166e54); /* 0x100202f1 + 0x00000b64, LR = 0x100202f0 */);
T(0x100202f0, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100202f2, 0x00004a36, AL, LDR(r2, PC, 0x00d8); /* [0x100203cc]:0x10d0f130 */);
T(0x100202f4, 0x00007011, AL, STRB(r1, r2); /* [0x10d0f130] */);
T(0x100202f6, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100202f8, 0x00004a35, AL, LDR(r2, PC, 0x00d4); /* [0x100203d0]:0x10d0f131 */);
T(0x100202fa, 0x00007011, AL, STRB(r1, r2); /* [0x10d0f131] */);
T(0x100202fc, 0x00004660, AL, MOV(r0, r12));
T(0x100202fe, 0x00004659, AL, MOV(r1, r11));
T(0x10020300, 0x00004652, AL, MOV(r2, r10));
T(0x10020302, 0x0000464b, AL, MOV(r3, r9));
T(0x10020304, 0x00002400, AL, MOVS(r4, 0x00));
T(0x10020306, 0x00001c25, AL, SUBS(r5, r4, 0x0);
T(0x10020308, 0x00001c26, AL, SUBS(r6, r4, 0x0);
T(0x1002030a, 0x00001c27, AL, SUBS(r7, r4, 0x0);
T(0x1002030c, 0x000046a0, AL, MOV(r8, r4));
T(0x1002030e, 0x000046a1, AL, MOV(r9, r4));
T(0x10020310, 0x000046a2, AL, MOV(r10, r4));
T(0x10020312, 0x000046a3, AL, MOV(r11, r4));
T(0x10020314, 0xf063fa30, AL, BL(0x10083778); /* 0x10020319 + 0x00000460, LR = 0x10020318 */);
T(0x10020318, 0xf19e10d0, AL, /* xxx -- LR = 0x1002031b + 0x19e000 = 0x101be31c */);

T(0x10083778, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x1008377a, 0x00001c16, AL, SUBS(r6, r2, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1008377c, 0x00001c0d, AL, SUBS(r5, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1008377e, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10083780, 0x00001c1f, AL, SUBS(r7, r3, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10083782, 0xf7dbf947, AL, BL(0x1005ea14); /* 0x10083787 + 0x0000028e, LR = 0x10083786 */);
T(0x10083786, 0x0000483b, AL, LDR(r0, PC, 0x00ec); /* [0x10083874]:0x1085d080 */);
T(0x10083788, 0x00007004, AL, STRB(r4, r0); /* [0x1085d080] */);
T(0x1008378a, 0x00006045, AL, STR(r5, r0, 0x004); /* [0x1085d084] */);
T(0x1008378c, 0x00003008, AL, ADDS(r0, 0x08));
T(0x1008378e, 0x0000c0c0, AL, STMIA(r0.WB, {......67}));
T(0x10083790, 0xf7ffff93, AL, BL(0x100836ba); /* 0x10083795 + 0x00000f26, LR = 0x10083794 */);
T(0x10083794, 0xf7ffff6e, AL, BL(0x10083674); /* 0x10083799 + 0x00000edc, LR = 0x10083798 */);
T(0x10083798, 0xf000f973, AL, BL(0x10083a82); /* 0x1008379d + 0x000002e6, LR = 0x1008379c */);
T(0x1008379c, 0xf7fffeea, AL, BL(0x10083574); /* 0x100837a1 + 0x00000dd4, LR = 0x100837a0 */);
T(0x100837a0, 0xf7fdf908, AL, BL(0x100809b4); /* 0x100837a5 + 0x00000210, LR = 0x100837a4 */);
T(0x100837a4, 0xf0e2e9c0, AL, BLX(0x10165b28); /* 0x100837a9 + 0x00000380, LR = 0x100837a8 */);
T(0x100837a8, 0xf034faf5, AL, BL(0x100b7d96); /* 0x100837ad + 0x000005ea, LR = 0x100837ac */);
T(0x100837ac, 0xf000f92c, AL, BL(0x10083a08); /* 0x100837b1 + 0x00000258, LR = 0x100837b0 */);
T(0x100837b0, 0xf000fa00, AL, BL(0x10083bb4); /* 0x100837b5 + 0x00000400, LR = 0x100837b4 */);
T(0x100837b4, 0xf030ff9e, AL, BL(0x100b46f4); /* 0x100837b9 + 0x00000f3c, LR = 0x100837b8 */);
T(0x100837b8, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x1005ea14, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x1005ea16, 0xf0a3f8c2, AL, BL(0x10101b9e); /* 0x1005ea1b + 0x00000184, LR = 0x1005ea1a */);
T(0x1005ea1a, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x100809b4, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x100809b6, 0xf7ffffef, AL, BL(0x10080998); /* 0x100809bb + 0x00000fde, LR = 0x100809ba */);
T(0x100809ba, 0x00004809, AL, LDR(r0, PC, 0x0024); /* [0x100809e0]:0x55555555 */);
T(0x100809bc, 0xf0e5e960, AL, BLX(0x10165c80); /* 0x100809c1 + 0x000002c0, LR = 0x100809c0 */);
T(0x100809c0, 0x00004806, AL, LDR(r0, PC, 0x0018); /* [0x100809dc]:0x10f00000 */);
T(0x100809c2, 0xf0e5e962, AL, BLX(0x10165c88); /* 0x100809c7 + 0x000002c4, LR = 0x100809c6 */);
T(0x100809c6, 0xf0e5e8ec, AL, BLX(0x10165ba0); /* 0x100809cb + 0x000001d8, LR = 0x100809ca */);
T(0x100809ca, 0x00004806, AL, LDR(r0, PC, 0x0018); /* [0x100809e4]:0x0005027b */);
T(0x100809cc, 0xf0e5e920, AL, BLX(0x10165c10); /* 0x100809d1 + 0x00000240, LR = 0x100809d0 */);
T(0x100809d0, 0xf0e5e8e6, AL, BLX(0x10165ba0); /* 0x100809d5 + 0x000001cc, LR = 0x100809d4 */);
T(0x100809d4, 0xf000f8d9, AL, BL(0x10080b8a); /* 0x100809d9 + 0x000001b2, LR = 0x100809d8 */);
T(0x100809d8, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x10080998, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x1008099a, 0x00002301, AL, MOVS(r3, 0x01));
T(0x1008099c, 0x0000031b, AL, LSL(r3, r3, 0x0c));
T(0x1008099e, 0x00004c0f, AL, LDR(r4, PC, 0x003c); /* [0x100809dc]:0x10f00000 */);
T(0x100809a0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100809a2, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100809a4, 0x00000082, AL, LSL(r2, r0, 0x02));
T(0x100809a6, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100809a8, 0x00004298, AL, CMP(r0, r3));
T(0x100809aa, 0x000050a1, AL, STR(r1, r4, r2));
T(0x100809ac, 0x0000dbfa, LT, B(0x100809a4); /* 0x100809b0 + 0xfffffff4 */);
T(0x100809ae, 0xf000f838, AL, BL(0x10080a22); /* 0x100809b3 + 0x00000070, LR = 0x100809b2 */);
T(0x100809b2, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x10080a22, 0x0000b5f0, AL, PUSH(rSP, r{....4567, LR}););
T(0x10080a24, 0x0000b085, AL, SUB(SP, 0x014));
T(0x10080a26, 0xf0e4ef68, AL, BLX(0x101658f8); /* 0x10080a2b + 0x00000ed0, LR = 0x10080a2a */);
T(0x10080a2a, 0xf0e4efc8, AL, BLX(0x101659bc); /* 0x10080a2f + 0x00000f90, LR = 0x10080a2e */);
T(0x10080a2e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10080a30, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080a32, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080a34, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080a36, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x10080a38, 0x00007018, AL, STRB(r0, r3));
T(0x10080a3a, 0x00000500, AL, LSL(r0, r0, 0x14));
T(0x10080a3c, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x10080a3e, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x10080a40, 0x000025c0, AL, MOVS(r5, 0xc0));
T(0x10080a42, 0x000043a8, AL, BIC(r0, r5));
T(0x10080a44, 0x00000880, AL, LSR(r0, r0, 0x02));
T(0x10080a46, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10080a48, 0x0000263c, AL, MOVS(r6, 0x3c));
T(0x10080a4a, 0x000043b0, AL, BIC(r0, r6));
T(0x10080a4c, 0x00003004, AL, ADDS(r0, 0x04));
T(0x10080a4e, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x10080a50, 0x00004668, AL, MOV(r0, SP));
T(0x10080a52, 0x0000466c, AL, MOV(r4, SP));
T(0x10080a54, 0xf7ffff46, AL, BL(0x100808e4); /* 0x10080a59 + 0x00000e8c, LR = 0x10080a58 */);
T(0x10080a58, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080a5a, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x10080a5c, 0x00007018, AL, STRB(r0, r3));
T(0x10080a5e, 0x00000500, AL, LSL(r0, r0, 0x14));
T(0x10080a60, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x10080a62, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x10080a64, 0x00004328, AL, ORR(r0, r5));
T(0x10080a66, 0x00000880, AL, LSR(r0, r0, 0x02));
T(0x10080a68, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10080a6a, 0x000043b0, AL, BIC(r0, r6));
T(0x10080a6c, 0x00003004, AL, ADDS(r0, 0x04));
T(0x10080a6e, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x10080a70, 0x00000528, AL, LSL(r0, r5, 0x14));
T(0x10080a72, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080a74, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080a76, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080a78, 0xf7ffff34, AL, BL(0x100808e4); /* 0x10080a7d + 0x00000e68, LR = 0x10080a7c */);
T(0x10080a7c, 0x00002005, AL, MOVS(r0, 0x05));
T(0x10080a7e, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x10080a80, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080a82, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080a84, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080a86, 0xf7ffff2d, AL, BL(0x100808e4); /* 0x10080a8b + 0x00000e5a, LR = 0x10080a8a */);
T(0x10080a8a, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080a8c, 0x000006c0, AL, LSL(r0, r0, 0x1b));
T(0x10080a8e, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080a90, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080a92, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080a94, 0xf7ffff26, AL, BL(0x100808e4); /* 0x10080a99 + 0x00000e4c, LR = 0x10080a98 */);
T(0x10080a98, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080a9a, 0x00000680, AL, LSL(r0, r0, 0x1a));
T(0x10080a9c, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080a9e, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080aa0, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080aa2, 0xf7ffff1f, AL, BL(0x100808e4); /* 0x10080aa7 + 0x00000e3e, LR = 0x10080aa6 */);
T(0x10080aa6, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080aa8, 0x00000740, AL, LSL(r0, r0, 0x1d));
T(0x10080aaa, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080aac, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080aae, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080ab0, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x10080ab2, 0x00007018, AL, STRB(r0, r3));
T(0x10080ab4, 0x00000500, AL, LSL(r0, r0, 0x14));
T(0x10080ab6, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x10080ab8, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x10080aba, 0x00004328, AL, ORR(r0, r5));
T(0x10080abc, 0x00000880, AL, LSR(r0, r0, 0x02));
T(0x10080abe, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10080ac0, 0x000043b0, AL, BIC(r0, r6));
T(0x10080ac2, 0x00003004, AL, ADDS(r0, 0x04));
T(0x10080ac4, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x10080ac6, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080ac8, 0xf7ffff0c, AL, BL(0x100808e4); /* 0x10080acd + 0x00000e18, LR = 0x10080acc */);
T(0x10080acc, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080ace, 0x00000700, AL, LSL(r0, r0, 0x1c));
T(0x10080ad0, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080ad2, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080ad4, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080ad6, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x10080ad8, 0x00007018, AL, STRB(r0, r3));
T(0x10080ada, 0x00000580, AL, LSL(r0, r0, 0x16));
T(0x10080adc, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x10080ade, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x10080ae0, 0x00002703, AL, MOVS(r7, 0x03));
T(0x10080ae2, 0x000043a8, AL, BIC(r0, r5));
T(0x10080ae4, 0x00004338, AL, ORR(r0, r7));
T(0x10080ae6, 0x000043b0, AL, BIC(r0, r6));
T(0x10080ae8, 0x00003004, AL, ADDS(r0, 0x04));
T(0x10080aea, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x10080aec, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080aee, 0xf7fffef9, AL, BL(0x100808e4); /* 0x10080af3 + 0x00000df2, LR = 0x10080af2 */);
T(0x10080af2, 0x00002041, AL, MOVS(r0, 0x41));
T(0x10080af4, 0x00000580, AL, LSL(r0, r0, 0x16));
T(0x10080af6, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080af8, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080afa, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080afc, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x10080afe, 0x00007018, AL, STRB(r0, r3));
T(0x10080b00, 0x0000200b, AL, MOVS(r0, 0x0b));
T(0x10080b02, 0x00000500, AL, LSL(r0, r0, 0x14));
T(0x10080b04, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x10080b06, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x10080b08, 0x00004328, AL, ORR(r0, r5));
T(0x10080b0a, 0x00004338, AL, ORR(r0, r7));
T(0x10080b0c, 0x000043b0, AL, BIC(r0, r6));
T(0x10080b0e, 0x00003004, AL, ADDS(r0, 0x04));
T(0x10080b10, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x10080b12, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080b14, 0xf7fffee6, AL, BL(0x100808e4); /* 0x10080b19 + 0x00000dcc, LR = 0x10080b18 */);
T(0x10080b18, 0x00002011, AL, MOVS(r0, 0x11));
T(0x10080b1a, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x10080b1c, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080b1e, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080b20, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080b22, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x10080b24, 0x00007018, AL, STRB(r0, r3));
T(0x10080b26, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x10080b28, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x10080b2a, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x10080b2c, 0x00004328, AL, ORR(r0, r5));
T(0x10080b2e, 0x00004338, AL, ORR(r0, r7));
T(0x10080b30, 0x000043b0, AL, BIC(r0, r6));
T(0x10080b32, 0x00003004, AL, ADDS(r0, 0x04));
T(0x10080b34, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x10080b36, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080b38, 0xf7fffed4, AL, BL(0x100808e4); /* 0x10080b3d + 0x00000da8, LR = 0x10080b3c */);
T(0x10080b3c, 0x00004815, AL, LDR(r0, PC, 0x0054); /* [0x10080b94]:0x10f00000 */);
T(0x10080b3e, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x10080b40, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080b42, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080b44, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080b46, 0x00007018, AL, STRB(r0, r3));
T(0x10080b48, 0x00000500, AL, LSL(r0, r0, 0x14));
T(0x10080b4a, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x10080b4c, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x10080b4e, 0x00004328, AL, ORR(r0, r5));
T(0x10080b50, 0x000043b8, AL, BIC(r0, r7));
T(0x10080b52, 0x000043b0, AL, BIC(r0, r6));
T(0x10080b54, 0x00003004, AL, ADDS(r0, 0x04));
T(0x10080b56, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x10080b58, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080b5a, 0xf7fffec3, AL, BL(0x100808e4); /* 0x10080b5f + 0x00000d86, LR = 0x10080b5e */);
T(0x10080b5e, 0x0000480e, AL, LDR(r0, PC, 0x0038); /* [0x10080b98]:0xfff00000 */);
T(0x10080b60, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x10080b62, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10080b64, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10080b66, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080b68, 0x00007018, AL, STRB(r0, r3));
T(0x10080b6a, 0x00000500, AL, LSL(r0, r0, 0x14));
T(0x10080b6c, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x10080b6e, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x10080b70, 0x00004328, AL, ORR(r0, r5));
T(0x10080b72, 0x000043b8, AL, BIC(r0, r7));
T(0x10080b74, 0x000043b0, AL, BIC(r0, r6));
T(0x10080b76, 0x00003004, AL, ADDS(r0, 0x04));
T(0x10080b78, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x10080b7a, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10080b7c, 0xf7fffeb2, AL, BL(0x100808e4); /* 0x10080b81 + 0x00000d64, LR = 0x10080b80 */);
T(0x10080b80, 0x00004902, AL, LDR(r1, PC, 0x0008); /* [0x10080b8c]:0x1085aca8 */);
T(0x10080b82, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10080b84, 0x00007008, AL, STRB(r0, r1); /* [0x1085aca8] */);
T(0x10080b86, 0x0000b005, AL, ADD(SP, 0x014));
T(0x10080b88, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x100808e4, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x100808e6, 0x00007803, AL, LDRB(r3, r0); /* [0x00000000] */);
T(0x100808e8, 0x00001d04, AL, SUBS(r4, r0, 0x4); /* 0x00000000 - 0x00000004 = 0xfffffffc */ XXX);
T(0x100808ea, 0x0000cc16, AL, LDMIA(r4.WB, {.12.4...}));
T(0x100808ec, 0x00002b01, AL, CMPS(r3, 0x01));
T(0x100808ee, 0x0000d140, NE, B(0x10080972); /* 0x100808f2 + 0x080 */);
T(0x100808f0, 0x000008ad, AL, LSR(r5, r5, 0x02));
T(0x100808f2, 0x000000ad, AL, LSL(r5, r5, 0x02));
T(0x100808f4, 0x00006900, AL, LDR(r0, r0, 0x010));
T(0x100808f6, 0x00003502, AL, ADDS(r5, 0x02));
T(0x100808f8, 0x00002604, AL, MOVS(r6, 0x04));
T(0x100808fa, 0x000043b5, AL, BIC(r5, r6));
T(0x100808fc, 0x000007c3, AL, LSL(r3, r0, 0x1f));
T(0x100808fe, 0x00000f5b, AL, LSR(r3, r3, 0x1d));
T(0x10080900, 0x0000431d, AL, ORR(r5, r3));
T(0x10080902, 0x00002608, AL, MOVS(r6, 0x08));
T(0x10080904, 0x000043b5, AL, BIC(r5, r6));
T(0x10080906, 0x00000783, AL, LSL(r3, r0, 0x1e));
T(0x10080908, 0x00000fdb, AL, LSR(r3, r3, 0x1f));
T(0x1008090a, 0x000000db, AL, LSL(r3, r3, 0x03));
T(0x1008090c, 0x0000432b, AL, ORR(r3, r5));
T(0x1008090e, 0x00002510, AL, MOVS(r5, 0x10));
T(0x10080910, 0x0000431d, AL, ORR(r5, r3));
T(0x10080912, 0x00000683, AL, LSL(r3, r0, 0x1a));
T(0x10080914, 0x000026ff, AL, MOVS(r6, 0xff));
T(0x10080916, 0x000036e1, AL, ADDS(r6, 0xe1));
T(0x10080918, 0x00000f1b, AL, LSR(r3, r3, 0x1c));
T(0x1008091a, 0x0000015b, AL, LSL(r3, r3, 0x05));
T(0x1008091c, 0x000043b5, AL, BIC(r5, r6));
T(0x1008091e, 0x0000432b, AL, ORR(r3, r5));
T(0x10080920, 0x00002501, AL, MOVS(r5, 0x01));
T(0x10080922, 0x0000026d, AL, LSL(r5, r5, 0x09));
T(0x10080924, 0x000043ab, AL, BIC(r3, r5));
T(0x10080926, 0x00002503, AL, MOVS(r5, 0x03));
T(0x10080928, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x1008092a, 0x00000f80, AL, LSR(r0, r0, 0x1e));
T(0x1008092c, 0x000002ad, AL, LSL(r5, r5, 0x0a));
T(0x1008092e, 0x000043ab, AL, BIC(r3, r5));
T(0x10080930, 0x00000280, AL, LSL(r0, r0, 0x0a));
T(0x10080932, 0x00004318, AL, ORR(r0, r3));
T(0x10080934, 0x000023ff, AL, MOVS(r3, 0xff));
T(0x10080936, 0x0000031b, AL, LSL(r3, r3, 0x0c));
T(0x10080938, 0x00004398, AL, BIC(r0, r3));
T(0x1008093a, 0x00000300, AL, LSL(r0, r0, 0x0c));
T(0x1008093c, 0x00000b00, AL, LSR(r0, r0, 0x0c));
T(0x1008093e, 0x0000050b, AL, LSL(r3, r1, 0x14));
T(0x10080940, 0x00004303, AL, ORR(r3, r0));
T(0x10080942, 0x00000510, AL, LSL(r0, r2, 0x14));
T(0x10080944, 0x00000d00, AL, LSR(r0, r0, 0x14));
T(0x10080946, 0x00000b12, AL, LSR(r2, r2, 0x0c));
T(0x10080948, 0x00000312, AL, LSL(r2, r2, 0x0c));
T(0x1008094a, 0x00001900, AL, SUBS(r0, r0, r4);
T(0x1008094c, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1008094e, 0x0000dd10, LE, B(0x10080972); /* 0x10080952 + 0x020 */);
T(0x10080950, 0x00002501, AL, MOVS(r5, 0x01));
T(0x10080952, 0x00004e22, AL, LDR(r6, PC, 0x0088); /* [0x100809dc]:0x10f00000 */);
T(0x10080954, 0x0000052d, AL, LSL(r5, r5, 0x14));
T(0x10080956, 0x00000d14, AL, LSR(r4, r2, 0x14));
T(0x10080958, 0x00000d0f, AL, LSR(r7, r1, 0x14));
T(0x1008095a, 0x0000031b, AL, LSL(r3, r3, 0x0c));
T(0x1008095c, 0x00000b1b, AL, LSR(r3, r3, 0x0c));
T(0x1008095e, 0x0000053f, AL, LSL(r7, r7, 0x14));
T(0x10080960, 0x000000a4, AL, LSL(r4, r4, 0x02));
T(0x10080962, 0x000019a4, AL, SUBS(r4, r4, r6);
T(0x10080964, 0x0000433b, AL, ORR(r3, r7));
T(0x10080966, 0x00001949, AL, SUBS(r1, r1, r5);
T(0x10080968, 0x00001952, AL, SUBS(r2, r2, r5);
T(0x1008096a, 0x00001b40, AL, ADDS(r0, r0, r5);
T(0x1008096c, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1008096e, 0x00006023, AL, STR(r3, r4));
T(0x10080970, 0x0000dcf1, GT, B(0x10080956); /* 0x10080974 + 0xffffffe2 */);

T(0x10080972, 0xf0e5e8da, AL, BLX(0x10165b28); /* 0x10080977 + 0x000001b4, LR = 0x10080976 */);
T(0x10080976, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10080b8a, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10083574, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x10083576, 0x00004c91, AL, LDR(r4, PC, 0x0244); /* [0x100837bc]:0xfffecb00 */);
T(0x10083578, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1008357a, 0x000043c9, AL, MVN(r1, r1));
T(0x1008357c, 0x00006061, AL, STR(r1, r4, 0x004); /* [0xfffecb04] */);
T(0x1008357e, 0x00000448, AL, LSL(r0, r1, 0x11));
T(0x10083580, 0x00006041, AL, STR(r1, r0, 0x004));
T(0x10083582, 0x00004e8f, AL, LDR(r6, PC, 0x023c); /* [0x100837c0]:0xfffe0100 */);
T(0x10083584, 0x00006071, AL, STR(r1, r6, 0x004); /* [0xfffe0104] */);
T(0x10083586, 0x0000488f, AL, LDR(r0, PC, 0x023c); /* [0x100837c4]:0xfffe0200 */);
T(0x10083588, 0x00006041, AL, STR(r1, r0, 0x004); /* [0xfffe0204] */);
T(0x1008358a, 0x00001c0a, AL, SUBS(r2, r1, 0x0);
T(0x1008358c, 0x0000498e, AL, LDR(r1, PC, 0x0238); /* [0x100837c8]:0xfffe0300 */);
T(0x1008358e, 0x0000604a, AL, STR(r2, r1, 0x004); /* [0xfffe0304] */);
T(0x10083590, 0x00004a8e, AL, LDR(r2, PC, 0x0238); /* [0x100837cc]:0xfffecb1c */);
T(0x10083592, 0x00002300, AL, MOVS(r3, 0x00));
T(0x10083594, 0x00002500, AL, MOVS(r5, 0x00));
T(0x10083596, 0x00006015, AL, STR(r5, r2); /* [0xfffecb1c] */);
T(0x10083598, 0x00003301, AL, ADDS(r3, 0x01));
T(0x1008359a, 0x0000061b, AL, LSL(r3, r3, 0x18));
T(0x1008359c, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x1008359e, 0x00003204, AL, ADDS(r2, 0x04));
T(0x100835a0, 0x00002b20, AL, CMPS(r3, 0x20));
T(0x100835a2, 0x0000d3f8, CC, B(0x10083596); /* 0x100835a6 + 0xfffffff0 */);
T(0x100835a4, 0x00004a8a, AL, LDR(r2, PC, 0x0228); /* [0x100837d0]:0xfffe001c */);
T(0x100835a6, 0x00002300, AL, MOVS(r3, 0x00));
T(0x100835a8, 0x00006015, AL, STR(r5, r2); /* [0xfffe001c] */);
T(0x100835aa, 0x00003301, AL, ADDS(r3, 0x01));
T(0x100835ac, 0x0000061b, AL, LSL(r3, r3, 0x18));
T(0x100835ae, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100835b0, 0x00003204, AL, ADDS(r2, 0x04));
T(0x100835b2, 0x00002b20, AL, CMPS(r3, 0x20));
T(0x100835b4, 0x0000d3f8, CC, B(0x100835a8); /* 0x100835b8 + 0xfffffff0 */);
T(0x100835b6, 0x00004a87, AL, LDR(r2, PC, 0x021c); /* [0x100837d4]:0xfffe011c */);
T(0x100835b8, 0x00002300, AL, MOVS(r3, 0x00));
T(0x100835ba, 0x00006015, AL, STR(r5, r2); /* [0xfffe011c] */);
T(0x100835bc, 0x00003301, AL, ADDS(r3, 0x01));
T(0x100835be, 0x0000061b, AL, LSL(r3, r3, 0x18));
T(0x100835c0, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100835c2, 0x00003204, AL, ADDS(r2, 0x04));
T(0x100835c4, 0x00002b20, AL, CMPS(r3, 0x20));
T(0x100835c6, 0x0000d3f8, CC, B(0x100835ba); /* 0x100835ca + 0xfffffff0 */);
T(0x100835c8, 0x00004a83, AL, LDR(r2, PC, 0x020c); /* [0x100837d8]:0xfffe021c */);
T(0x100835ca, 0x00002300, AL, MOVS(r3, 0x00));
T(0x100835cc, 0x00006015, AL, STR(r5, r2); /* [0xfffe021c] */);
T(0x100835ce, 0x00003301, AL, ADDS(r3, 0x01));
T(0x100835d0, 0x0000061b, AL, LSL(r3, r3, 0x18));
T(0x100835d2, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100835d4, 0x00003204, AL, ADDS(r2, 0x04));
T(0x100835d6, 0x00002b20, AL, CMPS(r3, 0x20));
T(0x100835d8, 0x0000d3f8, CC, B(0x100835cc); /* 0x100835dc + 0xfffffff0 */);
T(0x100835da, 0x00004a80, AL, LDR(r2, PC, 0x0200); /* [0x100837dc]:0xfffe031c */);
T(0x100835dc, 0x00002300, AL, MOVS(r3, 0x00));
T(0x100835de, 0x00006015, AL, STR(r5, r2); /* [0xfffe031c] */);
T(0x100835e0, 0x00003301, AL, ADDS(r3, 0x01));
T(0x100835e2, 0x0000061b, AL, LSL(r3, r3, 0x18));
T(0x100835e4, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100835e6, 0x00003204, AL, ADDS(r2, 0x04));
T(0x100835e8, 0x00002b20, AL, CMPS(r3, 0x20));
T(0x100835ea, 0x0000d3f8, CC, B(0x100835de); /* 0x100835ee + 0xfffffff0 */);
T(0x100835ec, 0x00004b7c, AL, LDR(r3, PC, 0x01f0); /* [0x100837e0]:0xfffecb40 */);
T(0x100835ee, 0x00002202, AL, MOVS(r2, 0x02));
T(0x100835f0, 0x0000629a, AL, STR(r2, r3, 0x028); /* [0xfffecb68] */);
T(0x100835f2, 0x000062da, AL, STR(r2, r3, 0x02c); /* [0xfffecb6c] */);
T(0x100835f4, 0x0000631a, AL, STR(r2, r3, 0x030); /* [0xfffecb70] */);
T(0x100835f6, 0x0000635a, AL, STR(r2, r3, 0x034); /* [0xfffecb74] */);
T(0x100835f8, 0x0000639a, AL, STR(r2, r3, 0x038); /* [0xfffecb78] */);
T(0x100835fa, 0x000063da, AL, STR(r2, r3, 0x03c); /* [0xfffecb7c] */);
T(0x100835fc, 0x00004b79, AL, LDR(r3, PC, 0x01e4); /* [0x100837e4]:0xfffe0140 */);
T(0x100835fe, 0x0000631a, AL, STR(r2, r3, 0x030); /* [0xfffe0170] */);
T(0x10083600, 0x0000635a, AL, STR(r2, r3, 0x034); /* [0xfffe0174] */);
T(0x10083602, 0x0000639a, AL, STR(r2, r3, 0x038); /* [0xfffe0178] */);
T(0x10083604, 0x000063da, AL, STR(r2, r3, 0x03c); /* [0xfffe017c] */);
T(0x10083606, 0x00004b78, AL, LDR(r3, PC, 0x01e0); /* [0x100837e8]:0xfffe0180 */);
T(0x10083608, 0x0000601a, AL, STR(r2, r3); /* [0xfffe0180] */);
T(0x1008360a, 0x0000605a, AL, STR(r2, r3, 0x004); /* [0xfffe0184] */);
T(0x1008360c, 0x0000609a, AL, STR(r2, r3, 0x008); /* [0xfffe0188] */);
T(0x1008360e, 0x000060da, AL, STR(r2, r3, 0x00c); /* [0xfffe018c] */);
T(0x10083610, 0x0000611a, AL, STR(r2, r3, 0x010); /* [0xfffe0190] */);
T(0x10083612, 0x0000615a, AL, STR(r2, r3, 0x014); /* [0xfffe0194] */);
T(0x10083614, 0x00004b75, AL, LDR(r3, PC, 0x01d4); /* [0x100837ec]:0xfffecb80 */);
T(0x10083616, 0x0000601a, AL, STR(r2, r3); /* [0xfffecb80] */);
T(0x10083618, 0x00004b71, AL, LDR(r3, PC, 0x01c4); /* [0x100837e0]:0xfffecb40 */);
T(0x1008361a, 0x0000621a, AL, STR(r2, r3, 0x020); /* [0xfffecb60] */);
T(0x1008361c, 0x0000625a, AL, STR(r2, r3, 0x024); /* [0xfffecb64] */);
T(0x1008361e, 0x00006272, AL, STR(r2, r6, 0x024); /* [0xfffe0124] */);
T(0x10083620, 0x00004b67, AL, LDR(r3, PC, 0x019c); /* [0x100837c0]:0xfffe0100 */);
T(0x10083622, 0x0000629a, AL, STR(r2, r3, 0x028); /* [0xfffe0128] */);
T(0x10083624, 0x000062da, AL, STR(r2, r3, 0x02c); /* [0xfffe012c] */);
T(0x10083626, 0x00006025, AL, STR(r5, r4); /* [0xfffecb00] */);
T(0x10083628, 0x00004b71, AL, LDR(r3, PC, 0x01c4); /* [0x100837f0]:0xfffe0000 */);
T(0x1008362a, 0x0000601d, AL, STR(r5, r3); /* [0xfffe0000] */);
T(0x1008362c, 0x00004e64, AL, LDR(r6, PC, 0x0190); /* [0x100837c0]:0xfffe0100 */);
T(0x1008362e, 0x00006035, AL, STR(r5, r6); /* [0xfffe0100] */);
T(0x10083630, 0x00006005, AL, STR(r5, r0); /* [0xfffe0200] */);
T(0x10083632, 0x0000600d, AL, STR(r5, r1); /* [0xfffe0300] */);
T(0x10083634, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10083636, 0x00006198, AL, STR(r0, r3, 0x018); /* [0xfffe0018] */);
T(0x10083638, 0x000061a0, AL, STR(r0, r4, 0x018); /* [0xfffecb18] */);
T(0x1008363a, 0x0000619a, AL, STR(r2, r3, 0x018); /* [0xfffe0018] */);
T(0x1008363c, 0x000061a2, AL, STR(r2, r4, 0x018); /* [0xfffecb18] */);
T(0x1008363e, 0x000061e2, AL, STR(r2, r4, 0x01c); /* [0xfffecb1c] */);
T(0x10083640, 0x00002003, AL, MOVS(r0, 0x03));
T(0x10083642, 0x00006260, AL, STR(r0, r4, 0x024); /* [0xfffecb24] */);
T(0x10083644, 0xf0dfec58, AL, BLX(0x10162ef8); /* 0x10083649 + 0x000008b0, LR = 0x10083648 */);
T(0x10083648, 0x00001431, AL, ASR(r1, r6, 0x10));
T(0x1008364a, 0x00006021, AL, STR(r1, r4); /* [0xfffecb00] */);
T(0x1008364c, 0x00006861, AL, LDR(r1, r4, 0x004); /* [0xfffecb04] */);
T(0x1008364e, 0x00000849, AL, LSR(r1, r1, 0x01));
T(0x10083650, 0x00000049, AL, LSL(r1, r1, 0x01));
T(0x10083652, 0x00006061, AL, STR(r1, r4, 0x004); /* [0xfffecb04] */);
T(0x10083654, 0xf0dfec58, AL, BLX(0x10162f08); /* 0x10083659 + 0x000008b0, LR = 0x10083658 */);
T(0x10083658, 0xf0dfec4e, AL, BLX(0x10162ef8); /* 0x1008365d + 0x0000089c, LR = 0x1008365c */);
T(0x1008365c, 0x00002104, AL, MOVS(r1, 0x04));
T(0x1008365e, 0x000043c9, AL, MVN(r1, r1));
T(0x10083660, 0x00006021, AL, STR(r1, r4); /* [0xfffecb00] */);
T(0x10083662, 0x00006861, AL, LDR(r1, r4, 0x004); /* [0xfffecb04] */);
T(0x10083664, 0x00002204, AL, MOVS(r2, 0x04));
T(0x10083666, 0x00004391, AL, BIC(r1, r2));
T(0x10083668, 0x00006061, AL, STR(r1, r4, 0x004); /* [0xfffecb04] */);
T(0x1008366a, 0xf0dfec4e, AL, BLX(0x10162f08); /* 0x1008366f + 0x0000089c, LR = 0x1008366e */);
T(0x1008366e, 0xf0dfec38, AL, BLX(0x10162ee0); /* 0x10083673 + 0x00000870, LR = 0x10083672 */);
T(0x10083672, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x10083674, 0x0000b430, AL, PUSH(rSP, r{....45..}););
T(0x10083676, 0x00002501, AL, MOVS(r5, 0x01));
T(0x10083678, 0x0000076d, AL, LSL(r5, r5, 0x1d));
T(0x1008367a, 0x00001c2b, AL, SUBS(r3, r5, 0x0);
T(0x1008367c, 0x00004c5d, AL, LDR(r4, PC, 0x0174); /* [0x100837f4]:0xe59ff000 */);
T(0x1008367e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10083680, 0x00003364, AL, ADDS(r3, 0x64));
T(0x10083682, 0x00001941, AL, SUBS(r1, r0, r5);
T(0x10083684, 0x000018c2, AL, SUBS(r2, r0, r3);
T(0x10083686, 0x00001a52, AL, ADDS(r2, r2, r1);
T(0x10083688, 0x00003a08, AL, SUBS(r2, 0x08));
T(0x1008368a, 0x00004322, AL, ORR(r2, r4));
T(0x1008368c, 0x00003004, AL, ADDS(r0, 0x04));
T(0x1008368e, 0x0000281c, AL, CMPS(r0, 0x1c));
T(0x10083690, 0x0000600a, AL, STR(r2, r1));
T(0x10083692, 0x0000d3f6, CC, B(0x10083682); /* 0x10083696 + 0xffffffec */);
T(0x10083694, 0x00004958, AL, LDR(r1, PC, 0x0160); /* [0x100837f8]:0x101653fc */);
T(0x10083696, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10083698, 0x000018c2, AL, SUBS(r2, r0, r3);
T(0x1008369a, 0x00003004, AL, ADDS(r0, 0x04));
T(0x1008369c, 0x0000281c, AL, CMPS(r0, 0x1c));
T(0x1008369e, 0x00006011, AL, STR(r1, r2));
T(0x100836a0, 0x0000d3fa, CC, B(0x10083698); /* 0x100836a4 + 0xfffffff4 */);
T(0x100836a2, 0x00004a56, AL, LDR(r2, PC, 0x0158); /* [0x100837fc]:0x10165420 */);
T(0x100836a4, 0x00004856, AL, LDR(r0, PC, 0x0158); /* [0x10083800]:0x20000040 */);
T(0x100836a6, 0x00006242, AL, STR(r2, r0, 0x024); /* [0x20000064] */);
T(0x100836a8, 0x00006281, AL, STR(r1, r0, 0x028); /* [0x20000068] */);
T(0x100836aa, 0x00004956, AL, LDR(r1, PC, 0x0158); /* [0x10083804]:0x101653d8 */);
T(0x100836ac, 0x000062c1, AL, STR(r1, r0, 0x02c); /* [0x2000006c] */);
T(0x100836ae, 0x00004956, AL, LDR(r1, PC, 0x0158); /* [0x10083808]:0x101653b4 */);
T(0x100836b0, 0x00006301, AL, STR(r1, r0, 0x030); /* [0x20000070] */);
T(0x100836b2, 0x00004956, AL, LDR(r1, PC, 0x0158); /* [0x1008380c]:0x101654e4 */);
T(0x100836b4, 0x00006381, AL, STR(r1, r0, 0x038); /* [0x20000078] */);
T(0x100836b6, 0x0000bc30, AL, POP(rSP, r{....45..}););
T(0x100836b8, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100836ba, 0x00002101, AL, MOVS(r1, 0x01));
T(0x100836bc, 0x00004854, AL, LDR(r0, PC, 0x0150); /* [0x10083810]:0xfffe1000 */);
T(0x100836be, 0x000004c9, AL, LSL(r1, r1, 0x13));
T(0x100836c0, 0x00006101, AL, STR(r1, r0, 0x010); /* [0xfffe1010] */);
T(0x100836c2, 0x00000401, AL, LSL(r1, r0, 0x10));
T(0x100836c4, 0x00006141, AL, STR(r1, r0, 0x014); /* [0xfffe1014] */);
T(0x100836c6, 0x00004953, AL, LDR(r1, PC, 0x014c); /* [0x10083814]:0x00012480 */);
T(0x100836c8, 0x00006181, AL, STR(r1, r0, 0x018); /* [0xfffe1018] */);
T(0x100836ca, 0x00004953, AL, LDR(r1, PC, 0x014c); /* [0x10083818]:0x00010003 */);
T(0x100836cc, 0x000061c1, AL, STR(r1, r0, 0x01c); /* [0xfffe101c] */);
T(0x100836ce, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100836d0, 0x00006201, AL, STR(r1, r0, 0x020); /* [0xfffe1020] */);
T(0x100836d2, 0x00002103, AL, MOVS(r1, 0x03));
T(0x100836d4, 0x000006c9, AL, LSL(r1, r1, 0x1b));
T(0x100836d6, 0x00006241, AL, STR(r1, r0, 0x024); /* [0xfffe1024] */);
T(0x100836d8, 0x00004950, AL, LDR(r1, PC, 0x0140); /* [0x1008381c]:0x1224201b */);
T(0x100836da, 0x00006281, AL, STR(r1, r0, 0x028); /* [0xfffe1028] */);
T(0x100836dc, 0x00002169, AL, MOVS(r1, 0x69));
T(0x100836de, 0x000001c9, AL, LSL(r1, r1, 0x07));
T(0x100836e0, 0x000062c1, AL, STR(r1, r0, 0x02c); /* [0xfffe102c] */);
T(0x100836e2, 0x0000494f, AL, LDR(r1, PC, 0x013c); /* [0x10083820]:0x00092690 */);
T(0x100836e4, 0x00006301, AL, STR(r1, r0, 0x030); /* [0xfffe1030] */);
T(0x100836e6, 0x0000494f, AL, LDR(r1, PC, 0x013c); /* [0x10083824]:0x00080003 */);
T(0x100836e8, 0x00006341, AL, STR(r1, r0, 0x034); /* [0xfffe1034] */);
T(0x100836ea, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100836ec, 0x00006381, AL, STR(r1, r0, 0x038); /* [0xfffe1038] */);
T(0x100836ee, 0x0000484e, AL, LDR(r0, PC, 0x0138); /* [0x10083828]:0xfffe1080 */);
T(0x100836f0, 0x00006101, AL, STR(r1, r0, 0x010); /* [0xfffe1090] */);
T(0x100836f2, 0x00002101, AL, MOVS(r1, 0x01));
T(0x100836f4, 0x00000309, AL, LSL(r1, r1, 0x0c));
T(0x100836f6, 0x00006141, AL, STR(r1, r0, 0x014); /* [0xfffe1094] */);
T(0x100836f8, 0x00002190, AL, MOVS(r1, 0x90));
T(0x100836fa, 0x00006181, AL, STR(r1, r0, 0x018); /* [0xfffe1098] */);
T(0x100836fc, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100836fe, 0x000061c1, AL, STR(r1, r0, 0x01c); /* [0xfffe109c] */);
T(0x10083700, 0x00006201, AL, STR(r1, r0, 0x020); /* [0xfffe10a0] */);
T(0x10083702, 0x00004a4a, AL, LDR(r2, PC, 0x0128); /* [0x1008382c]:0xfffe1040 */);
T(0x10083704, 0x00002106, AL, MOVS(r1, 0x06));
T(0x10083706, 0x00006251, AL, STR(r1, r2, 0x024); /* [0xfffe1064] */);
T(0x10083708, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1008370a, 0x00006011, AL, STR(r1, r2); /* [0xfffe1040] */);
T(0x1008370c, 0x000021ff, AL, MOVS(r1, 0xff));
T(0x1008370e, 0x00003101, AL, ADDS(r1, 0x01));
T(0x10083710, 0x00006051, AL, STR(r1, r2, 0x004); /* [0xfffe1044] */);
T(0x10083712, 0x00004b47, AL, LDR(r3, PC, 0x011c); /* [0x10083830]:0xd4442a5d */);
T(0x10083714, 0x00006093, AL, STR(r3, r2, 0x008); /* [0xfffe1048] */);
T(0x10083716, 0x00004b47, AL, LDR(r3, PC, 0x011c); /* [0x10083834]:0xfffffefd */);
T(0x10083718, 0x000060d3, AL, STR(r3, r2, 0x00c); /* [0xfffe104c] */);
T(0x1008371a, 0x00004a47, AL, LDR(r2, PC, 0x011c); /* [0x10083838]:0x87fffff7 */);
T(0x1008371c, 0x000062c2, AL, STR(r2, r0, 0x02c); /* [0xfffe10ac] */);
T(0x1008371e, 0x00000442, AL, LSL(r2, r0, 0x11));
T(0x10083720, 0x00006342, AL, STR(r2, r0, 0x034); /* [0xfffe10b4] */);
T(0x10083722, 0x00004a46, AL, LDR(r2, PC, 0x0118); /* [0x1008383c]:0x06030400 */);
T(0x10083724, 0x00006382, AL, STR(r2, r0, 0x038); /* [0xfffe10b8] */);
T(0x10083726, 0x00004a46, AL, LDR(r2, PC, 0x0118); /* [0x10083840]:0x003dd400 */);
T(0x10083728, 0x000063c2, AL, STR(r2, r0, 0x03c); /* [0xfffe10bc] */);
T(0x1008372a, 0x00004846, AL, LDR(r0, PC, 0x0118); /* [0x10083844]:0xfffe10c0 */);
T(0x1008372c, 0x00006001, AL, STR(r1, r0); /* [0xfffe10c0] */);
T(0x1008372e, 0x00002208, AL, MOVS(r2, 0x08));
T(0x10083730, 0x00006042, AL, STR(r2, r0, 0x004); /* [0xfffe10c4] */);
T(0x10083732, 0x00004845, AL, LDR(r0, PC, 0x0114); /* [0x10083848]:0xfffbe400 */);
T(0x10083734, 0x00006b02, AL, LDR(r2, r0, 0x030); /* [0xfffbe430] */);
T(0x10083736, 0x00004b45, AL, LDR(r3, PC, 0x0114); /* [0x1008384c]:0xffff7efb */);
T(0x10083738, 0x0000401a, AL, AND(r2, r3));
T(0x1008373a, 0x00004b45, AL, LDR(r3, PC, 0x0114); /* [0x10083850]:0x00004050 */);
T(0x1008373c, 0x00004313, AL, ORR(r3, r2));
T(0x1008373e, 0x00004a45, AL, LDR(r2, PC, 0x0114); /* [0x10083854]:0xffff2e2b */);
T(0x10083740, 0x00006303, AL, STR(r3, r0, 0x030); /* [0xfffbe430] */);
T(0x10083742, 0x00006342, AL, STR(r2, r0, 0x034); /* [0xfffbe434] */);
T(0x10083744, 0x00004844, AL, LDR(r0, PC, 0x0110); /* [0x10083858]:0xfffbec00 */);
T(0x10083746, 0x00006b02, AL, LDR(r2, r0, 0x030); /* [0xfffbec30] */);
T(0x10083748, 0x00004b44, AL, LDR(r3, PC, 0x0110); /* [0x1008385c]:0xfffff7fa */);
T(0x1008374a, 0x0000401a, AL, AND(r2, r3));
T(0x1008374c, 0x00002302, AL, MOVS(r3, 0x02));
T(0x1008374e, 0x00004313, AL, ORR(r3, r2));
T(0x10083750, 0x00004a43, AL, LDR(r2, PC, 0x010c); /* [0x10083860]:0xffff77f8 */);
T(0x10083752, 0x00006303, AL, STR(r3, r0, 0x030); /* [0xfffbec30] */);
T(0x10083754, 0x00006342, AL, STR(r2, r0, 0x034); /* [0xfffbec34] */);
T(0x10083756, 0x00004843, AL, LDR(r0, PC, 0x010c); /* [0x10083864]:0xfffbb400 */);
T(0x10083758, 0x00006b02, AL, LDR(r2, r0, 0x030); /* [0xfffbb430] */);
T(0x1008375a, 0x00002303, AL, MOVS(r3, 0x03));
T(0x1008375c, 0x0000029b, AL, LSL(r3, r3, 0x0a));
T(0x1008375e, 0x0000439a, AL, BIC(r2, r3));
T(0x10083760, 0x00002340, AL, MOVS(r3, 0x40));
T(0x10083762, 0x00004313, AL, ORR(r3, r2));
T(0x10083764, 0x00004a40, AL, LDR(r2, PC, 0x0100); /* [0x10083868]:0xfffff030 */);
T(0x10083766, 0x00006303, AL, STR(r3, r0, 0x030); /* [0xfffbb430] */);
T(0x10083768, 0x00006342, AL, STR(r2, r0, 0x034); /* [0xfffbb434] */);
T(0x1008376a, 0x00004840, AL, LDR(r0, PC, 0x0100); /* [0x1008386c]:0xfffbbc00 */);
T(0x1008376c, 0x00006b02, AL, LDR(r2, r0, 0x030); /* [0xfffbbc30] */);
T(0x1008376e, 0x0000430a, AL, ORR(r2, r1));
T(0x10083770, 0x0000493f, AL, LDR(r1, PC, 0x00fc); /* [0x10083870]:0xfffffefb */);
T(0x10083772, 0x00006302, AL, STR(r2, r0, 0x030); /* [0xfffbbc30] */);
T(0x10083774, 0x00006341, AL, STR(r1, r0, 0x034); /* [0xfffbbc34] */);
T(0x10083776, 0x00004770, AL, BX(LR); /* 0xfffffefb */);

T(0x10083a08, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x10083a0a, 0xf7ffff7a, AL, BL(0x10083902); /* 0x10083a0f + 0x00000ef4, LR = 0x10083a0e */);
T(0x10083a0e, 0xf7fffdb0, AL, BL(0x10083572); /* 0x10083a13 + 0x00000b60, LR = 0x10083a12 */);
T(0x10083a12, 0xf7f9f837, AL, BL(0x1007ca84); /* 0x10083a17 + 0x0000006e, LR = 0x10083a16 */);
T(0x10083a16, 0xf000fc22, AL, BL(0x1008425e); /* 0x10083a1b + 0x00000844, LR = 0x10083a1a */);
T(0x10083a1a, 0xf7fcfb67, AL, BL(0x100800ec); /* 0x10083a1f + 0x000006ce, LR = 0x10083a1e */);
T(0x10083a1e, 0xf7f9fd7d, AL, BL(0x1007d51c); /* 0x10083a23 + 0x00000afa, LR = 0x10083a22 */);
T(0x10083a22, 0xf7fafd29, AL, BL(0x1007e478); /* 0x10083a27 + 0x00000a52, LR = 0x10083a26 */);
T(0x10083a26, 0xf7fcfa0b, AL, BL(0x1007fe40); /* 0x10083a2b + 0x00000416, LR = 0x10083a2a */);
T(0x10083a2a, 0xf002fe31, AL, BL(0x10086690); /* 0x10083a2f + 0x00000c62, LR = 0x10083a2e */);
T(0x10083a2e, 0xf7f9f8f9, AL, BL(0x1007cc24); /* 0x10083a33 + 0x000001f2, LR = 0x10083a32 */);
T(0x10083a32, 0xf003f809, AL, BL(0x10086a48); /* 0x10083a37 + 0x00000012, LR = 0x10083a36 */);
T(0x10083a36, 0xf7f8f84a, AL, BL(0x1007bace); /* 0x10083a3b + 0x00000094, LR = 0x10083a3a */);
T(0x10083a3a, 0x0000484e, AL, LDR(r0, PC, 0x0138); /* [0x10083b74]:0x1085d080 */);
T(0x10083a3c, 0x0000493b, AL, LDR(r1, PC, 0x00ec); /* [0x10083b2c]:0x1085d084 */);
T(0x10083a3e, 0x00007800, AL, LDRB(r0, r0));
T(0x10083a40, 0x00006809, AL, LDR(r1, r1));
T(0x10083a42, 0x00004308, AL, ORR(r0, r1));
T(0x10083a44, 0x0000d10a, NE, B(0x10083a5c); /* 0x10083a48 + 0x014 */);
T(0x10083a46, 0xf7fffa84, AL, BL(0x10082f52); /* 0x10083a4b + 0x00000508, LR = 0x10083a4a */);
T(0x10083a4a, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10083a4c, 0x0000d106, NE, B(0x10083a5c); /* 0x10083a50 + 0x00c */);
T(0x10083a4e, 0xf7fffa8a, AL, BL(0x10082f66); /* 0x10083a53 + 0x00000514, LR = 0x10083a52 */);
T(0x10083a52, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10083a54, 0x0000d002, EQ, B(0x10083a5c); /* 0x10083a58 + 0x004 */);
T(0x10083a56, 0x00002004, AL, MOVS(r0, 0x04));
T(0x10083a58, 0xf7ffff38, AL, BL(0x100838cc); /* 0x10083a5d + 0x00000e70, LR = 0x10083a5c */);

T(0x1007bace, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x1007bad0, 0x00004c19, AL, LDR(r4, PC, 0x0064); /* [0x1007bb38]:0x105fbc08 */);
T(0x1007bad2, 0x00004919, AL, LDR(r1, PC, 0x0064); /* [0x1007bb38]:0x105fbc08 */);
T(0x1007bad4, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007bad6, 0x00006108, AL, STR(r0, r1, 0x010); /* [0x105fbc18] */);
T(0x1007bad8, 0x00003428, AL, ADDS(r4, 0x28));
T(0x1007bada, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007badc, 0xf0ebfeba, AL, BL(0x10167854); /* 0x1007bae1 + 0x00000d74, LR = 0x1007bae0 */);
T(0x1007bae0, 0x0000a01b, AL, ADD(r0, PC, 0x06c); /* 0x1007bb50 */));
T(0x1007bae2, 0x00006120, AL, STR(r0, r4, 0x010));
T(0x1007bae4, 0xf000f932, AL, BL(0x1007bd4c); /* 0x1007bae9 + 0x00000264, LR = 0x1007bae8 */);
T(0x1007bae8, 0xf7ffff64, AL, BL(0x1007b9b4); /* 0x1007baed + 0x00000ec8, LR = 0x1007baec */);
T(0x1007baec, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1007b9b4, 0x00004860, AL, LDR(r0, PC, 0x0180); /* [0x1007bb38]:0x105fbc08 */);
T(0x1007b9b6, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x1007b9b8, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1007b9ba, 0x00007001, AL, STRB(r1, r0); /* [0x105fbc08] */);
T(0x1007b9bc, 0x000080c1, AL, STRH(r1, r0, 0x006); /* [0x105fbc0e] */);
T(0x1007b9be, 0x00007081, AL, STRB(r1, r0, 0x002); /* [0x105fbc0a] */);
T(0x1007b9c0, 0x00008101, AL, STRH(r1, r0, 0x008); /* [0x105fbc10] */);
T(0x1007b9c2, 0x00008141, AL, STRH(r1, r0, 0x00a); /* [0x105fbc12] */);
T(0x1007b9c4, 0x000070c1, AL, STRB(r1, r0, 0x003); /* [0x105fbc0b] */);
T(0x1007b9c6, 0x00007101, AL, STRB(r1, r0, 0x004); /* [0x105fbc0c] */);
T(0x1007b9c8, 0x00007141, AL, STRB(r1, r0, 0x005); /* [0x105fbc0d] */);
T(0x1007b9ca, 0x0000228f, AL, MOVS(r2, 0x8f));
T(0x1007b9cc, 0x000060c2, AL, STR(r2, r0, 0x00c); /* [0x105fbc14] */);
T(0x1007b9ce, 0x00007041, AL, STRB(r1, r0, 0x001); /* [0x105fbc09] */);
T(0x1007b9d0, 0x0000495a, AL, LDR(r1, PC, 0x0168); /* [0x1007bb3c]:0xfffbe4c0 */);
T(0x1007b9d2, 0x00002010, AL, MOVS(r0, 0x10));
T(0x1007b9d4, 0x00006308, AL, STR(r0, r1, 0x030); /* [0xfffbe4f0] */);
T(0x1007b9d6, 0x0000495a, AL, LDR(r1, PC, 0x0168); /* [0x1007bb40]:0xfffbe480 */);
T(0x1007b9d8, 0x00002040, AL, MOVS(r0, 0x40));
T(0x1007b9da, 0x00006308, AL, STR(r0, r1, 0x030); /* [0xfffbe4b0] */);
T(0x1007b9dc, 0x00002101, AL, MOVS(r1, 0x01));
T(0x1007b9de, 0x00002005, AL, MOVS(r0, 0x05));
T(0x1007b9e0, 0xf7fffd82, AL, BL(0x1007b4e8); /* 0x1007b9e5 + 0x00000b04, LR = 0x1007b9e4 */);
T(0x1007b9e4, 0x00004c57, AL, LDR(r4, PC, 0x015c); /* [0x1007bb44]:0x102c747c */);
T(0x1007b9e6, 0x00007960, AL, LDRB(r0, r4, 0x005); /* [0x102c7481] */);
T(0x1007b9e8, 0xf000f9eb, AL, BL(0x1007bdc2); /* 0x1007b9ed + 0x000003d6, LR = 0x1007b9ec */);
T(0x1007b9ec, 0x00001c01, AL, SUBS(r1, r0, 0x0);
T(0x1007b9ee, 0x00002005, AL, MOVS(r0, 0x05));
T(0x1007b9f0, 0xf7fffe3c, AL, BL(0x1007b66c); /* 0x1007b9f5 + 0x00000c78, LR = 0x1007b9f4 */);
T(0x1007b9f4, 0x00002101, AL, MOVS(r1, 0x01));
T(0x1007b9f6, 0x00002006, AL, MOVS(r0, 0x06));
T(0x1007b9f8, 0xf7fffd76, AL, BL(0x1007b4e8); /* 0x1007b9fd + 0x00000aec, LR = 0x1007b9fc */);
T(0x1007b9fc, 0x000079a0, AL, LDRB(r0, r4, 0x006); /* [0x102c7482] */);
T(0x1007b9fe, 0xf000f9e0, AL, BL(0x1007bdc2); /* 0x1007ba03 + 0x000003c0, LR = 0x1007ba02 */);
T(0x1007ba02, 0x00001c01, AL, SUBS(r1, r0, 0x0);
T(0x1007ba04, 0x00002006, AL, MOVS(r0, 0x06));
T(0x1007ba06, 0xf7fffe31, AL, BL(0x1007b66c); /* 0x1007ba0b + 0x00000c62, LR = 0x1007ba0a */);
T(0x1007ba0a, 0x00002101, AL, MOVS(r1, 0x01));
T(0x1007ba0c, 0x00002004, AL, MOVS(r0, 0x04));
T(0x1007ba0e, 0xf7fffd6b, AL, BL(0x1007b4e8); /* 0x1007ba13 + 0x00000ad6, LR = 0x1007ba12 */);
T(0x1007ba12, 0x00007920, AL, LDRB(r0, r4, 0x004); /* [0x102c7480] */);
T(0x1007ba14, 0xf000f9d5, AL, BL(0x1007bdc2); /* 0x1007ba19 + 0x000003aa, LR = 0x1007ba18 */);
T(0x1007ba18, 0x00001c01, AL, SUBS(r1, r0, 0x0);
T(0x1007ba1a, 0x00004a4b, AL, LDR(r2, PC, 0x012c); /* [0x1007bb48]:0x1085d074 */);
T(0x1007ba1c, 0x00002003, AL, MOVS(r0, 0x03));
T(0x1007ba1e, 0x00007010, AL, STRB(r0, r2); /* [0x1085d074] */);
T(0x1007ba20, 0x00004a4a, AL, LDR(r2, PC, 0x0128); /* [0x1007bb4c]:0x1085d075 */);
T(0x1007ba22, 0x0000202b, AL, MOVS(r0, 0x2b));
T(0x1007ba24, 0x00007010, AL, STRB(r0, r2); /* [0x1085d075] */);
T(0x1007ba26, 0x00002004, AL, MOVS(r0, 0x04));
T(0x1007ba28, 0xf7fffe20, AL, BL(0x1007b66c); /* 0x1007ba2d + 0x00000c40, LR = 0x1007ba2c */);
T(0x1007ba2c, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1007b4e8, 0x00002808, AL, CMPS(r0, 0x08));
T(0x1007b4ea, 0x0000d218, CS, B(0x1007b51e); /* 0x1007b4ee + 0x030 */);
T(0x1007b4ec, 0x0000a301, AL, ADD(r3, PC, 0x004); /* 0x1007b4f4 */));
T(0x1007b4ee, 0x00005c1b, AL, LDRB(r3, r3, r0));
T(0x1007b4f0, 0x0000005b, AL, LSL(r3, r3, 0x01));
T(0x1007b4f2, 0x0000449f, AL, ADD(PC, r3));

T(0x1007b51e, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1007b66c, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x1007b66e, 0x00004b8b, AL, LDR(r3, PC, 0x022c); /* [0x1007b89c]:0x00000ce4 */);
T(0x1007b670, 0x00001c0d, AL, SUBS(r5, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007b672, 0x00004359, AL, MUL(r1, r3));
T(0x1007b674, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1007b676, 0x00000189, AL, LSL(r1, r1, 0x06));
T(0x1007b678, 0x00000c0e, AL, LSR(r6, r1, 0x10));
T(0x1007b67a, 0x00002808, AL, CMPS(r0, 0x08));
T(0x1007b67c, 0x0000b082, AL, SUB(SP, 0x008));
T(0x1007b67e, 0x0000d204, CS, B(0x1007b68a); /* 0x1007b682 + 0x008 */);
T(0x1007b680, 0x0000a302, AL, ADD(r3, PC, 0x008); /* 0x1007b68c */));
T(0x1007b682, 0x0000181b, AL, SUBS(r3, r3, r0);
T(0x1007b684, 0x00005a1b, AL, LDRH(r3, r3, r0));
T(0x1007b686, 0x0000005b, AL, LSL(r3, r3, 0x01));
T(0x1007b688, 0x0000449f, AL, ADD(PC, r3));

T(0x1007b68a, 0x0000e0c9, AL, B(0x1007b81e); /* 0x1007b68d + 0x192*/);

T(0x1007b81e, 0x0000e000, AL, B(0x1007b820); /* 0x1007b821 + 0x000*/);

T(0x1007bd4c, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x1007bd4e, 0x00004c30, AL, LDR(r4, PC, 0x00c0); /* [0x1007be10]:0x105fbc44 */);
T(0x1007bd50, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x105fbc44 - 0x00000000 = 0x105fbc44 */ XXX);
T(0x1007bd52, 0xf0ebfd7f, AL, BL(0x10167854); /* 0x1007bd57 + 0x00000afe, LR = 0x1007bd56 */);
T(0x1007bd56, 0x0000a02f, AL, ADD(r0, PC, 0x0bc); /* 0x1007be16 */));
T(0x1007bd58, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x105fbc54] */);
T(0x1007bd5a, 0x00004c33, AL, LDR(r4, PC, 0x00cc); /* [0x1007be28]:0xfffe6000 */);
T(0x1007bd5c, 0x00002002, AL, MOVS(r0, 0x02));
T(0x1007bd5e, 0x00008220, AL, STRH(r0, r4, 0x010); /* [0xfffe6010] */);
T(0x1007bd60, 0x00008aa0, AL, LDRH(r0, r4, 0x014); /* [0xfffe6014] */);
T(0x1007bd62, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x1007bd64, 0x0000d402, MI, B(0x1007bd6c); /* 0x1007bd68 + 0x004 */);
T(0x1007bd66, 0x00008aa0, AL, LDRH(r0, r4, 0x014); /* [0xfffe6014] */);
T(0x1007bd68, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x1007bd6a, 0x0000d5fc, PL, B(0x1007bd66); /* 0x1007bd6e + 0xfffffff8 */);

T(0x1007bd6c, 0xf0e7e8c4, AL, BLX(0x10162ef8); /* 0x1007bd71 + 0x00000188, LR = 0x1007bd70 */);
T(0x1007bd70, 0x00008ba1, AL, LDRH(r1, r4, 0x01c); /* [0x0000001c] */);
T(0x1007bd72, 0x00000889, AL, LSR(r1, r1, 0x02));
T(0x1007bd74, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x1007bd76, 0x000083a1, AL, STRH(r1, r4, 0x01c); /* [0x0000001c] */);
T(0x1007bd78, 0xf0e7e8c6, AL, BLX(0x10162f08); /* 0x1007bd7d + 0x0000018c, LR = 0x1007bd7c */);
T(0x1007bd7c, 0xf0e7e8bc, AL, BLX(0x10162ef8); /* 0x1007bd81 + 0x00000178, LR = 0x1007bd80 */);
T(0x1007bd80, 0x00004c21, AL, LDR(r4, PC, 0x0084); /* [0x1007be08]:0xfffe6020 */);
T(0x1007bd82, 0x00008a21, AL, LDRH(r1, r4, 0x010); /* [0xfffe6030] */);
T(0x1007bd84, 0x00002208, AL, MOVS(r2, 0x08));
T(0x1007bd86, 0x00004311, AL, ORR(r1, r2));
T(0x1007bd88, 0x00008221, AL, STRH(r1, r4, 0x010); /* [0xfffe6030] */);
T(0x1007bd8a, 0xf0e7e8be, AL, BLX(0x10162f08); /* 0x1007bd8f + 0x0000017c, LR = 0x1007bd8e */);
T(0x1007bd8e, 0x00008aa0, AL, LDRH(r0, r4, 0x014); /* [0xfffe6034] */);
T(0x1007bd90, 0x00002040, AL, MOVS(r0, 0x40));
T(0x1007bd92, 0x000080a0, AL, STRH(r0, r4, 0x004); /* [0xfffe6024] */);
T(0x1007bd94, 0xf0e7e8b0, AL, BLX(0x10162ef8); /* 0x1007bd99 + 0x00000160, LR = 0x1007bd98 */);
T(0x1007bd98, 0x00004a24, AL, LDR(r2, PC, 0x0090); /* [0x1007be2c]:0xfffe10c0 */);
T(0x1007bd9a, 0x00006ad1, AL, LDR(r1, r2, 0x02c); /* [0xfffe10ec] */);
T(0x1007bd9c, 0x00000989, AL, LSR(r1, r1, 0x06));
T(0x1007bd9e, 0x00000189, AL, LSL(r1, r1, 0x06));
T(0x1007bda0, 0x0000313a, AL, ADDS(r1, 0x3a));
T(0x1007bda2, 0x000062d1, AL, STR(r1, r2, 0x02c); /* [0xfffe10ec] */);
T(0x1007bda4, 0xf0e7e8b0, AL, BLX(0x10162f08); /* 0x1007bda9 + 0x00000160, LR = 0x1007bda8 */);
T(0x1007bda8, 0xf0e7e8a6, AL, BLX(0x10162ef8); /* 0x1007bdad + 0x0000014c, LR = 0x1007bdac */);
T(0x1007bdac, 0x00004a20, AL, LDR(r2, PC, 0x0080); /* [0x1007be30]:0xfff7ffff */);
T(0x1007bdae, 0x00004921, AL, LDR(r1, PC, 0x0084); /* [0x1007be34]:0xfffecb00 */);
T(0x1007bdb0, 0x0000600a, AL, STR(r2, r1); /* [0xfffecb00] */);
T(0x1007bdb2, 0x0000684a, AL, LDR(r2, r1, 0x004); /* [0xfffecb04] */);
T(0x1007bdb4, 0x00002301, AL, MOVS(r3, 0x01));
T(0x1007bdb6, 0x000004db, AL, LSL(r3, r3, 0x13));
T(0x1007bdb8, 0x0000439a, AL, BIC(r2, r3));
T(0x1007bdba, 0x0000604a, AL, STR(r2, r1, 0x004); /* [0xfffecb04] */);
T(0x1007bdbc, 0xf0e7e8a4, AL, BLX(0x10162f08); /* 0x1007bdc1 + 0x00000148, LR = 0x1007bdc0 */);
T(0x1007bdc0, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1007bdc2, 0x0000b538, AL, PUSH(rSP, r{...345.., LR}););
T(0x1007bdc4, 0x00004d12, AL, LDR(r5, PC, 0x0048); /* [0x1007be10]:0x105fbc44 */);
T(0x1007bdc6, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007bdc8, 0x00001c28, AL, SUBS(r0, r5, 0x0); /* 0x105fbc44 - 0x00000000 = 0x105fbc44 */ XXX);
T(0x1007bdca, 0xf0ebfdb1, AL, BL(0x10167930); /* 0x1007bdcf + 0x00000b62, LR = 0x1007bdce */);
T(0x1007bdce, 0x0000480e, AL, LDR(r0, PC, 0x0038); /* [0x1007be08]:0xfffe6020 */);
T(0x1007bdd0, 0x00008a81, AL, LDRH(r1, r0, 0x014); /* [0xfffe6034] */);
T(0x1007bdd2, 0x000007a1, AL, LSL(r1, r4, 0x1e));
T(0x1007bdd4, 0x00000c89, AL, LSR(r1, r1, 0x12));
T(0x1007bdd6, 0x00002201, AL, MOVS(r2, 0x01));
T(0x1007bdd8, 0x000003d2, AL, LSL(r2, r2, 0x0f));
T(0x1007bdda, 0x00004311, AL, ORR(r1, r2));
T(0x1007bddc, 0x00008001, AL, STRH(r1, r0); /* [0xfffe6020] */);
T(0x1007bdde, 0x00004a12, AL, LDR(r2, PC, 0x0048); /* [0x1007be28]:0xfffe6000 */);
T(0x1007bde0, 0x00008b11, AL, LDRH(r1, r2, 0x018); /* [0xfffe6018] */);
T(0x1007bde2, 0x000007c9, AL, LSL(r1, r1, 0x1f));
T(0x1007bde4, 0x0000d402, MI, B(0x1007bdec); /* 0x1007bde8 + 0x004 */);
T(0x1007bde6, 0x00008b11, AL, LDRH(r1, r2, 0x018); /* [0xfffe6018] */);
T(0x1007bde8, 0x000007c9, AL, LSL(r1, r1, 0x1f));
T(0x1007bdea, 0x0000d5fc, PL, B(0x1007bde6); /* 0x1007bdee + 0xfffffff8 */);

T(0x1007bdec, 0x00008a84, AL, LDRH(r4, r0, 0x014); /* [0x00000014] */);
T(0x1007bdee, 0x00001c28, AL, SUBS(r0, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007bdf0, 0xf0ebfd38, AL, BL(0x10167864); /* 0x1007bdf5 + 0x00000a70, LR = 0x1007bdf4 */);
T(0x1007bdf4, 0x000005a0, AL, LSL(r0, r4, 0x16));
T(0x1007bdf6, 0x00000d80, AL, LSR(r0, r0, 0x16));
T(0x1007bdf8, 0x0000bd38, AL, POP(rSP, r{...345.., PC}););

T(0x1007ca84, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x1007ca86, 0x00004a35, AL, LDR(r2, PC, 0x00d4); /* [0x1007cb5c]:0xfffe1080 */);
T(0x1007ca88, 0x00006810, AL, LDR(r0, r2); /* [0xfffe1080] */);
T(0x1007ca8a, 0x000005d1, AL, LSL(r1, r2, 0x17));
T(0x1007ca8c, 0x00004308, AL, ORR(r0, r1));
T(0x1007ca8e, 0x00006010, AL, STR(r0, r2); /* [0xfffe1080] */);
T(0x1007ca90, 0x00004833, AL, LDR(r0, PC, 0x00cc); /* [0x1007cb60]:0xfffec700 */);
T(0x1007ca92, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0xfffec708] */);
T(0x1007ca94, 0x00006881, AL, LDR(r1, r0, 0x008); /* [0xfffec708] */);
T(0x1007ca96, 0x00001a53, AL, ADDS(r3, r2, r1);
T(0x1007ca98, 0x000021ff, AL, MOVS(r1, 0xff));
T(0x1007ca9a, 0x00003130, AL, ADDS(r1, 0x30));
T(0x1007ca9c, 0x0000428b, AL, CMP(r3, r1));
T(0x1007ca9e, 0x0000d203, CS, B(0x1007caa8); /* 0x1007caa2 + 0x006 */);
T(0x1007caa0, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0xfffec708] */);
T(0x1007caa2, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007caa4, 0x0000428b, AL, CMP(r3, r1));
T(0x1007caa6, 0x0000d3fb, CC, B(0x1007caa0); /* 0x1007caaa + 0xfffffff6 */);

T(0x1007caa8, 0x00004d2e, AL, LDR(r5, PC, 0x00b8); /* [0x1007cb64]:0xfffb0850 */);
T(0x1007caaa, 0x0000792a, AL, LDRB(r2, r5, 0x004); /* [0xfffb0854] */);
T(0x1007caac, 0x00002302, AL, MOVS(r3, 0x02));
T(0x1007caae, 0x0000431a, AL, ORR(r2, r3));
T(0x1007cab0, 0x0000712a, AL, STRB(r2, r5, 0x004); /* [0xfffb0854] */);
T(0x1007cab2, 0x00002201, AL, MOVS(r2, 0x01));
T(0x1007cab4, 0x00007a2c, AL, LDRB(r4, r5, 0x008); /* [0xfffb0858] */);
T(0x1007cab6, 0x00004314, AL, ORR(r4, r2));
T(0x1007cab8, 0x0000d0fc, EQ, B(0x1007cab4); /* 0x1007cabc + 0xfffffff8 */);
T(0x1007caba, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x1007cabc, 0x00006884, AL, LDR(r4, r0, 0x008); /* [0x00000008] */);
T(0x1007cabe, 0x00001b14, AL, ADDS(r4, r2, r4);
T(0x1007cac0, 0x0000428c, AL, CMP(r4, r1));
T(0x1007cac2, 0x0000d203, CS, B(0x1007cacc); /* 0x1007cac6 + 0x006 */);
T(0x1007cac4, 0x00006884, AL, LDR(r4, r0, 0x008); /* [0x00000008] */);
T(0x1007cac6, 0x00001b14, AL, ADDS(r4, r2, r4);
T(0x1007cac8, 0x0000428c, AL, CMP(r4, r1));
T(0x1007caca, 0x0000d3fb, CC, B(0x1007cac4); /* 0x1007cace + 0xfffffff6 */);

T(0x1007cacc, 0x00004820, AL, LDR(r0, PC, 0x0080); /* [0x1007cb50]:0xfffb0800 */);
T(0x1007cace, 0x000024bf, AL, MOVS(r4, 0xbf));
T(0x1007cad0, 0x00007304, AL, STRB(r4, r0, 0x00c); /* [0xfffb080c] */);
T(0x1007cad2, 0x00007a01, AL, LDRB(r1, r0, 0x008); /* [0xfffb0808] */);
T(0x1007cad4, 0x00002710, AL, MOVS(r7, 0x10));
T(0x1007cad6, 0x00004339, AL, ORR(r1, r7));
T(0x1007cad8, 0x00007201, AL, STRB(r1, r0, 0x008); /* [0xfffb0808] */);
T(0x1007cada, 0x00002503, AL, MOVS(r5, 0x03));
T(0x1007cadc, 0x00007305, AL, STRB(r5, r0, 0x00c); /* [0xfffb080c] */);
T(0x1007cade, 0x00004922, AL, LDR(r1, PC, 0x0088); /* [0x1007cb68]:0xfffb0810 */);
T(0x1007cae0, 0x0000780e, AL, LDRB(r6, r1); /* [0xfffb0810] */);
T(0x1007cae2, 0x00002240, AL, MOVS(r2, 0x40));
T(0x1007cae4, 0x00004316, AL, ORR(r6, r2));
T(0x1007cae6, 0x0000700e, AL, STRB(r6, r1); /* [0xfffb0810] */);
T(0x1007cae8, 0x0000730a, AL, STRB(r2, r1, 0x00c); /* [0xfffb081c] */);
T(0x1007caea, 0x00004e17, AL, LDR(r6, PC, 0x005c); /* [0x1007cb48]:0xfffb0840 */);
T(0x1007caec, 0x00007032, AL, STRB(r2, r6); /* [0xfffb0840] */);
T(0x1007caee, 0x00002617, AL, MOVS(r6, 0x17));
T(0x1007caf0, 0x00007206, AL, STRB(r6, r0, 0x008); /* [0xfffb0808] */);
T(0x1007caf2, 0x0000780e, AL, LDRB(r6, r1); /* [0xfffb0810] */);
T(0x1007caf4, 0x00004396, AL, BIC(r6, r2));
T(0x1007caf6, 0x0000700e, AL, STRB(r6, r1); /* [0xfffb0810] */);
T(0x1007caf8, 0x00007304, AL, STRB(r4, r0, 0x00c); /* [0xfffb080c] */);
T(0x1007cafa, 0x00007a01, AL, LDRB(r1, r0, 0x008); /* [0xfffb0808] */);
T(0x1007cafc, 0x000043b9, AL, BIC(r1, r7));
T(0x1007cafe, 0x00007201, AL, STRB(r1, r0, 0x008); /* [0xfffb0808] */);
T(0x1007cb00, 0x00007305, AL, STRB(r5, r0, 0x00c); /* [0xfffb080c] */);
T(0x1007cb02, 0x00007304, AL, STRB(r4, r0, 0x00c); /* [0xfffb080c] */);
T(0x1007cb04, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1007cb06, 0x00007201, AL, STRB(r1, r0, 0x008); /* [0xfffb0808] */);
T(0x1007cb08, 0x00007305, AL, STRB(r5, r0, 0x00c); /* [0xfffb080c] */);
T(0x1007cb0a, 0x00004c10, AL, LDR(r4, PC, 0x0040); /* [0x1007cb4c]:0x105fd684 */);
T(0x1007cb0c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007cb0e, 0x00004d0f, AL, LDR(r5, PC, 0x003c); /* [0x1007cb4c]:0x105fd684 */);
T(0x1007cb10, 0x00004a16, AL, LDR(r2, PC, 0x0058); /* [0x1007cb6c]:0x10164f48 */);
T(0x1007cb12, 0x00003408, AL, ADDS(r4, 0x08));
T(0x1007cb14, 0x00000081, AL, LSL(r1, r0, 0x02));
T(0x1007cb16, 0x0000506a, AL, STR(r2, r5, r1));
T(0x1007cb18, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1007cb1a, 0x00002802, AL, CMPS(r0, 0x02));
T(0x1007cb1c, 0x00005062, AL, STR(r2, r4, r1));
T(0x1007cb1e, 0x0000dbf9, LT, B(0x1007cb14); /* 0x1007cb22 + 0xfffffff2 */);
T(0x1007cb20, 0x00004813, AL, LDR(r0, PC, 0x004c); /* [0x1007cb70]:0xfffe0040 */);
T(0x1007cb22, 0x00006183, AL, STR(r3, r0, 0x018); /* [0xfffe0058] */);
T(0x1007cb24, 0xf0e6e9e8, AL, BLX(0x10162ef8); /* 0x1007cb29 + 0x000003d0, LR = 0x1007cb28 */);
T(0x1007cb28, 0x00004a12, AL, LDR(r2, PC, 0x0048); /* [0x1007cb74]:0xffff7fff */);
T(0x1007cb2a, 0x00000451, AL, LSL(r1, r2, 0x11));
T(0x1007cb2c, 0x0000600a, AL, STR(r2, r1));
T(0x1007cb2e, 0x0000684a, AL, LDR(r2, r1, 0x004));
T(0x1007cb30, 0x00002301, AL, MOVS(r3, 0x01));
T(0x1007cb32, 0x000003db, AL, LSL(r3, r3, 0x0f));
T(0x1007cb34, 0x0000439a, AL, BIC(r2, r3));
T(0x1007cb36, 0x0000604a, AL, STR(r2, r1, 0x004));
T(0x1007cb38, 0xf0e6e9e6, AL, BLX(0x10162f08); /* 0x1007cb3d + 0x000003cc, LR = 0x1007cb3c */);
T(0x1007cb3c, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x1007cc24, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x1007cc26, 0x00004c78, AL, LDR(r4, PC, 0x01e0); /* [0x1007ce08]:0x105fd694 */);
T(0x1007cc28, 0x00004977, AL, LDR(r1, PC, 0x01dc); /* [0x1007ce08]:0x105fd694 */);
T(0x1007cc2a, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1007cc2c, 0x00007008, AL, STRB(r0, r1); /* [0x105fd694] */);
T(0x1007cc2e, 0x0000340c, AL, ADDS(r4, 0x0c));
T(0x1007cc30, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007cc32, 0xf0eafe0f, AL, BL(0x10167854); /* 0x1007cc37 + 0x00000c1e, LR = 0x1007cc36 */);
T(0x1007cc36, 0x0000a07b, AL, ADD(r0, PC, 0x1ec); /* 0x1007ce26 */));
T(0x1007cc38, 0x00006120, AL, STR(r0, r4, 0x010));
T(0x1007cc3a, 0xf7ffffc6, AL, BL(0x1007cbca); /* 0x1007cc3f + 0x00000f8c, LR = 0x1007cc3e */);
T(0x1007cc3e, 0xf7ffff9b, AL, BL(0x1007cb78); /* 0x1007cc43 + 0x00000f36, LR = 0x1007cc42 */);
T(0x1007cc42, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1007cb78, 0x000048a3, AL, LDR(r0, PC, 0x028c); /* [0x1007ce08]:0x105fd694 */);
T(0x1007cb7a, 0x000021ff, AL, MOVS(r1, 0xff));
T(0x1007cb7c, 0x00003140, AL, ADDS(r1, 0x40));
T(0x1007cb7e, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x1007cb80, 0x00008041, AL, STRH(r1, r0, 0x002); /* [0x105fd696] */);
T(0x1007cb82, 0x000049a2, AL, LDR(r1, PC, 0x0288); /* [0x1007ce0c]:0x0000023f */);
T(0x1007cb84, 0x00008081, AL, STRH(r1, r0, 0x004); /* [0x105fd698] */);
T(0x1007cb86, 0x000031c2, AL, ADDS(r1, 0xc2));
T(0x1007cb88, 0x000080c1, AL, STRH(r1, r0, 0x006); /* [0x105fd69a] */);
T(0x1007cb8a, 0x00002141, AL, MOVS(r1, 0x41));
T(0x1007cb8c, 0x00000109, AL, LSL(r1, r1, 0x04));
T(0x1007cb8e, 0x00008101, AL, STRH(r1, r0, 0x008); /* [0x105fd69c] */);
T(0x1007cb90, 0x0000489f, AL, LDR(r0, PC, 0x027c); /* [0x1007ce10]:0xfffbec00 */);
T(0x1007cb92, 0x00006ac0, AL, LDR(r0, r0, 0x02c));
T(0x1007cb94, 0x00000740, AL, LSL(r0, r0, 0x1d));
T(0x1007cb96, 0x0000d517, PL, B(0x1007cbc8); /* 0x1007cb9a + 0x02e */);
T(0x1007cb98, 0x0000499b, AL, LDR(r1, PC, 0x026c); /* [0x1007ce08]:0x105fd694 */);
T(0x1007cb9a, 0x00002202, AL, MOVS(r2, 0x02));
T(0x1007cb9c, 0x00003102, AL, ADDS(r1, 0x02));
T(0x1007cb9e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007cba0, 0xf009fe16, AL, BL(0x100867d0); /* 0x1007cba5 + 0x00000c2c, LR = 0x1007cba4 */);
T(0x1007cba4, 0x00004998, AL, LDR(r1, PC, 0x0260); /* [0x1007ce08]:0x105fd694 */);
T(0x1007cba6, 0x00002202, AL, MOVS(r2, 0x02));
T(0x1007cba8, 0x00003104, AL, ADDS(r1, 0x04));
T(0x1007cbaa, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007cbac, 0xf009fe10, AL, BL(0x100867d0); /* 0x1007cbb1 + 0x00000c20, LR = 0x1007cbb0 */);
T(0x1007cbb0, 0x00004995, AL, LDR(r1, PC, 0x0254); /* [0x1007ce08]:0x105fd694 */);
T(0x1007cbb2, 0x00002202, AL, MOVS(r2, 0x02));
T(0x1007cbb4, 0x00003106, AL, ADDS(r1, 0x06));
T(0x1007cbb6, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007cbb8, 0xf009fe0a, AL, BL(0x100867d0); /* 0x1007cbbd + 0x00000c14, LR = 0x1007cbbc */);
T(0x1007cbbc, 0x00004992, AL, LDR(r1, PC, 0x0248); /* [0x1007ce08]:0x105fd694 */);
T(0x1007cbbe, 0x00002202, AL, MOVS(r2, 0x02));
T(0x1007cbc0, 0x00003108, AL, ADDS(r1, 0x08));
T(0x1007cbc2, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007cbc4, 0xf009fe04, AL, BL(0x100867d0); /* 0x1007cbc9 + 0x00000c08, LR = 0x1007cbc8 */);

T(0x1007cbc8, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x1007cbca, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x1007cbcc, 0x00004c8e, AL, LDR(r4, PC, 0x0238); /* [0x1007ce08]:0x105fd694 */);
T(0x1007cbce, 0x0000340c, AL, ADDS(r4, 0x0c));
T(0x1007cbd0, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007cbd2, 0xf0eafead, AL, BL(0x10167930); /* 0x1007cbd7 + 0x00000d5a, LR = 0x1007cbd6 */);
T(0x1007cbd6, 0x0000488e, AL, LDR(r0, PC, 0x0238); /* [0x1007ce10]:0xfffbec00 */);
T(0x1007cbd8, 0x00006ac0, AL, LDR(r0, r0, 0x02c));
T(0x1007cbda, 0x00000740, AL, LSL(r0, r0, 0x1d));
T(0x1007cbdc, 0x0000d51e, PL, B(0x1007cc1c); /* 0x1007cbe0 + 0x03c */);
T(0x1007cbde, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007cbe0, 0xf003f9cd, AL, BL(0x1007ff7e); /* 0x1007cbe5 + 0x0000039a, LR = 0x1007cbe4 */);
T(0x1007cbe4, 0x0000498b, AL, LDR(r1, PC, 0x022c); /* [0x1007ce14]:0xfffbec80 */);
T(0x1007cbe6, 0x00002004, AL, MOVS(r0, 0x04));
T(0x1007cbe8, 0x00006308, AL, STR(r0, r1, 0x030); /* [0xfffbecb0] */);
T(0x1007cbea, 0xf0eaf9d5, AL, BL(0x10166f98); /* 0x1007cbef + 0x000003aa, LR = 0x1007cbee */);
T(0x1007cbee, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1007cbf0, 0x0000d007, EQ, B(0x1007cc02); /* 0x1007cbf4 + 0x00e */);
T(0x1007cbf2, 0x00004989, AL, LDR(r1, PC, 0x0224); /* [0x1007ce18]:0x10ce794c */);
T(0x1007cbf4, 0x00006809, AL, LDR(r1, r1));
T(0x1007cbf6, 0x00004288, AL, CMP(r0, r1));
T(0x1007cbf8, 0x0000d003, EQ, B(0x1007cc02); /* 0x1007cbfc + 0x006 */);
T(0x1007cbfa, 0x000020d4, AL, MOVS(r0, 0xd4));
T(0x1007cbfc, 0xf0ebf966, AL, BL(0x10167ecc); /* 0x1007cc01 + 0x000002cc, LR = 0x1007cc00 */);
T(0x1007cc00, 0x0000e00a, AL, B(0x1007cc16); /* 0x1007cc03 + 0x014*/);

T(0x1007cc02, 0x00004b86, AL, LDR(r3, PC, 0x0218); /* [0x1007ce1c]:0xfffec700 */);
T(0x1007cc04, 0x00006898, AL, LDR(r0, r3, 0x008); /* [0xfffec708] */);
T(0x1007cc06, 0x00006899, AL, LDR(r1, r3, 0x008); /* [0xfffec708] */);
T(0x1007cc08, 0x00004a85, AL, LDR(r2, PC, 0x0214); /* [0x1007ce20]:0x0009b058 */);
T(0x1007cc0a, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007cc0c, 0x00004291, AL, CMP(r1, r2));
T(0x1007cc0e, 0x0000d203, CS, B(0x1007cc18); /* 0x1007cc12 + 0x006 */);
T(0x1007cc10, 0x00006899, AL, LDR(r1, r3, 0x008); /* [0xfffec708] */);
T(0x1007cc12, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007cc14, 0x00004291, AL, CMP(r1, r2));
T(0x1007cc16, 0x0000d3fb, CC, B(0x1007cc10); /* 0x1007cc1a + 0xfffffff6 */);

T(0x1007cc16, 0x0000d3fb, CC, B(0x1007cc10); /* 0x1007cc1a + 0xfffffff6 */);

T(0x1007cc18, 0xf003f994, AL, BL(0x1007ff44); /* 0x1007cc1d + 0x00000328, LR = 0x1007cc1c */);

T(0x1007cc1c, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007cc1e, 0xf0eafe21, AL, BL(0x10167864); /* 0x1007cc23 + 0x00000c42, LR = 0x1007cc22 */);
T(0x1007cc22, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1007d51c, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x1007d51e, 0x00004e11, AL, LDR(r6, PC, 0x0044); /* [0x1007d564]:0x10653dd4 */);
T(0x1007d520, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1007d522, 0x000000a0, AL, LSL(r0, r4, 0x02));
T(0x1007d524, 0x00001900, AL, SUBS(r0, r0, r4);
T(0x1007d526, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x1007d528, 0x00001985, AL, SUBS(r5, r0, r6);
T(0x1007d52a, 0x00001c28, AL, SUBS(r0, r5, 0x0);
T(0x1007d52c, 0xf0eaf992, AL, BL(0x10167854); /* 0x1007d531 + 0x00000324, LR = 0x1007d530 */);
T(0x1007d530, 0x0000a00d, AL, ADD(r0, PC, 0x034); /* 0x1007d568 */));
T(0x1007d532, 0x00006128, AL, STR(r0, r5, 0x010));
T(0x1007d534, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007d536, 0xf7ffff16, AL, BL(0x1007d366); /* 0x1007d53b + 0x00000e2c, LR = 0x1007d53a */);
T(0x1007d53a, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007d53c, 0xf7fffeff, AL, BL(0x1007d33e); /* 0x1007d541 + 0x00000dfe, LR = 0x1007d540 */);
T(0x1007d540, 0x00003401, AL, ADDS(r4, 0x01));
T(0x1007d542, 0x00000624, AL, LSL(r4, r4, 0x18));
T(0x1007d544, 0x00000e24, AL, LSR(r4, r4, 0x18));
T(0x1007d546, 0x00002c0f, AL, CMPS(r4, 0x0f));
T(0x1007d548, 0x0000d9eb, LS, B(0x1007d522); /* 0x1007d54c + 0xffffffd6 */);
T(0x1007d54a, 0x0000480c, AL, LDR(r0, PC, 0x0030); /* [0x1007d57c]:0xfffedc00 */);
T(0x1007d54c, 0x00008801, AL, LDRH(r1, r0); /* [0xfffedc00] */);
T(0x1007d54e, 0x00002204, AL, MOVS(r2, 0x04));
T(0x1007d550, 0x00004311, AL, ORR(r1, r2));
T(0x1007d552, 0x00008001, AL, STRH(r1, r0); /* [0xfffedc00] */);
T(0x1007d554, 0x00008881, AL, LDRH(r1, r0, 0x004); /* [0xfffedc04] */);
T(0x1007d556, 0x00002208, AL, MOVS(r2, 0x08));
T(0x1007d558, 0x00004311, AL, ORR(r1, r2));
T(0x1007d55a, 0x00008081, AL, STRH(r1, r0, 0x004); /* [0xfffedc04] */);
T(0x1007d55c, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x1007d33e, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x1007d340, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007d342, 0xf7ffff1d, AL, BL(0x1007d180); /* 0x1007d347 + 0x00000e3a, LR = 0x1007d346 */);
T(0x1007d346, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007d348, 0xf7ffff38, AL, BL(0x1007d1bc); /* 0x1007d34d + 0x00000e70, LR = 0x1007d34c */);
T(0x1007d34c, 0x00004a58, AL, LDR(r2, PC, 0x0160); /* [0x1007d4b0]:0x10653914 */);
T(0x1007d34e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007d350, 0x000000a1, AL, LSL(r1, r4, 0x02));
T(0x1007d352, 0x00003a40, AL, SUBS(r2, 0x40));
T(0x1007d354, 0x00005050, AL, STR(r0, r2, r1));
T(0x1007d356, 0x000000a0, AL, LSL(r0, r4, 0x02));
T(0x1007d358, 0x00001900, AL, SUBS(r0, r0, r4);
T(0x1007d35a, 0x00004956, AL, LDR(r1, PC, 0x0158); /* [0x1007d4b4]:0x10653dd4 */);
T(0x1007d35c, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x1007d35e, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x1007d360, 0xf0eafa80, AL, BL(0x10167864); /* 0x1007d365 + 0x00000500, LR = 0x1007d364 */);
T(0x1007d364, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1007d180, 0x0000214c, AL, MOVS(r1, 0x4c));
T(0x1007d182, 0x00004341, AL, MUL(r1, r0));
T(0x1007d184, 0x00004aca, AL, LDR(r2, PC, 0x0328); /* [0x1007d4b0]:0x10653914 */);
T(0x1007d186, 0x00001889, AL, SUBS(r1, r1, r2);
T(0x1007d188, 0x00000182, AL, LSL(r2, r0, 0x06));
T(0x1007d18a, 0x00002025, AL, MOVS(r0, 0x25));
T(0x1007d18c, 0x000002c0, AL, LSL(r0, r0, 0x0b));
T(0x1007d18e, 0x00001a10, AL, ADDS(r0, r2, r0);
T(0x1007d190, 0x00008842, AL, LDRH(r2, r0, 0x002));
T(0x1007d192, 0x00002380, AL, MOVS(r3, 0x80));
T(0x1007d194, 0x0000439a, AL, BIC(r2, r3));
T(0x1007d196, 0x00008042, AL, STRH(r2, r0, 0x002));
T(0x1007d198, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007d19a, 0x00007388, AL, STRB(r0, r1, 0x00e));
T(0x1007d19c, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1007d1bc, 0x0000b538, AL, PUSH(rSP, r{...345.., LR}););
T(0x1007d1be, 0x00001c05, AL, SUBS(r5, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007d1c0, 0x0000234c, AL, MOVS(r3, 0x4c));
T(0x1007d1c2, 0x00004358, AL, MUL(r0, r3));
T(0x1007d1c4, 0x000049ba, AL, LDR(r1, PC, 0x02e8); /* [0x1007d4b0]:0x10653914 */);
T(0x1007d1c6, 0x00001844, AL, SUBS(r4, r0, r1);
T(0x1007d1c8, 0xf0e9fee6, AL, BL(0x10166f98); /* 0x1007d1cd + 0x00000dcc, LR = 0x1007d1cc */);
T(0x1007d1cc, 0x000000a9, AL, LSL(r1, r5, 0x02));
T(0x1007d1ce, 0x00001949, AL, SUBS(r1, r1, r5);
T(0x1007d1d0, 0x00004ab8, AL, LDR(r2, PC, 0x02e0); /* [0x1007d4b4]:0x10653dd4 */);
T(0x1007d1d2, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x1007d1d4, 0x00001889, AL, SUBS(r1, r1, r2);
T(0x1007d1d6, 0x0000688a, AL, LDR(r2, r1, 0x008));
T(0x1007d1d8, 0x00002125, AL, MOVS(r1, 0x25));
T(0x1007d1da, 0x000002c9, AL, LSL(r1, r1, 0x0b));
T(0x1007d1dc, 0x000001ab, AL, LSL(r3, r5, 0x06));
T(0x1007d1de, 0x00001a59, AL, ADDS(r1, r3, r1);
T(0x1007d1e0, 0x00004290, AL, CMP(r0, r2));
T(0x1007d1e2, 0x0000d171, NE, B(0x1007d2c8); /* 0x1007d1e6 + 0x0e2 */);
T(0x1007d1e4, 0x00008808, AL, LDRH(r0, r1));
T(0x1007d1e6, 0x00000b82, AL, LSR(r2, r0, 0x0e));
T(0x1007d1e8, 0x00007022, AL, STRB(r2, r4));
T(0x1007d1ea, 0x00000482, AL, LSL(r2, r0, 0x12));
T(0x1007d1ec, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d1ee, 0x00007062, AL, STRB(r2, r4, 0x001));
T(0x1007d1f0, 0x000004c2, AL, LSL(r2, r0, 0x13));
T(0x1007d1f2, 0x00000f12, AL, LSR(r2, r2, 0x1c));
T(0x1007d1f4, 0x000070a2, AL, STRB(r2, r4, 0x002));
T(0x1007d1f6, 0x000005c2, AL, LSL(r2, r0, 0x17));
T(0x1007d1f8, 0x00000f92, AL, LSR(r2, r2, 0x1e));
T(0x1007d1fa, 0x000070e2, AL, STRB(r2, r4, 0x003));
T(0x1007d1fc, 0x00000642, AL, LSL(r2, r0, 0x19));
T(0x1007d1fe, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d200, 0x00007122, AL, STRB(r2, r4, 0x004));
T(0x1007d202, 0x00000682, AL, LSL(r2, r0, 0x1a));
T(0x1007d204, 0x00000f12, AL, LSR(r2, r2, 0x1c));
T(0x1007d206, 0x00000780, AL, LSL(r0, r0, 0x1e));
T(0x1007d208, 0x00000f80, AL, LSR(r0, r0, 0x1e));
T(0x1007d20a, 0x00007162, AL, STRB(r2, r4, 0x005));
T(0x1007d20c, 0x000071a0, AL, STRB(r0, r4, 0x006));
T(0x1007d20e, 0x00008848, AL, LDRH(r0, r1, 0x002));
T(0x1007d210, 0x00000b82, AL, LSR(r2, r0, 0x0e));
T(0x1007d212, 0x00007222, AL, STRB(r2, r4, 0x008));
T(0x1007d214, 0x00000482, AL, LSL(r2, r0, 0x12));
T(0x1007d216, 0x00000f92, AL, LSR(r2, r2, 0x1e));
T(0x1007d218, 0x00007262, AL, STRB(r2, r4, 0x009));
T(0x1007d21a, 0x00000502, AL, LSL(r2, r0, 0x14));
T(0x1007d21c, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d21e, 0x000072a2, AL, STRB(r2, r4, 0x00a));
T(0x1007d220, 0x00000542, AL, LSL(r2, r0, 0x15));
T(0x1007d222, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d224, 0x000072e2, AL, STRB(r2, r4, 0x00b));
T(0x1007d226, 0x00000582, AL, LSL(r2, r0, 0x16));
T(0x1007d228, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d22a, 0x00007322, AL, STRB(r2, r4, 0x00c));
T(0x1007d22c, 0x000005c2, AL, LSL(r2, r0, 0x17));
T(0x1007d22e, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d230, 0x00007362, AL, STRB(r2, r4, 0x00d));
T(0x1007d232, 0x00000602, AL, LSL(r2, r0, 0x18));
T(0x1007d234, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d236, 0x000073a2, AL, STRB(r2, r4, 0x00e));
T(0x1007d238, 0x00000642, AL, LSL(r2, r0, 0x19));
T(0x1007d23a, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d23c, 0x000073e2, AL, STRB(r2, r4, 0x00f));
T(0x1007d23e, 0x00000682, AL, LSL(r2, r0, 0x1a));
T(0x1007d240, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d242, 0x000006c0, AL, LSL(r0, r0, 0x1b));
T(0x1007d244, 0x00000ec0, AL, LSR(r0, r0, 0x1b));
T(0x1007d246, 0x00007422, AL, STRB(r2, r4, 0x010));
T(0x1007d248, 0x00007460, AL, STRB(r0, r4, 0x011));
T(0x1007d24a, 0x00008888, AL, LDRH(r0, r1, 0x004));
T(0x1007d24c, 0x00000682, AL, LSL(r2, r0, 0x1a));
T(0x1007d24e, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d250, 0x00007522, AL, STRB(r2, r4, 0x014));
T(0x1007d252, 0x000006c2, AL, LSL(r2, r0, 0x1b));
T(0x1007d254, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d256, 0x00007562, AL, STRB(r2, r4, 0x015));
T(0x1007d258, 0x00000702, AL, LSL(r2, r0, 0x1c));
T(0x1007d25a, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d25c, 0x000075a2, AL, STRB(r2, r4, 0x016));
T(0x1007d25e, 0x00000742, AL, LSL(r2, r0, 0x1d));
T(0x1007d260, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d262, 0x000075e2, AL, STRB(r2, r4, 0x017));
T(0x1007d264, 0x00000782, AL, LSL(r2, r0, 0x1e));
T(0x1007d266, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d268, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x1007d26a, 0x00000fc0, AL, LSR(r0, r0, 0x1f));
T(0x1007d26c, 0x00007622, AL, STRB(r2, r4, 0x018));
T(0x1007d26e, 0x00007660, AL, STRB(r0, r4, 0x019));
T(0x1007d270, 0x00008908, AL, LDRH(r0, r1, 0x008));
T(0x1007d272, 0x00006260, AL, STR(r0, r4, 0x024));
T(0x1007d274, 0x0000894a, AL, LDRH(r2, r1, 0x00a));
T(0x1007d276, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007d278, 0x00004310, AL, ORR(r0, r2));
T(0x1007d27a, 0x00006260, AL, STR(r0, r4, 0x024));
T(0x1007d27c, 0x00008988, AL, LDRH(r0, r1, 0x00c));
T(0x1007d27e, 0x000062a0, AL, STR(r0, r4, 0x028));
T(0x1007d280, 0x000089ca, AL, LDRH(r2, r1, 0x00e));
T(0x1007d282, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007d284, 0x00004310, AL, ORR(r0, r2));
T(0x1007d286, 0x000062a0, AL, STR(r0, r4, 0x028));
T(0x1007d288, 0x00008a08, AL, LDRH(r0, r1, 0x010));
T(0x1007d28a, 0x000085a0, AL, STRH(r0, r4, 0x02c));
T(0x1007d28c, 0x00008a48, AL, LDRH(r0, r1, 0x012));
T(0x1007d28e, 0x000085e0, AL, STRH(r0, r4, 0x02e));
T(0x1007d290, 0x00008a88, AL, LDRH(r0, r1, 0x014));
T(0x1007d292, 0x00008620, AL, STRH(r0, r4, 0x030));
T(0x1007d294, 0x00008ac8, AL, LDRH(r0, r1, 0x016));
T(0x1007d296, 0x00008660, AL, STRH(r0, r4, 0x032));
T(0x1007d298, 0x00008b88, AL, LDRH(r0, r1, 0x01c));
T(0x1007d29a, 0x00008720, AL, STRH(r0, r4, 0x038));
T(0x1007d29c, 0x00008bc8, AL, LDRH(r0, r1, 0x01e));
T(0x1007d29e, 0x00008760, AL, STRH(r0, r4, 0x03a));
T(0x1007d2a0, 0x00004885, AL, LDR(r0, PC, 0x0214); /* [0x1007d4b8]:0xfffed820 */);
T(0x1007d2a2, 0x0000181a, AL, SUBS(r2, r3, r0);
T(0x1007d2a4, 0x00008810, AL, LDRH(r0, r2));
T(0x1007d2a6, 0x000063e0, AL, STR(r0, r4, 0x03c));
T(0x1007d2a8, 0x00008853, AL, LDRH(r3, r2, 0x002));
T(0x1007d2aa, 0x0000041b, AL, LSL(r3, r3, 0x10));
T(0x1007d2ac, 0x00004318, AL, ORR(r0, r3));
T(0x1007d2ae, 0x000063e0, AL, STR(r0, r4, 0x03c));
T(0x1007d2b0, 0x00008893, AL, LDRH(r3, r2, 0x004));
T(0x1007d2b2, 0x00000758, AL, LSL(r0, r3, 0x1d));
T(0x1007d2b4, 0x00000fc5, AL, LSR(r5, r0, 0x1f));
T(0x1007d2b6, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007d2b8, 0x00003040, AL, ADDS(r0, 0x40));
T(0x1007d2ba, 0x00007005, AL, STRB(r5, r0));
T(0x1007d2bc, 0x0000079d, AL, LSL(r5, r3, 0x1e));
T(0x1007d2be, 0x00000fed, AL, LSR(r5, r5, 0x1f));
T(0x1007d2c0, 0x000007db, AL, LSL(r3, r3, 0x1f));
T(0x1007d2c2, 0x00000fdb, AL, LSR(r3, r3, 0x1f));
T(0x1007d2c4, 0x00007045, AL, STRB(r5, r0, 0x001));
T(0x1007d2c6, 0x0000e000, AL, B(0x1007d2c8); /* 0x1007d2c9 + 0x000*/);

T(0x1007d2c8, 0x0000e00f, AL, B(0x1007d2e8); /* 0x1007d2cb + 0x01e*/);

T(0x1007d2e8, 0x00007242, AL, STRB(r2, r0, 0x009); /* [0x00000009] */);
T(0x1007d2ea, 0x000088c8, AL, LDRH(r0, r1, 0x006); /* [0x00000006] */);
T(0x1007d2ec, 0x00000642, AL, LSL(r2, r0, 0x19));
T(0x1007d2ee, 0x00000fd2, AL, LSR(r2, r2, 0x1f));
T(0x1007d2f0, 0x00007722, AL, STRB(r2, r4, 0x01c); /* [0x0000001c] */);
T(0x1007d2f2, 0x00000682, AL, LSL(r2, r0, 0x1a));
T(0x1007d2f4, 0x00000fd3, AL, LSR(r3, r2, 0x1f));
T(0x1007d2f6, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007d2f8, 0x00003210, AL, ADDS(r2, 0x10));
T(0x1007d2fa, 0x00007353, AL, STRB(r3, r2, 0x00d));
T(0x1007d2fc, 0x000006c3, AL, LSL(r3, r0, 0x1b));
T(0x1007d2fe, 0x00000fdb, AL, LSR(r3, r3, 0x1f));
T(0x1007d300, 0x00007393, AL, STRB(r3, r2, 0x00e));
T(0x1007d302, 0x00000703, AL, LSL(r3, r0, 0x1c));
T(0x1007d304, 0x00000fdb, AL, LSR(r3, r3, 0x1f));
T(0x1007d306, 0x000073d3, AL, STRB(r3, r2, 0x00f));
T(0x1007d308, 0x00000742, AL, LSL(r2, r0, 0x1d));
T(0x1007d30a, 0x00000fd3, AL, LSR(r3, r2, 0x1f));
T(0x1007d30c, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007d30e, 0x00003220, AL, ADDS(r2, 0x20));
T(0x1007d310, 0x00007013, AL, STRB(r3, r2));
T(0x1007d312, 0x00000783, AL, LSL(r3, r0, 0x1e));
T(0x1007d314, 0x00000fdb, AL, LSR(r3, r3, 0x1f));
T(0x1007d316, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x1007d318, 0x00000fc0, AL, LSR(r0, r0, 0x1f));
T(0x1007d31a, 0x00007053, AL, STRB(r3, r2, 0x001));
T(0x1007d31c, 0x00007090, AL, STRB(r0, r2, 0x002));
T(0x1007d31e, 0x00008b08, AL, LDRH(r0, r1, 0x018); /* [0x00000018] */);
T(0x1007d320, 0x000086a0, AL, STRH(r0, r4, 0x034); /* [0x00000034] */);
T(0x1007d322, 0x00008b48, AL, LDRH(r0, r1, 0x01a); /* [0x0000001a] */);
T(0x1007d324, 0x000086e0, AL, STRH(r0, r4, 0x036); /* [0x00000036] */);
T(0x1007d326, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007d328, 0x0000bd38, AL, POP(rSP, r{...345.., PC}););

T(0x1007d366, 0x0000b538, AL, PUSH(rSP, r{...345.., LR}););
T(0x1007d368, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007d36a, 0xf0e9fe15, AL, BL(0x10166f98); /* 0x1007d36f + 0x00000c2a, LR = 0x1007d36e */);
T(0x1007d36e, 0x000000a1, AL, LSL(r1, r4, 0x02));
T(0x1007d370, 0x00001909, AL, SUBS(r1, r1, r4);
T(0x1007d372, 0x00004a50, AL, LDR(r2, PC, 0x0140); /* [0x1007d4b4]:0x10653dd4 */);
T(0x1007d374, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x1007d376, 0x00001889, AL, SUBS(r1, r1, r2);
T(0x1007d378, 0x0000688a, AL, LDR(r2, r1, 0x008));
T(0x1007d37a, 0x00001c05, AL, SUBS(r5, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007d37c, 0x00004290, AL, CMP(r0, r2));
T(0x1007d37e, 0x0000d006, EQ, B(0x1007d38e); /* 0x1007d382 + 0x00c */);
T(0x1007d380, 0x00001c08, AL, SUBS(r0, r1, 0x0);
T(0x1007d382, 0xf0eafad5, AL, BL(0x10167930); /* 0x1007d387 + 0x000005aa, LR = 0x1007d386 */);
T(0x1007d386, 0x00004a4a, AL, LDR(r2, PC, 0x0128); /* [0x1007d4b0]:0x10653914 */);
T(0x1007d388, 0x000000a1, AL, LSL(r1, r4, 0x02));
T(0x1007d38a, 0x00003a40, AL, SUBS(r2, 0x40));
T(0x1007d38c, 0x00005055, AL, STR(r5, r2, r1));
T(0x1007d38e, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007d390, 0xf7ffff14, AL, BL(0x1007d1bc); /* 0x1007d395 + 0x00000e28, LR = 0x1007d394 */);
T(0x1007d394, 0x0000bd38, AL, POP(rSP, r{...345.., PC}););

T(0x1007d38e, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007d390, 0xf7ffff14, AL, BL(0x1007d1bc); /* 0x1007d395 + 0x00000e28, LR = 0x1007d394 */);
T(0x1007d394, 0x0000bd38, AL, POP(rSP, r{...345.., PC}););

T(0x1007e478, 0x00004902, AL, LDR(r1, PC, 0x0008); /* [0x1007e484]:0x10653f2c */);
T(0x1007e47a, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007e47c, 0x00007008, AL, STRB(r0, r1); /* [0x10653f2c] */);
T(0x1007e47e, 0x00006048, AL, STR(r0, r1, 0x004); /* [0x10653f30] */);
T(0x1007e480, 0x00006088, AL, STR(r0, r1, 0x008); /* [0x10653f34] */);
T(0x1007e482, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1007fe40, 0x00004990, AL, LDR(r1, PC, 0x0240); /* [0x10080084]:0x10859464 */);
T(0x1007fe42, 0x0000b538, AL, PUSH(rSP, r{...345.., LR}););
T(0x1007fe44, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007fe46, 0x00006008, AL, STR(r0, r1); /* [0x10859464] */);
T(0x1007fe48, 0x0000488f, AL, LDR(r0, PC, 0x023c); /* [0x10080088]:0xfffb1000 */);
T(0x1007fe4a, 0x00008901, AL, LDRH(r1, r0, 0x008); /* [0xfffb1008] */);
T(0x1007fe4c, 0x0000084a, AL, LSR(r2, r1, 0x01));
T(0x1007fe4e, 0x00000052, AL, LSL(r2, r2, 0x01));
T(0x1007fe50, 0x00002140, AL, MOVS(r1, 0x40));
T(0x1007fe52, 0x0000438a, AL, BIC(r2, r1));
T(0x1007fe54, 0x00002180, AL, MOVS(r1, 0x80));
T(0x1007fe56, 0x0000438a, AL, BIC(r2, r1));
T(0x1007fe58, 0x00008102, AL, STRH(r2, r0, 0x008); /* [0xfffb1008] */);
T(0x1007fe5a, 0x00008a82, AL, LDRH(r2, r0, 0x014); /* [0xfffb1014] */);
T(0x1007fe5c, 0x0000018b, AL, LSL(r3, r1, 0x06));
T(0x1007fe5e, 0x0000439a, AL, BIC(r2, r3));
T(0x1007fe60, 0x0000014b, AL, LSL(r3, r1, 0x05));
T(0x1007fe62, 0x0000431a, AL, ORR(r2, r3));
T(0x1007fe64, 0x00004b89, AL, LDR(r3, PC, 0x0224); /* [0x1008008c]:0x102c77e8 */);
T(0x1007fe66, 0x00000b12, AL, LSR(r2, r2, 0x0c));
T(0x1007fe68, 0x0000881b, AL, LDRH(r3, r3));
T(0x1007fe6a, 0x00000312, AL, LSL(r2, r2, 0x0c));
T(0x1007fe6c, 0x0000051b, AL, LSL(r3, r3, 0x14));
T(0x1007fe6e, 0x00000d1b, AL, LSR(r3, r3, 0x14));
T(0x1007fe70, 0x0000431a, AL, ORR(r2, r3));
T(0x1007fe72, 0x00008282, AL, STRH(r2, r0, 0x014); /* [0xfffb1014] */);
T(0x1007fe74, 0x00008ac2, AL, LDRH(r2, r0, 0x016); /* [0xfffb1016] */);
T(0x1007fe76, 0x000023ff, AL, MOVS(r3, 0xff));
T(0x1007fe78, 0x0000021b, AL, LSL(r3, r3, 0x08));
T(0x1007fe7a, 0x0000439a, AL, BIC(r2, r3));
T(0x1007fe7c, 0x0000230f, AL, MOVS(r3, 0x0f));
T(0x1007fe7e, 0x0000021b, AL, LSL(r3, r3, 0x08));
T(0x1007fe80, 0x000018d2, AL, SUBS(r2, r2, r3);
T(0x1007fe82, 0x00000a12, AL, LSR(r2, r2, 0x08));
T(0x1007fe84, 0x00004b81, AL, LDR(r3, PC, 0x0204); /* [0x1008008c]:0x102c77e8 */);
T(0x1007fe86, 0x00000212, AL, LSL(r2, r2, 0x08));
T(0x1007fe88, 0x00003b04, AL, SUBS(r3, 0x04));
T(0x1007fe8a, 0x0000781b, AL, LDRB(r3, r3));
T(0x1007fe8c, 0x0000431a, AL, ORR(r2, r3));
T(0x1007fe8e, 0x000082c2, AL, STRH(r2, r0, 0x016); /* [0xfffb1016] */);
T(0x1007fe90, 0x00004a7f, AL, LDR(r2, PC, 0x01fc); /* [0x10080090]:0xfffb1020 */);
T(0x1007fe92, 0x00008893, AL, LDRH(r3, r2, 0x004); /* [0xfffb1024] */);
T(0x1007fe94, 0x0000010c, AL, LSL(r4, r1, 0x04));
T(0x1007fe96, 0x00004323, AL, ORR(r3, r4));
T(0x1007fe98, 0x000000cc, AL, LSL(r4, r1, 0x03));
T(0x1007fe9a, 0x00004323, AL, ORR(r3, r4));
T(0x1007fe9c, 0x0000008c, AL, LSL(r4, r1, 0x02));
T(0x1007fe9e, 0x00004323, AL, ORR(r3, r4));
T(0x1007fea0, 0x0000004d, AL, LSL(r5, r1, 0x01));
T(0x1007fea2, 0x0000432b, AL, ORR(r3, r5));
T(0x1007fea4, 0x0000438b, AL, BIC(r3, r1));
T(0x1007fea6, 0x00002108, AL, MOVS(r1, 0x08));
T(0x1007fea8, 0x00004319, AL, ORR(r1, r3));
T(0x1007feaa, 0x00002302, AL, MOVS(r3, 0x02));
T(0x1007feac, 0x00004319, AL, ORR(r1, r3));
T(0x1007feae, 0x00008091, AL, STRH(r1, r2, 0x004); /* [0xfffb1024] */);
T(0x1007feb0, 0x00008a01, AL, LDRH(r1, r0, 0x010); /* [0xfffb1010] */);
T(0x1007feb2, 0x0000039a, AL, LSL(r2, r3, 0x0e));
T(0x1007feb4, 0x00004391, AL, BIC(r1, r2));
T(0x1007feb6, 0x00000889, AL, LSR(r1, r1, 0x02));
T(0x1007feb8, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x1007feba, 0x00003101, AL, ADDS(r1, 0x01));
T(0x1007febc, 0x00008201, AL, STRH(r1, r0, 0x010); /* [0xfffb1010] */);
T(0x1007febe, 0x00008a41, AL, LDRH(r1, r0, 0x012); /* [0xfffb1012] */);
T(0x1007fec0, 0x0000227f, AL, MOVS(r2, 0x7f));
T(0x1007fec2, 0x00000212, AL, LSL(r2, r2, 0x08));
T(0x1007fec4, 0x00004391, AL, BIC(r1, r2));
T(0x1007fec6, 0x000022e0, AL, MOVS(r2, 0xe0));
T(0x1007fec8, 0x00004391, AL, BIC(r1, r2));
T(0x1007feca, 0x000031a0, AL, ADDS(r1, 0xa0));
T(0x1007fecc, 0x00008241, AL, STRH(r1, r0, 0x012); /* [0xfffb1012] */);
T(0x1007fece, 0x00004a71, AL, LDR(r2, PC, 0x01c4); /* [0x10080094]:0xfffec700 */);
T(0x1007fed0, 0x00006890, AL, LDR(r0, r2, 0x008); /* [0xfffec708] */);
T(0x1007fed2, 0x00006891, AL, LDR(r1, r2, 0x008); /* [0xfffec708] */);
T(0x1007fed4, 0x000023ff, AL, MOVS(r3, 0xff));
T(0x1007fed6, 0x00003330, AL, ADDS(r3, 0x30));
T(0x1007fed8, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007feda, 0x00004299, AL, CMP(r1, r3));
T(0x1007fedc, 0x0000d203, CS, B(0x1007fee6); /* 0x1007fee0 + 0x006 */);
T(0x1007fede, 0x00006891, AL, LDR(r1, r2, 0x008); /* [0xfffec708] */);
T(0x1007fee0, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007fee2, 0x00004299, AL, CMP(r1, r3));
T(0x1007fee4, 0x0000d3fb, CC, B(0x1007fede); /* 0x1007fee8 + 0xfffffff6 */);

T(0x1007fee6, 0x00004868, AL, LDR(r0, PC, 0x01a0); /* [0x10080088]:0xfffb1000 */);
T(0x1007fee8, 0x00008901, AL, LDRH(r1, r0, 0x008); /* [0xfffb1008] */);
T(0x1007feea, 0x00004321, AL, ORR(r1, r4));
T(0x1007feec, 0x00002480, AL, MOVS(r4, 0x80));
T(0x1007feee, 0x00004321, AL, ORR(r1, r4));
T(0x1007fef0, 0x00002440, AL, MOVS(r4, 0x40));
T(0x1007fef2, 0x00004321, AL, ORR(r1, r4));
T(0x1007fef4, 0x00008101, AL, STRH(r1, r0, 0x008); /* [0xfffb1008] */);
T(0x1007fef6, 0x00006890, AL, LDR(r0, r2, 0x008); /* [0x00000008] */);
T(0x1007fef8, 0x00006891, AL, LDR(r1, r2, 0x008); /* [0x00000008] */);
T(0x1007fefa, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007fefc, 0x00004299, AL, CMP(r1, r3));
T(0x1007fefe, 0x0000d203, CS, B(0x1007ff08); /* 0x1007ff02 + 0x006 */);
T(0x1007ff00, 0x00006891, AL, LDR(r1, r2, 0x008); /* [0x00000008] */);
T(0x1007ff02, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007ff04, 0x00004299, AL, CMP(r1, r3));
T(0x1007ff06, 0x0000d3fb, CC, B(0x1007ff00); /* 0x1007ff0a + 0xfffffff6 */);

T(0x1007ff08, 0x00004a5f, AL, LDR(r2, PC, 0x017c); /* [0x10080088]:0xfffb1000 */);
T(0x1007ff0a, 0x00008910, AL, LDRH(r0, r2, 0x008); /* [0xfffb1008] */);
T(0x1007ff0c, 0x00002101, AL, MOVS(r1, 0x01));
T(0x1007ff0e, 0x00004308, AL, ORR(r0, r1));
T(0x1007ff10, 0x00008110, AL, STRH(r0, r2, 0x008); /* [0xfffb1008] */);
T(0x1007ff12, 0xf0e2eff2, AL, BLX(0x10162ef8); /* 0x1007ff17 + 0x00000fe4, LR = 0x1007ff16 */);
T(0x1007ff16, 0x00004b60, AL, LDR(r3, PC, 0x0180); /* [0x10080098]:0xfffe10c0 */);
T(0x1007ff18, 0x00006ad9, AL, LDR(r1, r3, 0x02c); /* [0xfffe10ec] */);
T(0x1007ff1a, 0x0000223f, AL, MOVS(r2, 0x3f));
T(0x1007ff1c, 0x00000192, AL, LSL(r2, r2, 0x06));
T(0x1007ff1e, 0x00004391, AL, BIC(r1, r2));
T(0x1007ff20, 0x000031ff, AL, ADDS(r1, 0xff));
T(0x1007ff22, 0x000031c1, AL, ADDS(r1, 0xc1));
T(0x1007ff24, 0x000062d9, AL, STR(r1, r3, 0x02c); /* [0xfffe10ec] */);
T(0x1007ff26, 0xf0e2eff0, AL, BLX(0x10162f08); /* 0x1007ff2b + 0x00000fe0, LR = 0x1007ff2a */);
T(0x1007ff2a, 0xf0e2efe6, AL, BLX(0x10162ef8); /* 0x1007ff2f + 0x00000fcc, LR = 0x1007ff2e */);
T(0x1007ff2e, 0x00004a5b, AL, LDR(r2, PC, 0x016c); /* [0x1008009c]:0xffefffff */);
T(0x1007ff30, 0x0000495b, AL, LDR(r1, PC, 0x016c); /* [0x100800a0]:0xfffecb00 */);
T(0x1007ff32, 0x0000600a, AL, STR(r2, r1); /* [0xfffecb00] */);
T(0x1007ff34, 0x0000684a, AL, LDR(r2, r1, 0x004); /* [0xfffecb04] */);
T(0x1007ff36, 0x00002301, AL, MOVS(r3, 0x01));
T(0x1007ff38, 0x0000051b, AL, LSL(r3, r3, 0x14));
T(0x1007ff3a, 0x0000439a, AL, BIC(r2, r3));
T(0x1007ff3c, 0x0000604a, AL, STR(r2, r1, 0x004); /* [0xfffecb04] */);
T(0x1007ff3e, 0xf0e2efe4, AL, BLX(0x10162f08); /* 0x1007ff43 + 0x00000fc8, LR = 0x1007ff42 */);
T(0x1007ff42, 0x0000bd38, AL, POP(rSP, r{...345.., PC}););

T(0x1007ff44, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x1007ff46, 0xf0e2efd8, AL, BLX(0x10162ef8); /* 0x1007ff4b + 0x00000fb0, LR = 0x1007ff4a */);
T(0x1007ff4a, 0x00004956, AL, LDR(r1, PC, 0x0158); /* [0x100800a4]:0xfffe1080 */);
T(0x1007ff4c, 0x0000680a, AL, LDR(r2, r1); /* [0xfffe1080] */);
T(0x1007ff4e, 0x00002301, AL, MOVS(r3, 0x01));
T(0x1007ff50, 0x0000049b, AL, LSL(r3, r3, 0x12));
T(0x1007ff52, 0x0000439a, AL, BIC(r2, r3));
T(0x1007ff54, 0x0000600a, AL, STR(r2, r1); /* [0xfffe1080] */);
T(0x1007ff56, 0xf0e2efd8, AL, BLX(0x10162f08); /* 0x1007ff5b + 0x00000fb0, LR = 0x1007ff5a */);
T(0x1007ff5a, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x1007ff7e, 0x00004942, AL, LDR(r1, PC, 0x0108); /* [0x10080088]:0xfffb1000 */);
T(0x1007ff80, 0x0000b410, AL, PUSH(rSP, r{....4...}););
T(0x1007ff82, 0x00008a8a, AL, LDRH(r2, r1, 0x014); /* [0xfffb1014] */);
T(0x1007ff84, 0x00004c41, AL, LDR(r4, PC, 0x0104); /* [0x1008008c]:0x102c77e8 */);
T(0x1007ff86, 0x00000043, AL, LSL(r3, r0, 0x01));
T(0x1007ff88, 0x00005ae3, AL, LDRH(r3, r4, r3));
T(0x1007ff8a, 0x00000b12, AL, LSR(r2, r2, 0x0c));
T(0x1007ff8c, 0x00000312, AL, LSL(r2, r2, 0x0c));
T(0x1007ff8e, 0x0000051b, AL, LSL(r3, r3, 0x14));
T(0x1007ff90, 0x00000d1b, AL, LSR(r3, r3, 0x14));
T(0x1007ff92, 0x0000431a, AL, ORR(r2, r3));
T(0x1007ff94, 0x0000828a, AL, STRH(r2, r1, 0x014); /* [0xfffb1014] */);
T(0x1007ff96, 0x00008aca, AL, LDRH(r2, r1, 0x016); /* [0xfffb1016] */);
T(0x1007ff98, 0x00000a12, AL, LSR(r2, r2, 0x08));
T(0x1007ff9a, 0x00000212, AL, LSL(r2, r2, 0x08));
T(0x1007ff9c, 0x00001f23, AL, ADDS(r3, r4, 0x4); /* 0x102c77e8 + 0x00000004 = 0x102c77ec */ XXX);
T(0x1007ff9e, 0x00005c18, AL, LDRB(r0, r3, r0));
T(0x1007ffa0, 0x00004310, AL, ORR(r0, r2));
T(0x1007ffa2, 0x000082c8, AL, STRH(r0, r1, 0x016); /* [0xfffb1016] */);
T(0x1007ffa4, 0x0000bc10, AL, POP(rSP, r{....4...}););
T(0x1007ffa6, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100800ec, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x100800ee, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100800f0, 0x00004912, AL, LDR(r1, PC, 0x0048); /* [0x1008013c]:0x10859468 */);
T(0x100800f2, 0x00004f13, AL, LDR(r7, PC, 0x004c); /* [0x10080140]:0xfffec700 */);
T(0x100800f4, 0x00002600, AL, MOVS(r6, 0x00));
T(0x100800f6, 0x00002400, AL, MOVS(r4, 0x00));
T(0x100800f8, 0x00006008, AL, STR(r0, r1); /* [0x10859468] */);
T(0x100800fa, 0x00009000, AL, STR(r0, SP, 0x0000);
T(0x100800fc, 0x00002500, AL, MOVS(r5, 0x00));
T(0x100800fe, 0x00004668, AL, MOV(r0, SP));
T(0x10080100, 0xf7ffffe4, AL, BL(0x100800cc); /* 0x10080105 + 0x00000fc8, LR = 0x10080104 */);
T(0x10080104, 0x00009800, AL, LDR(r0, SP, 0x0000);
T(0x10080106, 0x000042b0, AL, CMP(r0, r6));
T(0x10080108, 0x0000d001, EQ, B(0x1008010e); /* 0x1008010c + 0x002 */);
T(0x1008010a, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1008010c, 0x0000e006, AL, B(0x1008011a); /* 0x1008010f + 0x00c*/);

T(0x100800cc, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x100800ce, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100800d0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100800d2, 0x00006020, AL, STR(r0, r4));
T(0x100800d4, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x100800d6, 0xf7fffff8, AL, BL(0x100800ca); /* 0x100800db + 0x00000ff0, LR = 0x100800da */);
T(0x100800da, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x100800dc, 0xf000f834, AL, BL(0x10080148); /* 0x100800e1 + 0x00000068, LR = 0x100800e0 */);
T(0x100800e0, 0x00006821, AL, LDR(r1, r4));
T(0x100800e2, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100800e4, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100800e6, 0x0000d100, NE, B(0x100800ea); /* 0x100800ea + 0x000 */);
T(0x100800e8, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100800ea, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x100800ca, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100800ea, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1008010e, 0x00003401, AL, ADDS(r4, 0x01));
T(0x10080110, 0x00002c0a, AL, CMPS(r4, 0x0a));
T(0x10080112, 0x0000d103, NE, B(0x1008011c); /* 0x10080116 + 0x006 */);
T(0x10080114, 0x00004909, AL, LDR(r1, PC, 0x0024); /* [0x1008013c]:0x10859468 */);
T(0x10080116, 0x00009800, AL, LDR(r0, SP, 0x0000);
T(0x10080118, 0x00006008, AL, STR(r0, r1); /* [0x10859468] */);
T(0x1008011a, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x1008011a, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x1008011c, 0x00001c06, AL, SUBS(r6, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1008011e, 0x000068b8, AL, LDR(r0, r7, 0x008); /* [0x00000008] */);
T(0x10080120, 0x000068b9, AL, LDR(r1, r7, 0x008); /* [0x00000008] */);
T(0x10080122, 0x00004a08, AL, LDR(r2, PC, 0x0020); /* [0x10080144]:0x00000bbb */);
T(0x10080124, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x10080126, 0x00004291, AL, CMP(r1, r2));
T(0x10080128, 0x0000d203, CS, B(0x10080132); /* 0x1008012c + 0x006 */);
T(0x1008012a, 0x000068b9, AL, LDR(r1, r7, 0x008); /* [0x00000008] */);
T(0x1008012c, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1008012e, 0x00004291, AL, CMP(r1, r2));
T(0x10080130, 0x0000d3fb, CC, B(0x1008012a); /* 0x10080134 + 0xfffffff6 */);

T(0x10080132, 0x00003501, AL, ADDS(r5, 0x01));
T(0x10080134, 0x00002d64, AL, CMPS(r5, 0x64));
T(0x10080136, 0x0000dbe2, LT, B(0x100800fe); /* 0x1008013a + 0xffffffc4 */);
T(0x10080138, 0x0000e7ef, AL, B(0x10080118); /* 0x1008013b + 0xffffffde*/);

T(0x100800fe, 0x00004668, AL, MOV(r0, SP));
T(0x10080100, 0xf7ffffe4, AL, BL(0x100800cc); /* 0x10080105 + 0x00000fc8, LR = 0x10080104 */);
T(0x10080104, 0x00009800, AL, LDR(r0, SP, 0x0000);
T(0x10080106, 0x000042b0, AL, CMP(r0, r6));
T(0x10080108, 0x0000d001, EQ, B(0x1008010e); /* 0x1008010c + 0x002 */);
T(0x1008010a, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1008010c, 0x0000e006, AL, B(0x1008011a); /* 0x1008010f + 0x00c*/);

T(0x10080118, 0x00006008, AL, STR(r0, r1); /* [0x00000000] */);
T(0x1008011a, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10080148, 0x00004904, AL, LDR(r1, PC, 0x0010); /* [0x1008015c]:0xfffbe400 */);
T(0x1008014a, 0x00006ac9, AL, LDR(r1, r1, 0x02c));
T(0x1008014c, 0x00000709, AL, LSL(r1, r1, 0x1c));
T(0x1008014e, 0x0000d403, MI, B(0x10080158); /* 0x10080152 + 0x006 */);
T(0x10080150, 0x00006801, AL, LDR(r1, r0); /* [0x00000000] */);
T(0x10080152, 0x00002201, AL, MOVS(r2, 0x01));
T(0x10080154, 0x00004311, AL, ORR(r1, r2));
T(0x10080156, 0x00006001, AL, STR(r1, r0); /* [0x00000000] */);
T(0x10080158, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10080158, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10082f52, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x10082f54, 0xf7f8fab9, AL, BL(0x1007b4ca); /* 0x10082f59 + 0x00000572, LR = 0x10082f58 */);
T(0x10082f58, 0x00004909, AL, LDR(r1, PC, 0x0024); /* [0x10082f80]:0x00001d4c */);
T(0x10082f5a, 0x00004288, AL, CMP(r0, r1));
T(0x10082f5c, 0x0000d901, LS, B(0x10082f62); /* 0x10082f60 + 0x002 */);
T(0x10082f5e, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10082f60, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x1007b4ca, 0x000048eb, AL, LDR(r0, PC, 0x03ac); /* [0x1007b878]:0x105fbc08 */);
T(0x1007b4cc, 0x00008940, AL, LDRH(r0, r0, 0x00a));
T(0x1007b4ce, 0x00004770, AL, BX(LR); /* 0x105fbc08 */);

T(0x10082f62, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10082f64, 0x0000e7fc, AL, B(0x10082f5e); /* 0x10082f67 + 0xfffffff8*/);

T(0x10082f66, 0x00004807, AL, LDR(r0, PC, 0x001c); /* [0x10082f84]:0xfffbbc00 */);
T(0x10082f68, 0x00006ac0, AL, LDR(r0, r0, 0x02c));
T(0x10082f6a, 0x00000440, AL, LSL(r0, r0, 0x11));
T(0x10082f6c, 0x000017c0, AL, ASR(r0, r0, 0x1f));
T(0x10082f6e, 0x00003001, AL, ADDS(r0, 0x01));
T(0x10082f70, 0x00004770, AL, BX(LR); /* 0xfffbbc00 */);

T(0x10083572, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100838cc, 0x00004996, AL, LDR(r1, PC, 0x0258); /* [0x10083b28]:0xfffecf00 */);
T(0x100838ce, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x100838d0, 0x0000880a, AL, LDRH(r2, r1); /* [0xfffecf00] */);
T(0x100838d2, 0x0000231f, AL, MOVS(r3, 0x1f));
T(0x100838d4, 0x000001db, AL, LSL(r3, r3, 0x07));
T(0x100838d6, 0x0000439a, AL, BIC(r2, r3));
T(0x100838d8, 0x000006c3, AL, LSL(r3, r0, 0x1b));
T(0x100838da, 0x00000d1b, AL, LSR(r3, r3, 0x14));
T(0x100838dc, 0x0000431a, AL, ORR(r2, r3));
T(0x100838de, 0x0000800a, AL, STRH(r2, r1); /* [0xfffecf00] */);
T(0x100838e0, 0x0000880a, AL, LDRH(r2, r1); /* [0xfffecf00] */);
T(0x100838e2, 0x000007d2, AL, LSL(r2, r2, 0x1f));
T(0x100838e4, 0x0000d402, MI, B(0x100838ec); /* 0x100838e8 + 0x004 */);
T(0x100838e6, 0x0000880a, AL, LDRH(r2, r1); /* [0xfffecf00] */);
T(0x100838e8, 0x000007d2, AL, LSL(r2, r2, 0x1f));
T(0x100838ea, 0x0000d5fc, PL, B(0x100838e6); /* 0x100838ee + 0xfffffff8 */);

T(0x100838ec, 0x0000498f, AL, LDR(r1, PC, 0x023c); /* [0x10083b2c]:0x1085d084 */);
T(0x100838ee, 0x00002811, AL, CMPS(r0, 0x11));
T(0x100838f0, 0x0000d202, CS, B(0x100838f8); /* 0x100838f4 + 0x004 */);
T(0x100838f2, 0x00002002, AL, MOVS(r0, 0x02));
T(0x100838f4, 0x00006008, AL, STR(r0, r1); /* [0x1085d084] */);
T(0x100838f6, 0x0000e001, AL, B(0x100838fa); /* 0x100838f9 + 0x002*/);

T(0x100838f8, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100838fa, 0x00006008, AL, STR(r0, r1); /* [0x00000000] */);
T(0x100838fc, 0xf7fae884, AL, BLX(0x1007da08); /* 0x10083901 + 0x00000108, LR = 0x10083900 */);
T(0x10083900, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

A(0x1007da08, 0xe59f33f0, AL, LDR(r3, PC, +0x03f0); /* [0x1007de00]:0x10fda7e0 */);
A(0x1007da0c, 0xe3a00c40, AL, MOV(r0, ROR(64, 24)); /* 0x00004000 */);
A(0x1007da10, 0xe5830000, AL, STR(r0, r3, +0x0000); /* [0x10fda7e0] */);
A(0x1007da14, 0xe3a00001, AL, MOV(r0, 1));
A(0x1007da18, 0xe3a01000, AL, MOV(r1, 0));
A(0x1007da1c, 0xe7831100, AL, STR(r1, r3LSL(r0, 2)));
A(0x1007da20, 0xe2800001, AL, ADD(r0, r0, 1));
A(0x1007da24, 0xe3500008, AL, CMP(r0, 8));
A(0x1007da28, 0xbafffffb, LT, B(0x1007da1c));
A(0x1007da2c, 0xe59f03c4, AL, LDR(r0, PC, +0x03c4); /* [0x1007ddf8]:0xfffec000 */);
A(0x1007da30, 0xe3a02080, AL, MOV(r2, 128));
A(0x1007da34, 0xe5802000, AL, STR(r2, r0, +0x0000); /* [0xfffec000] */);
A(0x1007da38, 0xe59f23c4, AL, LDR(r2, PC, +0x03c4); /* [0x1007de04]:0x051438ef */);
A(0x1007da3c, 0xe5802004, AL, STR(r2, r0, +0x0004); /* [0xfffec004] */);
A(0x1007da40, 0xe59f23c0, AL, LDR(r2, PC, +0x03c0); /* [0x1007de08]:0x0605093f */);
A(0x1007da44, 0xe5802008, AL, STR(r2, r0, +0x0008); /* [0xfffec008] */);
A(0x1007da48, 0xe59f23bc, AL, LDR(r2, PC, +0x03bc); /* [0x1007de0c]:0x1085d080 */);
A(0x1007da4c, 0xe5d22000, AL, LDRB(r2, r2, +0x0000));
A(0x1007da50, 0xe3520000, AL, CMP(r2, 0));
A(0x1007da54, 0x059f23b4, EQ, LDR(r2, PC, +0x03b4); /* [0x1007de10]:0x1085d084 */);
A(0x1007da58, 0x05922000, EQ, LDR(r2, r2, +0x0000));
A(0x1007da5c, 0x03520002, EQ, CMP(r2, 2));
A(0x1007da60, 0x059f23ac, EQ, LDR(r2, PC, +0x03ac); /* [0x1007de14]:0x00000206 */);
A(0x1007da64, 0x0580200c, EQ, STR(r2, r0, +0x000c); /* [0xfffec00c] */);
A(0x1007da68, 0x0a000001, EQ, B(0x1007da74));
A(0x1007da6c, 0xe3a02f84, AL, MOV(r2, ROR(132, 30)); /* 0x00000210 */);
A(0x1007da70, 0xe580200c, AL, STR(r2, r0, +0x000c); /* [0xfffec00c] */);
A(0x1007da74, 0xe5801010, AL, STR(r1, r0, +0x0010); /* [0xfffec010] */);
A(0x1007da78, 0xe5801014, AL, STR(r1, r0, +0x0014); /* [0xfffec014] */);
A(0x1007da7c, 0xe5801018, AL, STR(r1, r0, +0x0018); /* [0xfffec018] */);
A(0x1007da80, 0xe59f2390, AL, LDR(r2, PC, +0x0390); /* [0x1007de18]:0xfffba000 */);
A(0x1007da84, 0xe5821c00, AL, STR(r1, r2, +0x0c00); /* [0xfffbac00] */);
A(0x1007da88, 0xe5821c04, AL, STR(r1, r2, +0x0c04); /* [0xfffbac04] */);
A(0x1007da8c, 0xe3a0c03a, AL, MOV(r12, 58));
A(0x1007da90, 0xe582cc08, AL, STR(r12, r2, +0x0c08); /* [0xfffbac08] */);
A(0x1007da94, 0xe5821c0c, AL, STR(r1, r2, +0x0c0c); /* [0xfffbac0c] */);
A(0x1007da98, 0xe5821c10, AL, STR(r1, r2, +0x0c10); /* [0xfffbac10] */);
A(0x1007da9c, 0xe5821c14, AL, STR(r1, r2, +0x0c14); /* [0xfffbac14] */);
A(0x1007daa0, 0xe5821c18, AL, STR(r1, r2, +0x0c18); /* [0xfffbac18] */);
A(0x1007daa4, 0xe5821c1c, AL, STR(r1, r2, +0x0c1c); /* [0xfffbac1c] */);
A(0x1007daa8, 0xe5821c20, AL, STR(r1, r2, +0x0c20); /* [0xfffbac20] */);
A(0x1007daac, 0xe59fc368, AL, LDR(r12, PC, +0x0368); /* [0x1007de1c]:0x00000151 */);
A(0x1007dab0, 0xe2822bb6, AL, ADD(r2, r2, ROR(182, 22)); /* 0x0002d800 */);
A(0x1007dab4, 0xe1c2c0b0, AL, STRH(r12, r2, +0x0000);
A(0x1007dab8, 0xe1c210b2, AL, STRH(r1, r2, +0x0002);
A(0x1007dabc, 0xe3a0c009, AL, MOV(r12, 9));
A(0x1007dac0, 0xe1c2c0b4, AL, STRH(r12, r2, +0x0004);
A(0x1007dac4, 0xe59fc354, AL, LDR(r12, PC, +0x0354); /* [0x1007de20]:0x0000618b */);
A(0x1007dac8, 0xe1c2c0b6, AL, STRH(r12, r2, +0x0006);
A(0x1007dacc, 0xe28ccef0, AL, ADD(r12, r12, ROR(240, 28)); /* 0x00000f00 */);
A(0x1007dad0, 0xe1c2c0b8, AL, STRH(r12, r2, +0x0008);
A(0x1007dad4, 0xe3a0c014, AL, MOV(r12, 20));
A(0x1007dad8, 0xe1c2c0ba, AL, STRH(r12, r2, +0x000a);
A(0x1007dadc, 0xe3a0c002, AL, MOV(r12, 2));
A(0x1007dae0, 0xe1c2c0bc, AL, STRH(r12, r2, +0x000c);
A(0x1007dae4, 0xe3a0c001, AL, MOV(r12, 1));
A(0x1007dae8, 0xe1c2c0be, AL, STRH(r12, r2, +0x000e);
A(0x1007daec, 0xe1c211b0, AL, STRH(r1, r2, +0x0010);
A(0x1007daf0, 0xe1c211b2, AL, STRH(r1, r2, +0x0012);
A(0x1007daf4, 0xe1c211b4, AL, STRH(r1, r2, +0x0014);
A(0x1007daf8, 0xe1c211b6, AL, STRH(r1, r2, +0x0016);
A(0x1007dafc, 0xe1c211b8, AL, STRH(r1, r2, +0x0018);
A(0x1007db00, 0xe1c211ba, AL, STRH(r1, r2, +0x001a);
A(0x1007db04, 0xe59fc318, AL, LDR(r12, PC, +0x0318); /* [0x1007de24]:0x00004881 */);
A(0x1007db08, 0xe2822c6b, AL, ADD(r2, r2, ROR(107, 24)); /* 0x00006b00 */);
A(0x1007db0c, 0xe1c2ccb0, AL, STRH(r12, r2, +0x00c0);
A(0x1007db10, 0xe1c21cb4, AL, STRH(r1, r2, +0x00c4);
A(0x1007db14, 0xe1c23cb8, AL, STRH(r3, r2, +0x00c8);
A(0x1007db18, 0xe1a0c823, AL, MOV(r12, LSR(r3, 0x10)));
A(0x1007db1c, 0xe1c2ccba, AL, STRH(r12, r2, +0x00ca);
A(0x1007db20, 0xe2833b96, AL, ADD(r3, r3, ROR(150, 22)); /* 0x00025800 */);
A(0x1007db24, 0xe283301e, AL, ADD(r3, r3, 30));
A(0x1007db28, 0xe1c23cbc, AL, STRH(r3, r2, +0x00cc);
A(0x1007db2c, 0xe1a03823, AL, MOV(r3, LSR(r3, 0x10)));
A(0x1007db30, 0xe1c23cbe, AL, STRH(r3, r2, +0x00ce);
A(0x1007db34, 0xe1c21db0, AL, STRH(r1, r2, +0x00d0);
A(0x1007db38, 0xe1c21db2, AL, STRH(r1, r2, +0x00d2);
A(0x1007db3c, 0xe1c21db4, AL, STRH(r1, r2, +0x00d4);
A(0x1007db40, 0xe1c21db6, AL, STRH(r1, r2, +0x00d6);
A(0x1007db44, 0xe1c21db8, AL, STRH(r1, r2, +0x00d8);
A(0x1007db48, 0xe1c21dba, AL, STRH(r1, r2, +0x00da);
A(0x1007db4c, 0xe1c21dbc, AL, STRH(r1, r2, +0x00dc);
A(0x1007db50, 0xe1c21dbe, AL, STRH(r1, r2, +0x00de);
A(0x1007db54, 0xe3a030f0, AL, MOV(r3, 240));
A(0x1007db58, 0xe1c23eb0, AL, STRH(r3, r2, +0x00e0);
A(0x1007db5c, 0xe1c21eb2, AL, STRH(r1, r2, +0x00e2);
A(0x1007db60, 0xe3a03f50, AL, MOV(r3, ROR(80, 30)); /* 0x00000140 */);
A(0x1007db64, 0xe1c23eb4, AL, STRH(r3, r2, +0x00e4);
A(0x1007db68, 0xe1c21eb6, AL, STRH(r1, r2, +0x00e6);
A(0x1007db6c, 0xe3a03004, AL, MOV(r3, 4));
A(0x1007db70, 0xe1c23eba, AL, STRH(r3, r2, +0x00ea);
A(0x1007db74, 0xe1c21fb4, AL, STRH(r1, r2, +0x00f4);
A(0x1007db78, 0xe1c21fb6, AL, STRH(r1, r2, +0x00f6);
A(0x1007db7c, 0xe1c21cb2, AL, STRH(r1, r2, +0x00c2);
A(0x1007db80, 0xe1d010b0, AL, LDRH(r1, r0, +0x0000); /* [0xfffec000] */);
A(0x1007db84, 0xe3811001, AL, ORR(r1, r1, 1));
A(0x1007db88, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0xfffec000] */);
A(0x1007db8c, 0xe3a01d40, AL, MOV(r1, ROR(64, 26)); /* 0x00001000 */);
A(0x1007db90, 0xe2412a43, AL, SUB(r2, r1, ROR(67, 20)); /* 0x00043000 */);
A(0x1007db94, 0xe58214f0, AL, STR(r1, r2, +0x04f0));
A(0x1007db98, 0xe2412a46, AL, SUB(r2, r1, ROR(70, 20)); /* 0x00046000 */);
A(0x1007db9c, 0xe5823cf0, AL, STR(r3, r2, +0x0cf0));
A(0x1007dba0, 0xe5901708, AL, LDR(r1, r0, +0x0708); /* [0xfffec708] */);
A(0x1007dba4, 0xe5903708, AL, LDR(r3, r0, +0x0708); /* [0xfffec708] */);
A(0x1007dba8, 0xe0413003, AL, SUB(r3, r1, r3));
A(0x1007dbac, 0xe253cb75, AL, SUBS(r12, r3, ROR(117, 22)); /* 0x0001d400 */);
A(0x1007dbb0, 0x225cc0c3, CS, SUBS(r12, r12, 195));
A(0x1007dbb4, 0x2a000004, CS, B(0x1007dbcc));
A(0x1007dbb8, 0xe5903708, AL, LDR(r3, r0, +0x0708); /* [0xfffec708] */);
A(0x1007dbbc, 0xe0413003, AL, SUB(r3, r1, r3));
A(0x1007dbc0, 0xe253cb75, AL, SUBS(r12, r3, ROR(117, 22)); /* 0x0001d400 */);
A(0x1007dbc4, 0x225cc0c3, CS, SUBS(r12, r12, 195));
A(0x1007dbc8, 0x3afffffa, CC, B(0x1007dbb8));

A(0x1007da74, 0xe5801010, AL, STR(r1, r0, +0x0010); /* [0x00000010] */);
A(0x1007da78, 0xe5801014, AL, STR(r1, r0, +0x0014); /* [0x00000014] */);
A(0x1007da7c, 0xe5801018, AL, STR(r1, r0, +0x0018); /* [0x00000018] */);
A(0x1007da80, 0xe59f2390, AL, LDR(r2, PC, +0x0390); /* [0x1007de18]:0xfffba000 */);
A(0x1007da84, 0xe5821c00, AL, STR(r1, r2, +0x0c00); /* [0xfffbac00] */);
A(0x1007da88, 0xe5821c04, AL, STR(r1, r2, +0x0c04); /* [0xfffbac04] */);
A(0x1007da8c, 0xe3a0c03a, AL, MOV(r12, 58));
A(0x1007da90, 0xe582cc08, AL, STR(r12, r2, +0x0c08); /* [0xfffbac08] */);
A(0x1007da94, 0xe5821c0c, AL, STR(r1, r2, +0x0c0c); /* [0xfffbac0c] */);
A(0x1007da98, 0xe5821c10, AL, STR(r1, r2, +0x0c10); /* [0xfffbac10] */);
A(0x1007da9c, 0xe5821c14, AL, STR(r1, r2, +0x0c14); /* [0xfffbac14] */);
A(0x1007daa0, 0xe5821c18, AL, STR(r1, r2, +0x0c18); /* [0xfffbac18] */);
A(0x1007daa4, 0xe5821c1c, AL, STR(r1, r2, +0x0c1c); /* [0xfffbac1c] */);
A(0x1007daa8, 0xe5821c20, AL, STR(r1, r2, +0x0c20); /* [0xfffbac20] */);
A(0x1007daac, 0xe59fc368, AL, LDR(r12, PC, +0x0368); /* [0x1007de1c]:0x00000151 */);
A(0x1007dab0, 0xe2822bb6, AL, ADD(r2, r2, ROR(182, 22)); /* 0x0002d800 */);
A(0x1007dab4, 0xe1c2c0b0, AL, STRH(r12, r2, +0x0000);
A(0x1007dab8, 0xe1c210b2, AL, STRH(r1, r2, +0x0002);
A(0x1007dabc, 0xe3a0c009, AL, MOV(r12, 9));
A(0x1007dac0, 0xe1c2c0b4, AL, STRH(r12, r2, +0x0004);
A(0x1007dac4, 0xe59fc354, AL, LDR(r12, PC, +0x0354); /* [0x1007de20]:0x0000618b */);
A(0x1007dac8, 0xe1c2c0b6, AL, STRH(r12, r2, +0x0006);
A(0x1007dacc, 0xe28ccef0, AL, ADD(r12, r12, ROR(240, 28)); /* 0x00000f00 */);
A(0x1007dad0, 0xe1c2c0b8, AL, STRH(r12, r2, +0x0008);
A(0x1007dad4, 0xe3a0c014, AL, MOV(r12, 20));
A(0x1007dad8, 0xe1c2c0ba, AL, STRH(r12, r2, +0x000a);
A(0x1007dadc, 0xe3a0c002, AL, MOV(r12, 2));
A(0x1007dae0, 0xe1c2c0bc, AL, STRH(r12, r2, +0x000c);
A(0x1007dae4, 0xe3a0c001, AL, MOV(r12, 1));
A(0x1007dae8, 0xe1c2c0be, AL, STRH(r12, r2, +0x000e);
A(0x1007daec, 0xe1c211b0, AL, STRH(r1, r2, +0x0010);
A(0x1007daf0, 0xe1c211b2, AL, STRH(r1, r2, +0x0012);
A(0x1007daf4, 0xe1c211b4, AL, STRH(r1, r2, +0x0014);
A(0x1007daf8, 0xe1c211b6, AL, STRH(r1, r2, +0x0016);
A(0x1007dafc, 0xe1c211b8, AL, STRH(r1, r2, +0x0018);
A(0x1007db00, 0xe1c211ba, AL, STRH(r1, r2, +0x001a);
A(0x1007db04, 0xe59fc318, AL, LDR(r12, PC, +0x0318); /* [0x1007de24]:0x00004881 */);
A(0x1007db08, 0xe2822c6b, AL, ADD(r2, r2, ROR(107, 24)); /* 0x00006b00 */);
A(0x1007db0c, 0xe1c2ccb0, AL, STRH(r12, r2, +0x00c0);
A(0x1007db10, 0xe1c21cb4, AL, STRH(r1, r2, +0x00c4);
A(0x1007db14, 0xe1c23cb8, AL, STRH(r3, r2, +0x00c8);
A(0x1007db18, 0xe1a0c823, AL, MOV(r12, LSR(r3, 0x10)));
A(0x1007db1c, 0xe1c2ccba, AL, STRH(r12, r2, +0x00ca);
A(0x1007db20, 0xe2833b96, AL, ADD(r3, r3, ROR(150, 22)); /* 0x00025800 */);
A(0x1007db24, 0xe283301e, AL, ADD(r3, r3, 30));
A(0x1007db28, 0xe1c23cbc, AL, STRH(r3, r2, +0x00cc);
A(0x1007db2c, 0xe1a03823, AL, MOV(r3, LSR(r3, 0x10)));
A(0x1007db30, 0xe1c23cbe, AL, STRH(r3, r2, +0x00ce);
A(0x1007db34, 0xe1c21db0, AL, STRH(r1, r2, +0x00d0);
A(0x1007db38, 0xe1c21db2, AL, STRH(r1, r2, +0x00d2);
A(0x1007db3c, 0xe1c21db4, AL, STRH(r1, r2, +0x00d4);
A(0x1007db40, 0xe1c21db6, AL, STRH(r1, r2, +0x00d6);
A(0x1007db44, 0xe1c21db8, AL, STRH(r1, r2, +0x00d8);
A(0x1007db48, 0xe1c21dba, AL, STRH(r1, r2, +0x00da);
A(0x1007db4c, 0xe1c21dbc, AL, STRH(r1, r2, +0x00dc);
A(0x1007db50, 0xe1c21dbe, AL, STRH(r1, r2, +0x00de);
A(0x1007db54, 0xe3a030f0, AL, MOV(r3, 240));
A(0x1007db58, 0xe1c23eb0, AL, STRH(r3, r2, +0x00e0);
A(0x1007db5c, 0xe1c21eb2, AL, STRH(r1, r2, +0x00e2);
A(0x1007db60, 0xe3a03f50, AL, MOV(r3, ROR(80, 30)); /* 0x00000140 */);
A(0x1007db64, 0xe1c23eb4, AL, STRH(r3, r2, +0x00e4);
A(0x1007db68, 0xe1c21eb6, AL, STRH(r1, r2, +0x00e6);
A(0x1007db6c, 0xe3a03004, AL, MOV(r3, 4));
A(0x1007db70, 0xe1c23eba, AL, STRH(r3, r2, +0x00ea);
A(0x1007db74, 0xe1c21fb4, AL, STRH(r1, r2, +0x00f4);
A(0x1007db78, 0xe1c21fb6, AL, STRH(r1, r2, +0x00f6);
A(0x1007db7c, 0xe1c21cb2, AL, STRH(r1, r2, +0x00c2);
A(0x1007db80, 0xe1d010b0, AL, LDRH(r1, r0, +0x0000); /* [0x00000000] */);
A(0x1007db84, 0xe3811001, AL, ORR(r1, r1, 1));
A(0x1007db88, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0x00000000] */);
A(0x1007db8c, 0xe3a01d40, AL, MOV(r1, ROR(64, 26)); /* 0x00001000 */);
A(0x1007db90, 0xe2412a43, AL, SUB(r2, r1, ROR(67, 20)); /* 0x00043000 */);
A(0x1007db94, 0xe58214f0, AL, STR(r1, r2, +0x04f0));
A(0x1007db98, 0xe2412a46, AL, SUB(r2, r1, ROR(70, 20)); /* 0x00046000 */);
A(0x1007db9c, 0xe5823cf0, AL, STR(r3, r2, +0x0cf0));
A(0x1007dba0, 0xe5901708, AL, LDR(r1, r0, +0x0708); /* [0x00000708] */);
A(0x1007dba4, 0xe5903708, AL, LDR(r3, r0, +0x0708); /* [0x00000708] */);
A(0x1007dba8, 0xe0413003, AL, SUB(r3, r1, r3));
A(0x1007dbac, 0xe253cb75, AL, SUBS(r12, r3, ROR(117, 22)); /* 0x0001d400 */);
A(0x1007dbb0, 0x225cc0c3, CS, SUBS(r12, r12, 195));
A(0x1007dbb4, 0x2a000004, CS, B(0x1007dbcc));
A(0x1007dbb8, 0xe5903708, AL, LDR(r3, r0, +0x0708); /* [0x00000708] */);
A(0x1007dbbc, 0xe0413003, AL, SUB(r3, r1, r3));
A(0x1007dbc0, 0xe253cb75, AL, SUBS(r12, r3, ROR(117, 22)); /* 0x0001d400 */);
A(0x1007dbc4, 0x225cc0c3, CS, SUBS(r12, r12, 195));
A(0x1007dbc8, 0x3afffffa, CC, B(0x1007dbb8));

A(0x1007dbcc, 0xe3a00f80, AL, MOV(r0, ROR(128, 30)); /* 0x00000200 */);
A(0x1007dbd0, 0xe58204f0, AL, STR(r0, r2, +0x04f0); /* [0x000004f0] */);
A(0x1007dbd4, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

T(0x100838fa, 0x00006008, AL, STR(r0, r1); /* [0x00000000] */);
T(0x100838fc, 0xf7fae884, AL, BLX(0x1007da08); /* 0x10083901 + 0x00000108, LR = 0x10083900 */);
T(0x10083900, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x10083902, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x10083904, 0x00004d8a, AL, LDR(r5, PC, 0x0228); /* [0x10083b30]:0xfffe6000 */);
T(0x10083906, 0x00002702, AL, MOVS(r7, 0x02));
T(0x10083908, 0x0000822f, AL, STRH(r7, r5, 0x010); /* [0xfffe6010] */);
T(0x1008390a, 0x00002603, AL, MOVS(r6, 0x03));
T(0x1008390c, 0x00004989, AL, LDR(r1, PC, 0x0224); /* [0x10083b34]:0xfffbe4c0 */);
T(0x1008390e, 0x00002080, AL, MOVS(r0, 0x80));
T(0x10083910, 0x00006308, AL, STR(r0, r1, 0x030); /* [0xfffbe4f0] */);
T(0x10083912, 0x00004989, AL, LDR(r1, PC, 0x0224); /* [0x10083b38]:0xfffbb4c0 */);
T(0x10083914, 0x00006308, AL, STR(r0, r1, 0x030); /* [0xfffbb4f0] */);
T(0x10083916, 0x00004989, AL, LDR(r1, PC, 0x0224); /* [0x10083b3c]:0xfffbb480 */);
T(0x10083918, 0x00000040, AL, LSL(r0, r0, 0x01));
T(0x1008391a, 0x00006308, AL, STR(r0, r1, 0x030); /* [0xfffbb4b0] */);
T(0x1008391c, 0x00004988, AL, LDR(r1, PC, 0x0220); /* [0x10083b40]:0xfffbe480 */);
T(0x1008391e, 0x00002040, AL, MOVS(r0, 0x40));
T(0x10083920, 0x00006308, AL, STR(r0, r1, 0x030); /* [0xfffbe4b0] */);
T(0x10083922, 0x00008aa8, AL, LDRH(r0, r5, 0x014); /* [0xfffe6014] */);
T(0x10083924, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x10083926, 0x0000d402, MI, B(0x1008392e); /* 0x1008392a + 0x004 */);
T(0x10083928, 0x00008aa8, AL, LDRH(r0, r5, 0x014); /* [0xfffe6014] */);
T(0x1008392a, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x1008392c, 0x0000d5fc, PL, B(0x10083928); /* 0x10083930 + 0xfffffff8 */);

T(0x1008392e, 0xf0dfeae4, AL, BLX(0x10162ef8); /* 0x10083933 + 0x000005c8, LR = 0x10083932 */);
T(0x10083932, 0x00008ba9, AL, LDRH(r1, r5, 0x01c); /* [0x0000001c] */);
T(0x10083934, 0x00000889, AL, LSR(r1, r1, 0x02));
T(0x10083936, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x10083938, 0x000083a9, AL, STRH(r1, r5, 0x01c); /* [0x0000001c] */);
T(0x1008393a, 0xf0dfeae6, AL, BLX(0x10162f08); /* 0x1008393f + 0x000005cc, LR = 0x1008393e */);
T(0x1008393e, 0xf0dfeadc, AL, BLX(0x10162ef8); /* 0x10083943 + 0x000005b8, LR = 0x10083942 */);
T(0x10083942, 0x00004c80, AL, LDR(r4, PC, 0x0200); /* [0x10083b44]:0xfffe6020 */);
T(0x10083944, 0x00008a21, AL, LDRH(r1, r4, 0x010); /* [0xfffe6030] */);
T(0x10083946, 0x00002208, AL, MOVS(r2, 0x08));
T(0x10083948, 0x00004311, AL, ORR(r1, r2));
T(0x1008394a, 0x00008221, AL, STRH(r1, r4, 0x010); /* [0xfffe6030] */);
T(0x1008394c, 0xf0dfeadc, AL, BLX(0x10162f08); /* 0x10083951 + 0x000005b8, LR = 0x10083950 */);
T(0x10083950, 0x00008aa0, AL, LDRH(r0, r4, 0x014); /* [0xfffe6034] */);
T(0x10083952, 0x000007b0, AL, LSL(r0, r6, 0x1e));
T(0x10083954, 0x00000c80, AL, LSR(r0, r0, 0x12));
T(0x10083956, 0x00002101, AL, MOVS(r1, 0x01));
T(0x10083958, 0x000003c9, AL, LSL(r1, r1, 0x0f));
T(0x1008395a, 0x00004308, AL, ORR(r0, r1));
T(0x1008395c, 0x00008020, AL, STRH(r0, r4); /* [0xfffe6020] */);
T(0x1008395e, 0x00008b28, AL, LDRH(r0, r5, 0x018); /* [0x00000018] */);
T(0x10083960, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x10083962, 0x0000d402, MI, B(0x1008396a); /* 0x10083966 + 0x004 */);
T(0x10083964, 0x00008b28, AL, LDRH(r0, r5, 0x018); /* [0x00000018] */);
T(0x10083966, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x10083968, 0x0000d5fc, PL, B(0x10083964); /* 0x1008396c + 0xfffffff8 */);

T(0x1008396a, 0x00008aa0, AL, LDRH(r0, r4, 0x014); /* [0x00000014] */);
T(0x1008396c, 0x00000580, AL, LSL(r0, r0, 0x16));
T(0x1008396e, 0x00004b76, AL, LDR(r3, PC, 0x01d8); /* [0x10083b48]:0x00000ce4 */);
T(0x10083970, 0x00000d80, AL, LSR(r0, r0, 0x16));
T(0x10083972, 0x00004358, AL, MUL(r0, r3));
T(0x10083974, 0x00004b75, AL, LDR(r3, PC, 0x01d4); /* [0x10083b4c]:0x1085d090 */);
T(0x10083976, 0x00002400, AL, MOVS(r4, 0x00));
T(0x10083978, 0x00004d75, AL, LDR(r5, PC, 0x01d4); /* [0x10083b50]:0x102c7838 */);
T(0x1008397a, 0x00000a82, AL, LSR(r2, r0, 0x0a));
T(0x1008397c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1008397e, 0x0000701c, AL, STRB(r4, r3); /* [0x1085d090] */);
T(0x10083980, 0x00000041, AL, LSL(r1, r0, 0x01));
T(0x10083982, 0x00005a69, AL, LDRH(r1, r5, r1));
T(0x10083984, 0x00004291, AL, CMP(r1, r2));
T(0x10083986, 0x0000d801, HI, B(0x1008398c); /* 0x1008398a + 0x002 */);
T(0x10083988, 0x00007018, AL, STRB(r0, r3); /* [0x1085d090] */);
T(0x1008398a, 0x0000e002, AL, B(0x10083990); /* 0x1008398d + 0x004*/);

T(0x1008398c, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1008398e, 0x00002804, AL, CMPS(r0, 0x04));
T(0x10083990, 0x0000d3f6, CC, B(0x10083980); /* 0x10083994 + 0xffffffec */);
T(0x10083992, 0x0000709c, AL, STRB(r4, r3, 0x002); /* [0x00000002] */);
T(0x10083994, 0x00007818, AL, LDRB(r0, r3); /* [0x00000000] */);
T(0x10083996, 0x00002101, AL, MOVS(r1, 0x01));
T(0x10083998, 0x00002801, AL, CMPS(r0, 0x01));
T(0x1008399a, 0x0000d001, EQ, B(0x100839a0); /* 0x1008399e + 0x002 */);
T(0x1008399c, 0x00002802, AL, CMPS(r0, 0x02));
T(0x1008399e, 0x0000d119, NE, B(0x100839d4); /* 0x100839a2 + 0x032 */);

T(0x10083980, 0x00000041, AL, LSL(r1, r0, 0x01));
T(0x10083982, 0x00005a69, AL, LDRH(r1, r5, r1));
T(0x10083984, 0x00004291, AL, CMP(r1, r2));
T(0x10083986, 0x0000d801, HI, B(0x1008398c); /* 0x1008398a + 0x002 */);
T(0x10083988, 0x00007018, AL, STRB(r0, r3); /* [0x00000000] */);
T(0x1008398a, 0x0000e002, AL, B(0x10083990); /* 0x1008398d + 0x004*/);

T(0x10083990, 0x0000d3f6, CC, B(0x10083980); /* 0x10083994 + 0xffffffec */);
T(0x10083992, 0x0000709c, AL, STRB(r4, r3, 0x002); /* [0x00000002] */);
T(0x10083994, 0x00007818, AL, LDRB(r0, r3); /* [0x00000000] */);
T(0x10083996, 0x00002101, AL, MOVS(r1, 0x01));
T(0x10083998, 0x00002801, AL, CMPS(r0, 0x01));
T(0x1008399a, 0x0000d001, EQ, B(0x100839a0); /* 0x1008399e + 0x002 */);
T(0x1008399c, 0x00002802, AL, CMPS(r0, 0x02));
T(0x1008399e, 0x0000d119, NE, B(0x100839d4); /* 0x100839a2 + 0x032 */);

T(0x100839a0, 0x0000486c, AL, LDR(r0, PC, 0x01b0); /* [0x10083b54]:0xfffbbc00 */);
T(0x100839a2, 0x00006ac0, AL, LDR(r0, r0, 0x02c));
T(0x100839a4, 0x000004c0, AL, LSL(r0, r0, 0x13));
T(0x100839a6, 0x0000d514, PL, B(0x100839d2); /* 0x100839aa + 0x028 */);
T(0x100839a8, 0x0000486b, AL, LDR(r0, PC, 0x01ac); /* [0x10083b58]:0xfffe1140 */);
T(0x100839aa, 0x0000701f, AL, STRB(r7, r3); /* [0x00000000] */);
T(0x100839ac, 0x00006a00, AL, LDR(r0, r0, 0x020));
T(0x100839ae, 0x00000f80, AL, LSR(r0, r0, 0x1e));
T(0x100839b0, 0x0000d008, EQ, B(0x100839c4); /* 0x100839b4 + 0x010 */);
T(0x100839b2, 0x00002801, AL, CMPS(r0, 0x01));
T(0x100839b4, 0x0000d008, EQ, B(0x100839c8); /* 0x100839b8 + 0x010 */);
T(0x100839b6, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100839b8, 0x0000d008, EQ, B(0x100839cc); /* 0x100839bc + 0x010 */);
T(0x100839ba, 0x00002803, AL, CMPS(r0, 0x03));
T(0x100839bc, 0x0000d10a, NE, B(0x100839d4); /* 0x100839c0 + 0x014 */);
T(0x100839be, 0x00002004, AL, MOVS(r0, 0x04));
T(0x100839c0, 0x00007098, AL, STRB(r0, r3, 0x002); /* [0x00000002] */);
T(0x100839c2, 0x0000e007, AL, B(0x100839d2); /* 0x100839c5 + 0x00e*/);

T(0x100839c4, 0x00007099, AL, STRB(r1, r3, 0x002); /* [0x00000002] */);
T(0x100839c6, 0x0000e005, AL, B(0x100839d2); /* 0x100839c9 + 0x00a*/);

T(0x100839c8, 0x0000709f, AL, STRB(r7, r3, 0x002); /* [0x00000002] */);
T(0x100839ca, 0x0000e003, AL, B(0x100839d2); /* 0x100839cd + 0x006*/);

T(0x100839cc, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100839ce, 0x00007098, AL, STRB(r0, r3, 0x002); /* [0x00000002] */);
T(0x100839d0, 0x0000e000, AL, B(0x100839d2); /* 0x100839d3 + 0x000*/);

T(0x100839d2, 0x00007019, AL, STRB(r1, r3); /* [0x00000000] */);
T(0x100839d4, 0x00004a61, AL, LDR(r2, PC, 0x0184); /* [0x10083b5c]:0xfffecc00 */);
T(0x100839d6, 0x00006a10, AL, LDR(r0, r2, 0x020); /* [0xfffecc20] */);
T(0x100839d8, 0x00004d61, AL, LDR(r5, PC, 0x0184); /* [0x10083b60]:0x000032b6 */);
T(0x100839da, 0x000042a8, AL, CMP(r0, r5));
T(0x100839dc, 0x0000d101, NE, B(0x100839e2); /* 0x100839e0 + 0x002 */);
T(0x100839de, 0x0000705c, AL, STRB(r4, r3, 0x001); /* [0x00000001] */);
T(0x100839e0, 0x0000e005, AL, B(0x100839ec); /* 0x100839e3 + 0x00a*/);

T(0x100839d4, 0x00004a61, AL, LDR(r2, PC, 0x0184); /* [0x10083b5c]:0xfffecc00 */);
T(0x100839d6, 0x00006a10, AL, LDR(r0, r2, 0x020); /* [0xfffecc20] */);
T(0x100839d8, 0x00004d61, AL, LDR(r5, PC, 0x0184); /* [0x10083b60]:0x000032b6 */);
T(0x100839da, 0x000042a8, AL, CMP(r0, r5));
T(0x100839dc, 0x0000d101, NE, B(0x100839e2); /* 0x100839e0 + 0x002 */);
T(0x100839de, 0x0000705c, AL, STRB(r4, r3, 0x001); /* [0x00000001] */);
T(0x100839e0, 0x0000e005, AL, B(0x100839ec); /* 0x100839e3 + 0x00a*/);

T(0x100839e2, 0x00004d60, AL, LDR(r5, PC, 0x0180); /* [0x10083b64]:0x000032f6 */);
T(0x100839e4, 0x000042a8, AL, CMP(r0, r5));
T(0x100839e6, 0x0000d101, NE, B(0x100839ec); /* 0x100839ea + 0x002 */);
T(0x100839e8, 0x00007059, AL, STRB(r1, r3, 0x001); /* [0x00000001] */);
T(0x100839ea, 0x0000e000, AL, B(0x100839ec); /* 0x100839ed + 0x000*/);

T(0x100839ec, 0x0000705c, AL, STRB(r4, r3, 0x001); /* [0x00000001] */);
T(0x100839ee, 0x00007818, AL, LDRB(r0, r3); /* [0x00000000] */);
T(0x100839f0, 0x0000495d, AL, LDR(r1, PC, 0x0174); /* [0x10083b68]:0xfffecc40 */);
T(0x100839f2, 0x00002801, AL, CMPS(r0, 0x01));
T(0x100839f4, 0x0000d104, NE, B(0x10083a00); /* 0x100839f8 + 0x008 */);
T(0x100839f6, 0x0000485d, AL, LDR(r0, PC, 0x0174); /* [0x10083b6c]:0x000072a1 */);
T(0x100839f8, 0x00006150, AL, STR(r0, r2, 0x014); /* [0x00000014] */);
T(0x100839fa, 0x00002013, AL, MOVS(r0, 0x13));
T(0x100839fc, 0x00006148, AL, STR(r0, r1, 0x014); /* [0xfffecc54] */);
T(0x100839fe, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10083a00, 0x0000485b, AL, LDR(r0, PC, 0x016c); /* [0x10083b70]:0x03031011 */);
T(0x10083a02, 0x00006150, AL, STR(r0, r2, 0x014); /* [0x00000014] */);
T(0x10083a04, 0x0000614c, AL, STR(r4, r1, 0x014); /* [0x00000014] */);
T(0x10083a06, 0x0000e7fa, AL, B(0x100839fc); /* 0x10083a09 + 0xfffffff4*/);

T(0x100839fc, 0x00006148, AL, STR(r0, r1, 0x014); /* [0x00000014] */);
T(0x100839fe, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10083a5c, 0xf7f9fdb0, AL, BL(0x1007d5c0); /* 0x10083a61 + 0x00000b60, LR = 0x10083a60 */);
T(0x10083a60, 0xf7fefdbb, AL, BL(0x100825da); /* 0x10083a65 + 0x00000b76, LR = 0x10083a64 */);
T(0x10083a64, 0xf7feff7f, AL, BL(0x10082966); /* 0x10083a69 + 0x00000efe, LR = 0x10083a68 */);
T(0x10083a68, 0xf7feffb8, AL, BL(0x100829dc); /* 0x10083a6d + 0x00000f70, LR = 0x10083a6c */);
T(0x10083a6c, 0xf7fcfc79, AL, BL(0x10080362); /* 0x10083a71 + 0x000008f2, LR = 0x10083a70 */);
T(0x10083a70, 0xf7fff9c7, AL, BL(0x10082e02); /* 0x10083a75 + 0x0000038e, LR = 0x10083a74 */);
T(0x10083a74, 0xf7fcf86f, AL, BL(0x1007fb56); /* 0x10083a79 + 0x000000de, LR = 0x10083a78 */);
T(0x10083a78, 0xf001fd9d, AL, BL(0x100855b6); /* 0x10083a7d + 0x00000b3a, LR = 0x10083a7c */);
T(0x10083a7c, 0xf7fafd04, AL, BL(0x1007e488); /* 0x10083a81 + 0x00000a08, LR = 0x10083a80 */);
T(0x10083a80, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x1007d5c0, 0x00004907, AL, LDR(r1, PC, 0x001c); /* [0x1007d5e0]:0x10653f14 */);
T(0x1007d5c2, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x1007d5c4, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007d5c6, 0x00007008, AL, STRB(r0, r1); /* [0x10653f14] */);
T(0x1007d5c8, 0x0000214b, AL, MOVS(r1, 0x4b));
T(0x1007d5ca, 0x000002c9, AL, LSL(r1, r1, 0x0b));
T(0x1007d5cc, 0x00004805, AL, LDR(r0, PC, 0x0014); /* [0x1007d5e4]:0x10ce95b0 */);
T(0x1007d5ce, 0xf0ddef48, AL, BLX(0x1015b460); /* 0x1007d5d3 + 0x00000e90, LR = 0x1007d5d2 */);
T(0x1007d5d2, 0xf000eb04, AL, BLX(0x1007dbdc); /* 0x1007d5d7 + 0x00000608, LR = 0x1007d5d6 */);
T(0x1007d5d6, 0xf000ea18, AL, BLX(0x1007da08); /* 0x1007d5db + 0x00000430, LR = 0x1007d5da */);
T(0x1007d5da, 0xf000eafe, AL, BLX(0x1007dbd8); /* 0x1007d5df + 0x000005fc, LR = 0x1007d5de */);
T(0x1007d5de, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

A(0x1007dbd8, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1007dbdc, 0xe59f0210, AL, LDR(r0, PC, +0x0210); /* [0x1007ddf4]:0x10653f24 */);
A(0x1007dbe0, 0xe3a01064, AL, MOV(r1, 100));
A(0x1007dbe4, 0xe1c010b2, AL, STRH(r1, r0, +0x0002); /* [0x10653f26] */);
A(0x1007dbe8, 0xe3a03001, AL, MOV(r3, 1));
A(0x1007dbec, 0xe59f2234, AL, LDR(r2, PC, +0x0234); /* [0x1007de28]:0x10653f1c */);
A(0x1007dbf0, 0xe1c030b4, AL, STRH(r3, r0, +0x0004); /* [0x10653f28] */);
A(0x1007dbf4, 0xe3a01000, AL, MOV(r1, 0));
A(0x1007dbf8, 0xe5821000, AL, STR(r1, r2, +0x0000); /* [0x10653f1c] */);
A(0x1007dbfc, 0xe5c03000, AL, STRB(r3, r0, +0x0000); /* [0x10653f24] */);
A(0x1007dc00, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

T(0x1007e488, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x1007e48a, 0xf0e4ed36, AL, BLX(0x10162ef8); /* 0x1007e48f + 0x00000a6c, LR = 0x1007e48e */);
T(0x1007e48e, 0x00004c61, AL, LDR(r4, PC, 0x0184); /* [0x1007e614]:0xfffe0300 */);
T(0x1007e490, 0x00006861, AL, LDR(r1, r4, 0x004); /* [0xfffe0304] */);
T(0x1007e492, 0x00002280, AL, MOVS(r2, 0x80));
T(0x1007e494, 0x00004311, AL, ORR(r1, r2));
T(0x1007e496, 0x00006061, AL, STR(r1, r4, 0x004); /* [0xfffe0304] */);
T(0x1007e498, 0xf0e4ed36, AL, BLX(0x10162f08); /* 0x1007e49d + 0x00000a6c, LR = 0x1007e49c */);
T(0x1007e49c, 0xf0e4ed2c, AL, BLX(0x10162ef8); /* 0x1007e4a1 + 0x00000a58, LR = 0x1007e4a0 */);
T(0x1007e4a0, 0x00006861, AL, LDR(r1, r4, 0x004); /* [0xfffe0304] */);
T(0x1007e4a2, 0x000022ff, AL, MOVS(r2, 0xff));
T(0x1007e4a4, 0x00003201, AL, ADDS(r2, 0x01));
T(0x1007e4a6, 0x00004311, AL, ORR(r1, r2));
T(0x1007e4a8, 0x00006061, AL, STR(r1, r4, 0x004); /* [0xfffe0304] */);
T(0x1007e4aa, 0xf0e4ed2e, AL, BLX(0x10162f08); /* 0x1007e4af + 0x00000a5c, LR = 0x1007e4ae */);
T(0x1007e4ae, 0x0000485a, AL, LDR(r0, PC, 0x0168); /* [0x1007e618]:0x00000404 */);
T(0x1007e4b0, 0x0000495a, AL, LDR(r1, PC, 0x0168); /* [0x1007e61c]:0xfffe6820 */);
T(0x1007e4b2, 0x00008008, AL, STRH(r0, r1); /* [0xfffe6820] */);
T(0x1007e4b4, 0x000020cb, AL, MOVS(r0, 0xcb));
T(0x1007e4b6, 0x0000495a, AL, LDR(r1, PC, 0x0168); /* [0x1007e620]:0xfffe6800 */);
T(0x1007e4b8, 0x00000100, AL, LSL(r0, r0, 0x04));
T(0x1007e4ba, 0x00008088, AL, STRH(r0, r1, 0x004); /* [0xfffe6804] */);
T(0x1007e4bc, 0x00004a59, AL, LDR(r2, PC, 0x0164); /* [0x1007e624]:0xfffe6840 */);
T(0x1007e4be, 0x00002005, AL, MOVS(r0, 0x05));
T(0x1007e4c0, 0x00008090, AL, STRH(r0, r2, 0x004); /* [0xfffe6844] */);
T(0x1007e4c2, 0x00002002, AL, MOVS(r0, 0x02));
T(0x1007e4c4, 0x000063a0, AL, STR(r0, r4, 0x038); /* [0xfffe0338] */);
T(0x1007e4c6, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007e4c8, 0x000063e0, AL, STR(r0, r4, 0x03c); /* [0xfffe033c] */);
T(0x1007e4ca, 0x00004a57, AL, LDR(r2, PC, 0x015c); /* [0x1007e628]:0xfffe0340 */);
T(0x1007e4cc, 0x00006010, AL, STR(r0, r2); /* [0xfffe0340] */);
T(0x1007e4ce, 0x00004857, AL, LDR(r0, PC, 0x015c); /* [0x1007e62c]:0xfffec700 */);
T(0x1007e4d0, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0xfffec708] */);
T(0x1007e4d2, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0xfffec708] */);
T(0x1007e4d4, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e4d6, 0x00002b03, AL, CMPS(r3, 0x03));
T(0x1007e4d8, 0x0000d203, CS, B(0x1007e4e2); /* 0x1007e4dc + 0x006 */);
T(0x1007e4da, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0xfffec708] */);
T(0x1007e4dc, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e4de, 0x00002b03, AL, CMPS(r3, 0x03));
T(0x1007e4e0, 0x0000d3fb, CC, B(0x1007e4da); /* 0x1007e4e4 + 0xfffffff6 */);

T(0x1007e4e2, 0x00004e4e, AL, LDR(r6, PC, 0x0138); /* [0x1007e61c]:0xfffe6820 */);
T(0x1007e4e4, 0x00008b32, AL, LDRH(r2, r6, 0x018); /* [0xfffe6838] */);
T(0x1007e4e6, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007e4e8, 0x0000d50f, PL, B(0x1007e50a); /* 0x1007e4ec + 0x01e */);
T(0x1007e4ea, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1007e4ec, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x1007e4ee, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e4f0, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e4f2, 0x00002b06, AL, CMPS(r3, 0x06));
T(0x1007e4f4, 0x0000d203, CS, B(0x1007e4fe); /* 0x1007e4f8 + 0x006 */);
T(0x1007e4f6, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e4f8, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e4fa, 0x00002b06, AL, CMPS(r3, 0x06));
T(0x1007e4fc, 0x0000d3fb, CC, B(0x1007e4f6); /* 0x1007e500 + 0xfffffff6 */);

T(0x1007e4fe, 0x00008b32, AL, LDRH(r2, r6, 0x018); /* [0x00000018] */);
T(0x1007e500, 0x00003401, AL, ADDS(r4, 0x01));
T(0x1007e502, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007e504, 0x0000d501, PL, B(0x1007e50a); /* 0x1007e508 + 0x002 */);
T(0x1007e506, 0x00002c0a, AL, CMPS(r4, 0x0a));
T(0x1007e508, 0x0000dbf0, LT, B(0x1007e4ec); /* 0x1007e50c + 0xffffffe0 */);

T(0x1007e4ec, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x1007e4ee, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e4f0, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e4f2, 0x00002b06, AL, CMPS(r3, 0x06));
T(0x1007e4f4, 0x0000d203, CS, B(0x1007e4fe); /* 0x1007e4f8 + 0x006 */);
T(0x1007e4f6, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e4f8, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e4fa, 0x00002b06, AL, CMPS(r3, 0x06));
T(0x1007e4fc, 0x0000d3fb, CC, B(0x1007e4f6); /* 0x1007e500 + 0xfffffff6 */);
T(0x1007e4fe, 0x00008b32, AL, LDRH(r2, r6, 0x018); /* [0x00000018] */);
T(0x1007e500, 0x00003401, AL, ADDS(r4, 0x01));
T(0x1007e502, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007e504, 0x0000d501, PL, B(0x1007e50a); /* 0x1007e508 + 0x002 */);
T(0x1007e506, 0x00002c0a, AL, CMPS(r4, 0x0a));
T(0x1007e508, 0x0000dbf0, LT, B(0x1007e4ec); /* 0x1007e50c + 0xffffffe0 */);

T(0x1007e50a, 0x00008b32, AL, LDRH(r2, r6, 0x018); /* [0x00000018] */);
T(0x1007e50c, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007e50e, 0x0000d5fc, PL, B(0x1007e50a); /* 0x1007e512 + 0xfffffff8 */);
T(0x1007e510, 0x00004a47, AL, LDR(r2, PC, 0x011c); /* [0x1007e630]:0xfffffeff */);
T(0x1007e512, 0x00004b40, AL, LDR(r3, PC, 0x0100); /* [0x1007e614]:0xfffe0300 */);
T(0x1007e514, 0x0000601a, AL, STR(r2, r3); /* [0xfffe0300] */);
T(0x1007e516, 0x00004b47, AL, LDR(r3, PC, 0x011c); /* [0x1007e634]:0xfffe0000 */);
T(0x1007e518, 0x00002201, AL, MOVS(r2, 0x01));
T(0x1007e51a, 0x0000619a, AL, STR(r2, r3, 0x018); /* [0xfffe0018] */);
T(0x1007e51c, 0x00004d46, AL, LDR(r5, PC, 0x0118); /* [0x1007e638]:0xfffecb00 */);
T(0x1007e51e, 0x000061aa, AL, STR(r2, r5, 0x018); /* [0xfffecb18] */);
T(0x1007e520, 0x00004a46, AL, LDR(r2, PC, 0x0118); /* [0x1007e63c]:0x102c7644 */);
T(0x1007e522, 0x00008812, AL, LDRH(r2, r2));
T(0x1007e524, 0x0000800a, AL, STRH(r2, r1); /* [0x00000000] */);
T(0x1007e526, 0x00004a46, AL, LDR(r2, PC, 0x0118); /* [0x1007e640]:0x00000c63 */);
T(0x1007e528, 0x0000808a, AL, STRH(r2, r1, 0x004); /* [0x00000004] */);
T(0x1007e52a, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x1007e52c, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e52e, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e530, 0x00002b03, AL, CMPS(r3, 0x03));
T(0x1007e532, 0x0000d203, CS, B(0x1007e53c); /* 0x1007e536 + 0x006 */);
T(0x1007e534, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e536, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e538, 0x00002b03, AL, CMPS(r3, 0x03));
T(0x1007e53a, 0x0000d3fb, CC, B(0x1007e534); /* 0x1007e53e + 0xfffffff6 */);

T(0x1007e53c, 0x00008b32, AL, LDRH(r2, r6, 0x018); /* [0x00000018] */);
T(0x1007e53e, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007e540, 0x0000d50f, PL, B(0x1007e562); /* 0x1007e544 + 0x01e */);
T(0x1007e542, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1007e544, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x1007e546, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e548, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e54a, 0x00002b06, AL, CMPS(r3, 0x06));
T(0x1007e54c, 0x0000d203, CS, B(0x1007e556); /* 0x1007e550 + 0x006 */);
T(0x1007e54e, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e550, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e552, 0x00002b06, AL, CMPS(r3, 0x06));
T(0x1007e554, 0x0000d3fb, CC, B(0x1007e54e); /* 0x1007e558 + 0xfffffff6 */);

T(0x1007e556, 0x00008b32, AL, LDRH(r2, r6, 0x018); /* [0x00000018] */);
T(0x1007e558, 0x00003401, AL, ADDS(r4, 0x01));
T(0x1007e55a, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007e55c, 0x0000d501, PL, B(0x1007e562); /* 0x1007e560 + 0x002 */);
T(0x1007e55e, 0x00002c0a, AL, CMPS(r4, 0x0a));
T(0x1007e560, 0x0000dbf0, LT, B(0x1007e544); /* 0x1007e564 + 0xffffffe0 */);

T(0x1007e544, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x1007e546, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e548, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e54a, 0x00002b06, AL, CMPS(r3, 0x06));
T(0x1007e54c, 0x0000d203, CS, B(0x1007e556); /* 0x1007e550 + 0x006 */);
T(0x1007e54e, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e550, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e552, 0x00002b06, AL, CMPS(r3, 0x06));
T(0x1007e554, 0x0000d3fb, CC, B(0x1007e54e); /* 0x1007e558 + 0xfffffff6 */);
T(0x1007e556, 0x00008b32, AL, LDRH(r2, r6, 0x018); /* [0x00000018] */);
T(0x1007e558, 0x00003401, AL, ADDS(r4, 0x01));
T(0x1007e55a, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007e55c, 0x0000d501, PL, B(0x1007e562); /* 0x1007e560 + 0x002 */);
T(0x1007e55e, 0x00002c0a, AL, CMPS(r4, 0x0a));
T(0x1007e560, 0x0000dbf0, LT, B(0x1007e544); /* 0x1007e564 + 0xffffffe0 */);

T(0x1007e562, 0x00001c34, AL, SUBS(r4, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007e564, 0x00008b22, AL, LDRH(r2, r4, 0x018));
T(0x1007e566, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x1007e568, 0x0000d5fc, PL, B(0x1007e564); /* 0x1007e56c + 0xfffffff8 */);
T(0x1007e56a, 0x00004a31, AL, LDR(r2, PC, 0x00c4); /* [0x1007e630]:0xfffffeff */);
T(0x1007e56c, 0x00004b29, AL, LDR(r3, PC, 0x00a4); /* [0x1007e614]:0xfffe0300 */);
T(0x1007e56e, 0x0000601a, AL, STR(r2, r3); /* [0xfffe0300] */);
T(0x1007e570, 0x00004f30, AL, LDR(r7, PC, 0x00c0); /* [0x1007e634]:0xfffe0000 */);
T(0x1007e572, 0x00002601, AL, MOVS(r6, 0x01));
T(0x1007e574, 0x000061be, AL, STR(r6, r7, 0x018); /* [0xfffe0018] */);
T(0x1007e576, 0x000061ae, AL, STR(r6, r5, 0x018); /* [0x00000018] */);
T(0x1007e578, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x1007e57a, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e57c, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e57e, 0x00002b09, AL, CMPS(r3, 0x09));
T(0x1007e580, 0x0000d203, CS, B(0x1007e58a); /* 0x1007e584 + 0x006 */);
T(0x1007e582, 0x00006883, AL, LDR(r3, r0, 0x008); /* [0x00000008] */);
T(0x1007e584, 0x00001ad3, AL, ADDS(r3, r2, r3);
T(0x1007e586, 0x00002b09, AL, CMPS(r3, 0x09));
T(0x1007e588, 0x0000d3fb, CC, B(0x1007e582); /* 0x1007e58c + 0xfffffff6 */);

T(0x1007e58a, 0x00008b22, AL, LDRH(r2, r4, 0x018); /* [0x00000018] */);
T(0x1007e58c, 0x0000880a, AL, LDRH(r2, r1); /* [0x00000000] */);
T(0x1007e58e, 0x0000888a, AL, LDRH(r2, r1, 0x004); /* [0x00000004] */);
T(0x1007e590, 0x0000890a, AL, LDRH(r2, r1, 0x008); /* [0x00000008] */);
T(0x1007e592, 0x0000898a, AL, LDRH(r2, r1, 0x00c); /* [0x0000000c] */);
T(0x1007e594, 0x00008a0a, AL, LDRH(r2, r1, 0x010); /* [0x00000010] */);
T(0x1007e596, 0x00008a8a, AL, LDRH(r2, r1, 0x014); /* [0x00000014] */);
T(0x1007e598, 0x00008b0a, AL, LDRH(r2, r1, 0x018); /* [0x00000018] */);
T(0x1007e59a, 0x00008b8a, AL, LDRH(r2, r1, 0x01c); /* [0x0000001c] */);
T(0x1007e59c, 0x00008822, AL, LDRH(r2, r4); /* [0x00000000] */);
T(0x1007e59e, 0x000088a2, AL, LDRH(r2, r4, 0x004); /* [0x00000004] */);
T(0x1007e5a0, 0x00008922, AL, LDRH(r2, r4, 0x008); /* [0x00000008] */);
T(0x1007e5a2, 0x000089a2, AL, LDRH(r2, r4, 0x00c); /* [0x0000000c] */);
T(0x1007e5a4, 0x00002267, AL, MOVS(r2, 0x67));
T(0x1007e5a6, 0x00000152, AL, LSL(r2, r2, 0x05));
T(0x1007e5a8, 0x0000808a, AL, STRH(r2, r1, 0x004); /* [0x00000004] */);
T(0x1007e5aa, 0x00006881, AL, LDR(r1, r0, 0x008); /* [0x00000008] */);
T(0x1007e5ac, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x1007e5ae, 0x00001a8a, AL, ADDS(r2, r1, r2);
T(0x1007e5b0, 0x00002a03, AL, CMPS(r2, 0x03));
T(0x1007e5b2, 0x0000d203, CS, B(0x1007e5bc); /* 0x1007e5b6 + 0x006 */);
T(0x1007e5b4, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x1007e5b6, 0x00001a8a, AL, ADDS(r2, r1, r2);
T(0x1007e5b8, 0x00002a03, AL, CMPS(r2, 0x03));
T(0x1007e5ba, 0x0000d3fb, CC, B(0x1007e5b4); /* 0x1007e5be + 0xfffffff6 */);

T(0x1007e5bc, 0x00008b21, AL, LDRH(r1, r4, 0x018); /* [0x00000018] */);
T(0x1007e5be, 0x00000409, AL, LSL(r1, r1, 0x10));
T(0x1007e5c0, 0x0000d510, PL, B(0x1007e5e4); /* 0x1007e5c4 + 0x020 */);
T(0x1007e5c2, 0x00002200, AL, MOVS(r2, 0x00));
T(0x1007e5c4, 0x00001c03, AL, SUBS(r3, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007e5c6, 0x00006898, AL, LDR(r0, r3, 0x008));
T(0x1007e5c8, 0x00006899, AL, LDR(r1, r3, 0x008));
T(0x1007e5ca, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007e5cc, 0x00002906, AL, CMPS(r1, 0x06));
T(0x1007e5ce, 0x0000d203, CS, B(0x1007e5d8); /* 0x1007e5d2 + 0x006 */);
T(0x1007e5d0, 0x00006899, AL, LDR(r1, r3, 0x008));
T(0x1007e5d2, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007e5d4, 0x00002906, AL, CMPS(r1, 0x06));
T(0x1007e5d6, 0x0000d3fb, CC, B(0x1007e5d0); /* 0x1007e5da + 0xfffffff6 */);

T(0x1007e5d8, 0x00008b20, AL, LDRH(r0, r4, 0x018); /* [0x00000018] */);
T(0x1007e5da, 0x00003201, AL, ADDS(r2, 0x01));
T(0x1007e5dc, 0x00000400, AL, LSL(r0, r0, 0x10));
T(0x1007e5de, 0x0000d501, PL, B(0x1007e5e4); /* 0x1007e5e2 + 0x002 */);
T(0x1007e5e0, 0x00002a0a, AL, CMPS(r2, 0x0a));
T(0x1007e5e2, 0x0000dbf0, LT, B(0x1007e5c6); /* 0x1007e5e6 + 0xffffffe0 */);

T(0x1007e5c6, 0x00006898, AL, LDR(r0, r3, 0x008); /* [0x00000008] */);
T(0x1007e5c8, 0x00006899, AL, LDR(r1, r3, 0x008); /* [0x00000008] */);
T(0x1007e5ca, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007e5cc, 0x00002906, AL, CMPS(r1, 0x06));
T(0x1007e5ce, 0x0000d203, CS, B(0x1007e5d8); /* 0x1007e5d2 + 0x006 */);
T(0x1007e5d0, 0x00006899, AL, LDR(r1, r3, 0x008); /* [0x00000008] */);
T(0x1007e5d2, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007e5d4, 0x00002906, AL, CMPS(r1, 0x06));
T(0x1007e5d6, 0x0000d3fb, CC, B(0x1007e5d0); /* 0x1007e5da + 0xfffffff6 */);
T(0x1007e5d8, 0x00008b20, AL, LDRH(r0, r4, 0x018); /* [0x00000018] */);
T(0x1007e5da, 0x00003201, AL, ADDS(r2, 0x01));
T(0x1007e5dc, 0x00000400, AL, LSL(r0, r0, 0x10));
T(0x1007e5de, 0x0000d501, PL, B(0x1007e5e4); /* 0x1007e5e2 + 0x002 */);
T(0x1007e5e0, 0x00002a0a, AL, CMPS(r2, 0x0a));
T(0x1007e5e2, 0x0000dbf0, LT, B(0x1007e5c6); /* 0x1007e5e6 + 0xffffffe0 */);

T(0x1007e5e4, 0x00008b20, AL, LDRH(r0, r4, 0x018); /* [0x00000018] */);
T(0x1007e5e6, 0x00000400, AL, LSL(r0, r0, 0x10));
T(0x1007e5e8, 0x0000d5fc, PL, B(0x1007e5e4); /* 0x1007e5ec + 0xfffffff8 */);
T(0x1007e5ea, 0x00004811, AL, LDR(r0, PC, 0x0044); /* [0x1007e630]:0xfffffeff */);
T(0x1007e5ec, 0x00004909, AL, LDR(r1, PC, 0x0024); /* [0x1007e614]:0xfffe0300 */);
T(0x1007e5ee, 0x00006008, AL, STR(r0, r1); /* [0xfffe0300] */);
T(0x1007e5f0, 0x000061be, AL, STR(r6, r7, 0x018); /* [0x00000018] */);
T(0x1007e5f2, 0x000061ae, AL, STR(r6, r5, 0x018); /* [0x00000018] */);
T(0x1007e5f4, 0x00008a20, AL, LDRH(r0, r4, 0x010); /* [0x00000010] */);
T(0x1007e5f6, 0x000030ff, AL, ADDS(r0, 0xff));
T(0x1007e5f8, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1007e5fa, 0x00000a40, AL, LSR(r0, r0, 0x09));
T(0x1007e5fc, 0xf0e9fcb2, AL, BL(0x10167f64); /* 0x1007e601 + 0x00000964, LR = 0x1007e600 */);
T(0x1007e600, 0x00008b20, AL, LDRH(r0, r4, 0x018); /* [0x00000018] */);
T(0x1007e602, 0x00000500, AL, LSL(r0, r0, 0x14));
T(0x1007e604, 0x0000d101, NE, B(0x1007e60a); /* 0x1007e608 + 0x002 */);
T(0x1007e606, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1007e608, 0x0000e000, AL, B(0x1007e60a); /* 0x1007e60b + 0x000*/);

T(0x1007e60a, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007e60c, 0x0000490d, AL, LDR(r1, PC, 0x0034); /* [0x1007e644]:0x106542e4 */);
T(0x1007e60e, 0x00007008, AL, STRB(r0, r1); /* [0x106542e4] */);
T(0x1007e610, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x1007fb56, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x1007fb58, 0x0000489c, AL, LDR(r0, PC, 0x0270); /* [0x1007fdcc]:0x10859444 */);
T(0x1007fb5a, 0x0000300c, AL, ADDS(r0, 0x0c));
T(0x1007fb5c, 0xf0e7fe7a, AL, BL(0x10167854); /* 0x1007fb61 + 0x00000cf4, LR = 0x1007fb60 */);
T(0x1007fb60, 0x0000499a, AL, LDR(r1, PC, 0x0268); /* [0x1007fdcc]:0x10859444 */);
T(0x1007fb62, 0x0000a09b, AL, ADD(r0, PC, 0x26c); /* 0x1007fdd2 */));
T(0x1007fb64, 0x0000310c, AL, ADDS(r1, 0x0c));
T(0x1007fb66, 0x00006108, AL, STR(r0, r1, 0x010));
T(0x1007fb68, 0x0000489e, AL, LDR(r0, PC, 0x0278); /* [0x1007fde4]:0xfffb3820 */);
T(0x1007fb6a, 0x00002102, AL, MOVS(r1, 0x02));
T(0x1007fb6c, 0x00008001, AL, STRH(r1, r0); /* [0xfffb3820] */);
T(0x1007fb6e, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1007fb70, 0x00008204, AL, STRH(r4, r0, 0x010); /* [0xfffb3830] */);
T(0x1007fb72, 0x0000210b, AL, MOVS(r1, 0x0b));
T(0x1007fb74, 0x00008281, AL, STRH(r1, r0, 0x014); /* [0xfffb3834] */);
T(0x1007fb76, 0x00008301, AL, STRH(r1, r0, 0x018); /* [0xfffb3838] */);
T(0x1007fb78, 0x00008104, AL, STRH(r4, r0, 0x008); /* [0xfffb3828] */);
T(0x1007fb7a, 0x00002101, AL, MOVS(r1, 0x01));
T(0x1007fb7c, 0x000003c9, AL, LSL(r1, r1, 0x0f));
T(0x1007fb7e, 0x00008081, AL, STRH(r1, r0, 0x004); /* [0xfffb3824] */);
T(0x1007fb80, 0x00002168, AL, MOVS(r1, 0x68));
T(0x1007fb82, 0x00008181, AL, STRH(r1, r0, 0x00c); /* [0xfffb382c] */);
T(0x1007fb84, 0x00004d98, AL, LDR(r5, PC, 0x0260); /* [0x1007fde8]:0xfffb3800 */);
T(0x1007fb86, 0x000080ac, AL, STRH(r4, r5, 0x004); /* [0xfffb3804] */);
T(0x1007fb88, 0x000082ac, AL, STRH(r4, r5, 0x014); /* [0xfffb3814] */);
T(0x1007fb8a, 0x00008a28, AL, LDRH(r0, r5, 0x010); /* [0xfffb3810] */);
T(0x1007fb8c, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x1007fb8e, 0x0000d412, MI, B(0x1007fbb6); /* 0x1007fb92 + 0x024 */);
T(0x1007fb90, 0x00002200, AL, MOVS(r2, 0x00));
T(0x1007fb92, 0x00004b96, AL, LDR(r3, PC, 0x0258); /* [0x1007fdec]:0xfffec700 */);
T(0x1007fb94, 0x0000267d, AL, MOVS(r6, 0x7d));
T(0x1007fb96, 0x000000f6, AL, LSL(r6, r6, 0x03));
T(0x1007fb98, 0x00006898, AL, LDR(r0, r3, 0x008); /* [0xfffec708] */);
T(0x1007fb9a, 0x00006899, AL, LDR(r1, r3, 0x008); /* [0xfffec708] */);
T(0x1007fb9c, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007fb9e, 0x00002906, AL, CMPS(r1, 0x06));
T(0x1007fba0, 0x0000d203, CS, B(0x1007fbaa); /* 0x1007fba4 + 0x006 */);
T(0x1007fba2, 0x00006899, AL, LDR(r1, r3, 0x008); /* [0xfffec708] */);
T(0x1007fba4, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007fba6, 0x00002906, AL, CMPS(r1, 0x06));
T(0x1007fba8, 0x0000d3fb, CC, B(0x1007fba2); /* 0x1007fbac + 0xfffffff6 */);

T(0x1007fbaa, 0x00008a28, AL, LDRH(r0, r5, 0x010); /* [0x00000010] */);
T(0x1007fbac, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x1007fbae, 0x0000d402, MI, B(0x1007fbb6); /* 0x1007fbb2 + 0x004 */);
T(0x1007fbb0, 0x00003201, AL, ADDS(r2, 0x01));
T(0x1007fbb2, 0x000042b2, AL, CMP(r2, r6));
T(0x1007fbb4, 0x0000d3f0, CC, B(0x1007fb98); /* 0x1007fbb8 + 0xffffffe0 */);

T(0x1007fb98, 0x00006898, AL, LDR(r0, r3, 0x008); /* [0x00000008] */);
T(0x1007fb9a, 0x00006899, AL, LDR(r1, r3, 0x008); /* [0x00000008] */);
T(0x1007fb9c, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007fb9e, 0x00002906, AL, CMPS(r1, 0x06));
T(0x1007fba0, 0x0000d203, CS, B(0x1007fbaa); /* 0x1007fba4 + 0x006 */);
T(0x1007fba2, 0x00006899, AL, LDR(r1, r3, 0x008); /* [0x00000008] */);
T(0x1007fba4, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x1007fba6, 0x00002906, AL, CMPS(r1, 0x06));
T(0x1007fba8, 0x0000d3fb, CC, B(0x1007fba2); /* 0x1007fbac + 0xfffffff6 */);
T(0x1007fbaa, 0x00008a28, AL, LDRH(r0, r5, 0x010); /* [0x00000010] */);
T(0x1007fbac, 0x000007c0, AL, LSL(r0, r0, 0x1f));
T(0x1007fbae, 0x0000d402, MI, B(0x1007fbb6); /* 0x1007fbb2 + 0x004 */);
T(0x1007fbb0, 0x00003201, AL, ADDS(r2, 0x01));
T(0x1007fbb2, 0x000042b2, AL, CMP(r2, r6));
T(0x1007fbb4, 0x0000d3f0, CC, B(0x1007fb98); /* 0x1007fbb8 + 0xffffffe0 */);

T(0x1007fbb6, 0x00004985, AL, LDR(r1, PC, 0x0214); /* [0x1007fdcc]:0x10859444 */);
T(0x1007fbb8, 0x00002003, AL, MOVS(r0, 0x03));
T(0x1007fbba, 0x00008048, AL, STRH(r0, r1, 0x002); /* [0x10859446] */);
T(0x1007fbbc, 0x0000700c, AL, STRB(r4, r1); /* [0x10859444] */);
T(0x1007fbbe, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x10080362, 0x0000b538, AL, PUSH(rSP, r{...345.., LR}););
T(0x10080364, 0x00004c09, AL, LDR(r4, PC, 0x0024); /* [0x1008038c]:0x102c77fc */);
T(0x10080366, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x102c77fc - 0x00000000 = 0x102c77fc */ XXX);
T(0x10080368, 0xf0e6fda2, AL, BL(0x10166eb0); /* 0x1008036d + 0x00000b44, LR = 0x1008036c */);
T(0x1008036c, 0x00004d04, AL, LDR(r5, PC, 0x0010); /* [0x10080380]:0x10859474 */);
T(0x1008036e, 0x00003d08, AL, SUBS(r5, 0x08));
T(0x10080370, 0x00006068, AL, STR(r0, r5, 0x004));
T(0x10080372, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x102c77fc - 0x00000000 = 0x102c77fc */ XXX);
T(0x10080374, 0xf037fd4c, AL, BL(0x100b7e10); /* 0x10080379 + 0x00000a98, LR = 0x10080378 */);
T(0x10080378, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1008037a, 0x00008028, AL, STRH(r0, r5));
T(0x1008037c, 0x0000bd38, AL, POP(rSP, r{...345.., PC}););

T(0x100825da, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x100825dc, 0x00004829, AL, LDR(r0, PC, 0x00a4); /* [0x10082684]:0x1085cff0 */);
T(0x100825de, 0xf0e5f939, AL, BL(0x10167854); /* 0x100825e3 + 0x00000272, LR = 0x100825e2 */);
T(0x100825e2, 0x00004928, AL, LDR(r1, PC, 0x00a0); /* [0x10082684]:0x1085cff0 */);
T(0x100825e4, 0x0000a047, AL, ADD(r0, PC, 0x11c); /* 0x10082704 */));
T(0x100825e6, 0x00006108, AL, STR(r0, r1, 0x010); /* [0x1085d000] */);
T(0x100825e8, 0x00004a25, AL, LDR(r2, PC, 0x0094); /* [0x10082680]:0x1085acc0 */);
T(0x100825ea, 0x00004925, AL, LDR(r1, PC, 0x0094); /* [0x10082680]:0x1085acc0 */);
T(0x100825ec, 0x00003220, AL, ADDS(r2, 0x20));
T(0x100825ee, 0x00003134, AL, ADDS(r1, 0x34));
T(0x100825f0, 0x00002029, AL, MOVS(r0, 0x29));
T(0x100825f2, 0xf002f91b, AL, BL(0x1008482c); /* 0x100825f7 + 0x00000236, LR = 0x100825f6 */);
T(0x100825f6, 0x00004d22, AL, LDR(r5, PC, 0x0088); /* [0x10082680]:0x1085acc0 */);
T(0x100825f8, 0x00004946, AL, LDR(r1, PC, 0x0118); /* [0x10082714]:0x1085d0ec */);
T(0x100825fa, 0x000061e8, AL, STR(r0, r5, 0x01c); /* [0x1085acdc] */);
T(0x100825fc, 0x00000140, AL, LSL(r0, r0, 0x05));
T(0x100825fe, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x10082600, 0x00006940, AL, LDR(r0, r0, 0x014));
T(0x10082602, 0x00002300, AL, MOVS(r3, 0x00));
T(0x10082604, 0x00006841, AL, LDR(r1, r0, 0x004));
T(0x10082606, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10082608, 0x00007028, AL, STRB(r0, r5); /* [0x1085acc0] */);
T(0x1008260a, 0x0000788a, AL, LDRB(r2, r1, 0x002));
T(0x1008260c, 0x00003508, AL, ADDS(r5, 0x08));
T(0x1008260e, 0x00004246, AL, RSB(r6, r0));
T(0x10082610, 0x0000c54c, AL, STMIA(r5.WB, {..23..6.}));
T(0x10082612, 0x00003d14, AL, SUBS(r5, 0x14));
T(0x10082614, 0x00004243, AL, RSB(r3, r0));
T(0x10082616, 0x0000616b, AL, STR(r3, r5, 0x014));
T(0x10082618, 0x00002303, AL, MOVS(r3, 0x03));
T(0x1008261a, 0x000005db, AL, LSL(r3, r3, 0x17));
T(0x1008261c, 0x0000626b, AL, STR(r3, r5, 0x024));
T(0x1008261e, 0x000008db, AL, LSR(r3, r3, 0x03));
T(0x10082620, 0x000062eb, AL, STR(r3, r5, 0x02c));
T(0x10082622, 0x000000db, AL, LSL(r3, r3, 0x03));
T(0x10082624, 0x000040d3, AL, LSR(r3, r2));
T(0x10082626, 0x000063ab, AL, STR(r3, r5, 0x038));
T(0x10082628, 0x000078cb, AL, LDRB(r3, r1, 0x003));
T(0x1008262a, 0x00002403, AL, MOVS(r4, 0x03));
T(0x1008262c, 0x000005e4, AL, LSL(r4, r4, 0x17));
T(0x1008262e, 0x000040dc, AL, LSR(r4, r3));
T(0x10082630, 0x000063ec, AL, STR(r4, r5, 0x03c));
T(0x10082632, 0x00004244, AL, RSB(r4, r0));
T(0x10082634, 0x0000642c, AL, STR(r4, r5, 0x040));
T(0x10082636, 0x00001c04, AL, SUBS(r4, r0, 0x0);
T(0x10082638, 0x0000409c, AL, LSL(r4, r3));
T(0x1008263a, 0x00001c03, AL, SUBS(r3, r0, 0x0);
T(0x1008263c, 0x00004093, AL, LSL(r3, r2));
T(0x1008263e, 0x000061ab, AL, STR(r3, r5, 0x018));
T(0x10082640, 0x000062ac, AL, STR(r4, r5, 0x028));
T(0x10082642, 0x00002304, AL, MOVS(r3, 0x04));
T(0x10082644, 0x000056c9, AL, STRBS(r1, r1, r3));
T(0x10082646, 0x00004088, AL, LSL(r0, r1));
T(0x10082648, 0x00006328, AL, STR(r0, r5, 0x030));
T(0x1008264a, 0xf7fefb1d, AL, BL(0x10080c88); /* 0x1008264f + 0x0000063a, LR = 0x1008264e */);
T(0x1008264e, 0x00002400, AL, MOVS(r4, 0x00));
T(0x10082650, 0x00002107, AL, MOVS(r1, 0x07));
T(0x10082652, 0x00000449, AL, LSL(r1, r1, 0x11));
T(0x10082654, 0x00006aa8, AL, LDR(r0, r5, 0x028));
T(0x10082656, 0xf0d9e8b4, AL, BLX(0x1015b7c0); /* 0x1008265b + 0x00000168, LR = 0x1008265a */);
T(0x1008265a, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1008265c, 0x0000d905, LS, B(0x1008266a); /* 0x10082660 + 0x00a */);
T(0x1008265e, 0x00004927, AL, LDR(r1, PC, 0x009c); /* [0x100826fc]:0x1085b010 */);
T(0x10082660, 0x000000a2, AL, LSL(r2, r4, 0x02));
T(0x10082662, 0x00003401, AL, ADDS(r4, 0x01));
T(0x10082664, 0x000042a0, AL, CMP(r0, r4));
T(0x10082666, 0x0000508e, AL, STR(r6, r1, r2));
T(0x10082668, 0x0000d8fa, HI, B(0x10082660); /* 0x1008266c + 0xfffffff4 */);

T(0x10080c88, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10080c8a, 0x00004881, AL, LDR(r0, PC, 0x0204); /* [0x10080e90]:0x1085acc0 */);
T(0x10080c8c, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10080c8e, 0x00006041, AL, STR(r1, r0, 0x004); /* [0x1085acc4] */);
T(0x10080c90, 0x00002103, AL, MOVS(r1, 0x03));
T(0x10080c92, 0x00002400, AL, MOVS(r4, 0x00));
T(0x10080c94, 0x00000509, AL, LSL(r1, r1, 0x14));
T(0x10080c96, 0x00006980, AL, LDR(r0, r0, 0x018));
T(0x10080c98, 0xf0daed92, AL, BLX(0x1015b7c0); /* 0x10080c9d + 0x00000b24, LR = 0x10080c9c */);
T(0x10080c9c, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10080c9e, 0x0000d907, LS, B(0x10080cb0); /* 0x10080ca2 + 0x00e */);
T(0x10080ca0, 0x0000497b, AL, LDR(r1, PC, 0x01ec); /* [0x10080e90]:0x1085acc0 */);
T(0x10080ca2, 0x00003150, AL, ADDS(r1, 0x50));
T(0x10080ca4, 0x000043e2, AL, MVN(r2, r4));
T(0x10080ca6, 0x000000a3, AL, LSL(r3, r4, 0x02));
T(0x10080ca8, 0x00003401, AL, ADDS(r4, 0x01));
T(0x10080caa, 0x000042a0, AL, CMP(r0, r4));
T(0x10080cac, 0x000050ca, AL, STR(r2, r1, r3));
T(0x10080cae, 0x0000d8fa, HI, B(0x10080ca6); /* 0x10080cb2 + 0xfffffff4 */);

T(0x10080cb0, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1008266a, 0x00002103, AL, MOVS(r1, 0x03));
T(0x1008266c, 0x00000209, AL, LSL(r1, r1, 0x08));
T(0x1008266e, 0x00004824, AL, LDR(r0, PC, 0x0090); /* [0x10082700]:0x1085cc10 */);
T(0x10082670, 0xf0d8ef1a, AL, BLX(0x1015b4a8); /* 0x10082675 + 0x00000e34, LR = 0x10082674 */);
T(0x10082674, 0x00004803, AL, LDR(r0, PC, 0x000c); /* [0x10082684]:0x1085cff0 */);
T(0x10082676, 0x000021e0, AL, MOVS(r1, 0xe0));
T(0x10082678, 0x000038e0, AL, SUBS(r0, 0xe0));
T(0x1008267a, 0xf0d8ef16, AL, BLX(0x1015b4a8); /* 0x1008267f + 0x00000e2c, LR = 0x1008267e */);
T(0x1008267e, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x10082966, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10082968, 0x00004c05, AL, LDR(r4, PC, 0x0014); /* [0x10082980]:0x1085d004 */);
T(0x1008296a, 0x00003404, AL, ADDS(r4, 0x04));
T(0x1008296c, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1008296e, 0xf0e4ff71, AL, BL(0x10167854); /* 0x10082973 + 0x00000ee2, LR = 0x10082972 */);
T(0x10082972, 0x0000a006, AL, ADD(r0, PC, 0x018); /* 0x1008298e */));
T(0x10082974, 0x00006120, AL, STR(r0, r4, 0x010));
T(0x10082976, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x100829dc, 0x00004905, AL, LDR(r1, PC, 0x0014); /* [0x100829f4]:0x1085d020 */);
T(0x100829de, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x100829e0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100829e2, 0x00007008, AL, STRB(r0, r1); /* [0x1085d020] */);
T(0x100829e4, 0x00008048, AL, STRH(r0, r1, 0x002); /* [0x1085d022] */);
T(0x100829e6, 0x00008088, AL, STRH(r0, r1, 0x004); /* [0x1085d024] */);
T(0x100829e8, 0xf000f84b, AL, BL(0x10082a82); /* 0x100829ed + 0x00000096, LR = 0x100829ec */);
T(0x100829ec, 0xf000f812, AL, BL(0x10082a14); /* 0x100829f1 + 0x00000024, LR = 0x100829f0 */);
T(0x100829f0, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x10082a14, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x10082a16, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10082a18, 0x0000491b, AL, LDR(r1, PC, 0x006c); /* [0x10082a88]:0xfffbe480 */);
T(0x10082a1a, 0x00000380, AL, LSL(r0, r0, 0x0e));
T(0x10082a1c, 0x00006308, AL, STR(r0, r1, 0x030); /* [0xfffbe4b0] */);
T(0x10082a1e, 0x00004d1b, AL, LDR(r5, PC, 0x006c); /* [0x10082a8c]:0xfffec700 */);
T(0x10082a20, 0x000068a8, AL, LDR(r0, r5, 0x008); /* [0xfffec708] */);
T(0x10082a22, 0x000068a9, AL, LDR(r1, r5, 0x008); /* [0xfffec708] */);
T(0x10082a24, 0x00004e1a, AL, LDR(r6, PC, 0x0068); /* [0x10082a90]:0x000002f1 */);
T(0x10082a26, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x10082a28, 0x000042b1, AL, CMP(r1, r6));
T(0x10082a2a, 0x0000d203, CS, B(0x10082a34); /* 0x10082a2e + 0x006 */);
T(0x10082a2c, 0x000068a9, AL, LDR(r1, r5, 0x008); /* [0xfffec708] */);
T(0x10082a2e, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x10082a30, 0x000042b1, AL, CMP(r1, r6));
T(0x10082a32, 0x0000d3fb, CC, B(0x10082a2c); /* 0x10082a36 + 0xfffffff6 */);

T(0x10082a34, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10082a36, 0xf7f9f9c4, AL, BL(0x1007bdc2); /* 0x10082a3b + 0x00000388, LR = 0x10082a3a */);
T(0x10082a3a, 0x00004c12, AL, LDR(r4, PC, 0x0048); /* [0x10082a84]:0x1085d030 */);
T(0x10082a3c, 0x00003c08, AL, SUBS(r4, 0x08));
T(0x10082a3e, 0x00002864, AL, CMPS(r0, 0x64));
T(0x10082a40, 0x0000d91c, LS, B(0x10082a7c); /* 0x10082a44 + 0x038 */);
T(0x10082a42, 0x00008020, AL, STRH(r0, r4));
T(0x10082a44, 0x00004813, AL, LDR(r0, PC, 0x004c); /* [0x10082a94]:0xfffbe4c0 */);
T(0x10082a46, 0x00002701, AL, MOVS(r7, 0x01));
T(0x10082a48, 0x000003bf, AL, LSL(r7, r7, 0x0e));
T(0x10082a4a, 0x00006307, AL, STR(r7, r0, 0x030); /* [0xfffbe4f0] */);
T(0x10082a4c, 0x000068a8, AL, LDR(r0, r5, 0x008); /* [0x00000008] */);
T(0x10082a4e, 0x0000490f, AL, LDR(r1, PC, 0x003c); /* [0x10082a8c]:0xfffec700 */);
T(0x10082a50, 0x00006889, AL, LDR(r1, r1, 0x008));
T(0x10082a52, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x10082a54, 0x000042b1, AL, CMP(r1, r6));
T(0x10082a56, 0x0000d203, CS, B(0x10082a60); /* 0x10082a5a + 0x006 */);
T(0x10082a58, 0x000068a9, AL, LDR(r1, r5, 0x008); /* [0x00000008] */);
T(0x10082a5a, 0x00001a41, AL, ADDS(r1, r0, r1);
T(0x10082a5c, 0x000042b1, AL, CMP(r1, r6));
T(0x10082a5e, 0x0000d3fb, CC, B(0x10082a58); /* 0x10082a62 + 0xfffffff6 */);

T(0x10082a60, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10082a62, 0xf7f9f9ae, AL, BL(0x1007bdc2); /* 0x10082a67 + 0x0000035c, LR = 0x10082a66 */);
T(0x10082a66, 0x00004908, AL, LDR(r1, PC, 0x0020); /* [0x10082a88]:0xfffbe480 */);
T(0x10082a68, 0x0000630f, AL, STR(r7, r1, 0x030); /* [0xfffbe4b0] */);
T(0x10082a6a, 0x00002864, AL, CMPS(r0, 0x64));
T(0x10082a6c, 0x0000d903, LS, B(0x10082a76); /* 0x10082a70 + 0x006 */);
T(0x10082a6e, 0x00008060, AL, STRH(r0, r4, 0x002); /* [0x00000002] */);
T(0x10082a70, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10082a72, 0x00007120, AL, STRB(r0, r4, 0x004); /* [0x00000004] */);
T(0x10082a74, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10082a76, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10082a78, 0x00007120, AL, STRB(r0, r4, 0x004); /* [0x00000004] */);
T(0x10082a7a, 0x0000e7fb, AL, B(0x10082a72); /* 0x10082a7d + 0xfffffff6*/);

T(0x10082a72, 0x00007120, AL, STRB(r0, r4, 0x004); /* [0x00000004] */);
T(0x10082a74, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10082a7c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10082a7e, 0x00007120, AL, STRB(r0, r4, 0x004); /* [0x00000004] */);
T(0x10082a80, 0x0000e7f8, AL, B(0x10082a72); /* 0x10082a83 + 0xfffffff0*/);

T(0x10082a82, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10082e02, 0x00004903, AL, LDR(r1, PC, 0x000c); /* [0x10082e10]:0x1085d038 */);
T(0x10082e04, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10082e06, 0x00007108, AL, STRB(r0, r1, 0x004); /* [0x1085d03c] */);
T(0x10082e08, 0x00002003, AL, MOVS(r0, 0x03));
T(0x10082e0a, 0x000070c8, AL, STRB(r0, r1, 0x003); /* [0x1085d03b] */);
T(0x10082e0c, 0x0000e7a0, AL, B(0x10082d4e); /* 0x10082e0f + 0xffffff40*/);

T(0x10082d4e, 0x00000000, AL, LSL(r0, r0, 0x00));
T(0x10082d50, 0x0000492f, AL, LDR(r1, PC, 0x00bc); /* [0x10082e10]:0x1085d038 */);
T(0x10082d52, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x10082d54, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10082d56, 0x00006088, AL, STR(r0, r1, 0x008); /* [0x1085d040] */);
T(0x10082d58, 0x00007008, AL, STRB(r0, r1); /* [0x1085d038] */);
T(0x10082d5a, 0x00007048, AL, STRB(r0, r1, 0x001); /* [0x1085d039] */);
T(0x10082d5c, 0x0000492d, AL, LDR(r1, PC, 0x00b4); /* [0x10082e14]:0x1085d050 */);
T(0x10082d5e, 0x00007008, AL, STRB(r0, r1); /* [0x1085d050] */);
T(0x10082d60, 0xf000f9c9, AL, BL(0x100830f6); /* 0x10082d65 + 0x00000392, LR = 0x10082d64 */);
T(0x10082d64, 0xf000fbcc, AL, BL(0x10083500); /* 0x10082d69 + 0x00000798, LR = 0x10082d68 */);
T(0x10082d68, 0xf000f8be, AL, BL(0x10082ee8); /* 0x10082d6d + 0x0000017c, LR = 0x10082d6c */);
T(0x10082d6c, 0xf7f8fbad, AL, BL(0x1007b4ca); /* 0x10082d71 + 0x0000075a, LR = 0x10082d70 */);
T(0x10082d70, 0x00004c29, AL, LDR(r4, PC, 0x00a4); /* [0x10082e18]:0x00001d4c */);
T(0x10082d72, 0x00004d2a, AL, LDR(r5, PC, 0x00a8); /* [0x10082e1c]:0xfffbbc00 */);
T(0x10082d74, 0x000042a0, AL, CMP(r0, r4));
T(0x10082d76, 0x0000d802, HI, B(0x10082d7e); /* 0x10082d7a + 0x004 */);
T(0x10082d78, 0x00006ae8, AL, LDR(r0, r5, 0x02c); /* [0xfffbbc2c] */);
T(0x10082d7a, 0x00000440, AL, LSL(r0, r0, 0x11));
T(0x10082d7c, 0x0000d414, MI, B(0x10082da8); /* 0x10082d80 + 0x028 */);

T(0x10082d7e, 0x00004928, AL, LDR(r1, PC, 0x00a0); /* [0x10082e20]:0x1085d048 */);
T(0x10082d80, 0x00002002, AL, MOVS(r0, 0x02));
T(0x10082d82, 0x00004e23, AL, LDR(r6, PC, 0x008c); /* [0x10082e10]:0x1085d038 */);
T(0x10082d84, 0x00007008, AL, STRB(r0, r1); /* [0x1085d048] */);
T(0x10082d86, 0x000070b0, AL, STRB(r0, r6, 0x002); /* [0x1085d03a] */);
T(0x10082d88, 0xf7f8fb9f, AL, BL(0x1007b4ca); /* 0x10082d8d + 0x0000073e, LR = 0x10082d8c */);
T(0x10082d8c, 0x000042a0, AL, CMP(r0, r4));
T(0x10082d8e, 0x0000d901, LS, B(0x10082d94); /* 0x10082d92 + 0x002 */);
T(0x10082d90, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10082d92, 0x0000e000, AL, B(0x10082d94); /* 0x10082d95 + 0x000*/);

T(0x10082d94, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10082d96, 0x00006ae9, AL, LDR(r1, r5, 0x02c); /* [0x0000002c] */);
T(0x10082d98, 0x00000449, AL, LSL(r1, r1, 0x11));
T(0x10082d9a, 0x0000d401, MI, B(0x10082da0); /* 0x10082d9e + 0x002 */);
T(0x10082d9c, 0x00002102, AL, MOVS(r1, 0x02));
T(0x10082d9e, 0x0000e000, AL, B(0x10082da0); /* 0x10082da1 + 0x000*/);

T(0x10082da0, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10082da2, 0x00004308, AL, ORR(r0, r1));
T(0x10082da4, 0x00007030, AL, STRB(r0, r6); /* [0x00000000] */);
T(0x10082da6, 0x0000e002, AL, B(0x10082dac); /* 0x10082da9 + 0x004*/);

T(0x10082da8, 0x00004919, AL, LDR(r1, PC, 0x0064); /* [0x10082e10]:0x1085d038 */);
T(0x10082daa, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10082dac, 0x00007088, AL, STRB(r0, r1, 0x002); /* [0x1085d03a] */);
T(0x10082dae, 0x00004918, AL, LDR(r1, PC, 0x0060); /* [0x10082e10]:0x1085d038 */);
T(0x10082db0, 0x00007888, AL, LDRB(r0, r1, 0x002); /* [0x1085d03a] */);
T(0x10082db2, 0x000070c8, AL, STRB(r0, r1, 0x003); /* [0x1085d03b] */);
T(0x10082db4, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x10082dac, 0x00007088, AL, STRB(r0, r1, 0x002); /* [0x00000002] */);
T(0x10082dae, 0x00004918, AL, LDR(r1, PC, 0x0060); /* [0x10082e10]:0x1085d038 */);
T(0x10082db0, 0x00007888, AL, LDRB(r0, r1, 0x002); /* [0x1085d03a] */);
T(0x10082db2, 0x000070c8, AL, STRB(r0, r1, 0x003); /* [0x1085d03b] */);
T(0x10082db4, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x10082ee8, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10082eea, 0x00004905, AL, LDR(r1, PC, 0x0014); /* [0x10082f00]:0x1085d048 */);
T(0x10082eec, 0x000043c0, AL, MVN(r0, r0));
T(0x10082eee, 0x00008048, AL, STRH(r0, r1, 0x002); /* [0x1085d04a] */);
T(0x10082ef0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10082ef2, 0x00007008, AL, STRB(r0, r1); /* [0x1085d048] */);
T(0x10082ef4, 0x00003904, AL, SUBS(r1, 0x04));
T(0x10082ef6, 0x00006088, AL, STR(r0, r1, 0x008));
T(0x10082ef8, 0x00007008, AL, STRB(r0, r1));
T(0x10082efa, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100830f6, 0x0000480c, AL, LDR(r0, PC, 0x0030); /* [0x10083128]:0x1085d060 */);
T(0x100830f8, 0x00002103, AL, MOVS(r1, 0x03));
T(0x100830fa, 0x00007001, AL, STRB(r1, r0); /* [0x1085d060] */);
T(0x100830fc, 0x00003904, AL, SUBS(r1, 0x04));
T(0x100830fe, 0x00008081, AL, STRH(r1, r0, 0x004); /* [0x1085d064] */);
T(0x10083100, 0x00000c49, AL, LSR(r1, r1, 0x11));
T(0x10083102, 0x000080c1, AL, STRH(r1, r0, 0x006); /* [0x1085d066] */);
T(0x10083104, 0x00008101, AL, STRH(r1, r0, 0x008); /* [0x1085d068] */);
T(0x10083106, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10083108, 0x00004a0b, AL, LDR(r2, PC, 0x002c); /* [0x10083138]:0x00000dac */);
T(0x1008310a, 0x00007041, AL, STRB(r1, r0, 0x001); /* [0x1085d061] */);
T(0x1008310c, 0x00008142, AL, STRH(r2, r0, 0x00a); /* [0x1085d06a] */);
T(0x1008310e, 0x00004a0b, AL, LDR(r2, PC, 0x002c); /* [0x1008313c]:0x00001964 */);
T(0x10083110, 0x00008182, AL, STRH(r2, r0, 0x00c); /* [0x1085d06c] */);
T(0x10083112, 0x00002214, AL, MOVS(r2, 0x14));
T(0x10083114, 0x000081c2, AL, STRH(r2, r0, 0x00e); /* [0x1085d06e] */);
T(0x10083116, 0x00004a0a, AL, LDR(r2, PC, 0x0028); /* [0x10083140]:0x000003ca */);
T(0x10083118, 0x00008202, AL, STRH(r2, r0, 0x010); /* [0x1085d070] */);
T(0x1008311a, 0x0000380c, AL, SUBS(r0, 0x0c));
T(0x1008311c, 0x00006081, AL, STR(r1, r0, 0x008));
T(0x1008311e, 0x00006041, AL, STR(r1, r0, 0x004));
T(0x10083120, 0x00007041, AL, STRB(r1, r0, 0x001));
T(0x10083122, 0x00007001, AL, STRB(r1, r0));
T(0x10083124, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10083500, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10083502, 0x00004c17, AL, LDR(r4, PC, 0x005c); /* [0x10083560]:0x1085d074 */);
T(0x10083504, 0x0000b082, AL, SUB(SP, 0x008));
T(0x10083506, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10083508, 0x000070e0, AL, STRB(r0, r4, 0x003); /* [0x1085d077] */);
T(0x1008350a, 0x000070a0, AL, STRB(r0, r4, 0x002); /* [0x1085d076] */);
T(0x1008350c, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x1085d07c] */);
T(0x1008350e, 0x00007120, AL, STRB(r0, r4, 0x004); /* [0x1085d078] */);
T(0x10083510, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10083512, 0x00004914, AL, LDR(r1, PC, 0x0050); /* [0x10083564]:0x1085d088 */);
T(0x10083514, 0x00007160, AL, STRB(r0, r4, 0x005); /* [0x1085d079] */);
T(0x10083516, 0x0000680a, AL, LDR(r2, r1); /* [0x1085d088] */);
T(0x10083518, 0x00002a01, AL, CMPS(r2, 0x01));
T(0x1008351a, 0x0000d106, NE, B(0x1008352a); /* 0x1008351e + 0x00c */);
T(0x1008351c, 0x00006849, AL, LDR(r1, r1, 0x004));
T(0x1008351e, 0x00000609, AL, LSL(r1, r1, 0x18));
T(0x10083520, 0x00000e09, AL, LSR(r1, r1, 0x18));
T(0x10083522, 0x00002907, AL, CMPS(r1, 0x07));
T(0x10083524, 0x0000d101, NE, B(0x1008352a); /* 0x10083528 + 0x002 */);
T(0x10083526, 0x000071a0, AL, STRB(r0, r4, 0x006); /* [0x1085d07a] */);
T(0x10083528, 0x0000e001, AL, B(0x1008352c); /* 0x1008352b + 0x002*/);

T(0x1008352a, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1008352c, 0x000071a0, AL, STRB(r0, r4, 0x006); /* [0x00000006] */);
T(0x1008352e, 0x0000a901, AL, ADD(r1, SP, 0x004)));
T(0x10083530, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10083532, 0xf003fa29, AL, BL(0x10086988); /* 0x10083537 + 0x00000452, LR = 0x10083536 */);
T(0x10083536, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10083538, 0x0000d008, EQ, B(0x1008354c); /* 0x1008353c + 0x010 */);
T(0x1008353a, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x1008353c, 0x00002004, AL, MOVS(r0, 0x04));
T(0x1008353e, 0x00005618, AL, STRBS(r0, r3, r0));
T(0x10083540, 0x0000282d, AL, CMPS(r0, 0x2d));
T(0x10083542, 0x0000d803, HI, B(0x1008354c); /* 0x10083546 + 0x006 */);
T(0x10083544, 0x00002003, AL, MOVS(r0, 0x03));
T(0x10083546, 0x00007020, AL, STRB(r0, r4); /* [0x00000000] */);
T(0x10083548, 0x00002032, AL, MOVS(r0, 0x32));
T(0x1008354a, 0x00007060, AL, STRB(r0, r4, 0x001); /* [0x00000001] */);
T(0x1008354c, 0x0000b002, AL, ADD(SP, 0x008));
T(0x1008354e, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1008352c, 0x000071a0, AL, STRB(r0, r4, 0x006); /* [0x00000006] */);
T(0x1008352e, 0x0000a901, AL, ADD(r1, SP, 0x004)));
T(0x10083530, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10083532, 0xf003fa29, AL, BL(0x10086988); /* 0x10083537 + 0x00000452, LR = 0x10083536 */);
T(0x10083536, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10083538, 0x0000d008, EQ, B(0x1008354c); /* 0x1008353c + 0x010 */);
T(0x1008353a, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x1008353c, 0x00002004, AL, MOVS(r0, 0x04));
T(0x1008353e, 0x00005618, AL, STRBS(r0, r3, r0));
T(0x10083540, 0x0000282d, AL, CMPS(r0, 0x2d));
T(0x10083542, 0x0000d803, HI, B(0x1008354c); /* 0x10083546 + 0x006 */);
T(0x10083544, 0x00002003, AL, MOVS(r0, 0x03));
T(0x10083546, 0x00007020, AL, STRB(r0, r4); /* [0x00000000] */);
T(0x10083548, 0x00002032, AL, MOVS(r0, 0x32));
T(0x1008354a, 0x00007060, AL, STRB(r0, r4, 0x001); /* [0x00000001] */);
T(0x1008354c, 0x0000b002, AL, ADD(SP, 0x008));
T(0x1008354e, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1008354c, 0x0000b002, AL, ADD(SP, 0x008));
T(0x1008354e, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x10083a82, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x10083a84, 0x0000493c, AL, LDR(r1, PC, 0x00f0); /* [0x10083b78]:0x0000bb80 */);
T(0x10083a86, 0x00004a3d, AL, LDR(r2, PC, 0x00f4); /* [0x10083b7c]:0xfffb9000 */);
T(0x10083a88, 0x00006011, AL, STR(r1, r2); /* [0xfffb9000] */);
T(0x10083a8a, 0x0000200e, AL, MOVS(r0, 0x0e));
T(0x10083a8c, 0x00006090, AL, STR(r0, r2, 0x008); /* [0xfffb9008] */);
T(0x10083a8e, 0x00006890, AL, LDR(r0, r2, 0x008); /* [0xfffb9008] */);
T(0x10083a90, 0x00000780, AL, LSL(r0, r0, 0x1e));
T(0x10083a92, 0x0000d502, PL, B(0x10083a9a); /* 0x10083a96 + 0x004 */);
T(0x10083a94, 0x00006890, AL, LDR(r0, r2, 0x008); /* [0xfffb9008] */);
T(0x10083a96, 0x00000780, AL, LSL(r0, r0, 0x1e));
T(0x10083a98, 0x0000d4fc, MI, B(0x10083a94); /* 0x10083a9c + 0xfffffff8 */);

T(0x10083a9a, 0x00004839, AL, LDR(r0, PC, 0x00e4); /* [0x10083b80]:0xfffec500 */);
T(0x10083a9c, 0x00006041, AL, STR(r1, r0, 0x004); /* [0xfffec504] */);
T(0x10083a9e, 0x00004938, AL, LDR(r1, PC, 0x00e0); /* [0x10083b80]:0xfffec500 */);
T(0x10083aa0, 0x00002022, AL, MOVS(r0, 0x22));
T(0x10083aa2, 0x00006008, AL, STR(r0, r1); /* [0xfffec500] */);
T(0x10083aa4, 0x00001448, AL, ASR(r0, r1, 0x11));
T(0x10083aa6, 0x00004937, AL, LDR(r1, PC, 0x00dc); /* [0x10083b84]:0xfffec600 */);
T(0x10083aa8, 0x00006048, AL, STR(r0, r1, 0x004); /* [0xfffec604] */);
T(0x10083aaa, 0x00002022, AL, MOVS(r0, 0x22));
T(0x10083aac, 0x00006008, AL, STR(r0, r1); /* [0xfffec600] */);
T(0x10083aae, 0xf0dfea24, AL, BLX(0x10162ef8); /* 0x10083ab3 + 0x00000448, LR = 0x10083ab2 */);
T(0x10083ab2, 0x00004c35, AL, LDR(r4, PC, 0x00d4); /* [0x10083b88]:0xfffb1c00 */);
T(0x10083ab4, 0x00006a61, AL, LDR(r1, r4, 0x024); /* [0xfffb1c24] */);
T(0x10083ab6, 0x00000849, AL, LSR(r1, r1, 0x01));
T(0x10083ab8, 0x00000049, AL, LSL(r1, r1, 0x01));
T(0x10083aba, 0x00006261, AL, STR(r1, r4, 0x024); /* [0xfffb1c24] */);
T(0x10083abc, 0xf0dfea24, AL, BLX(0x10162f08); /* 0x10083ac1 + 0x00000448, LR = 0x10083ac0 */);
T(0x10083ac0, 0x00004832, AL, LDR(r0, PC, 0x00c8); /* [0x10083b8c]:0xffffe890 */);
T(0x10083ac2, 0x000062e0, AL, STR(r0, r4, 0x02c); /* [0xfffb1c2c] */);
T(0x10083ac4, 0x000063a0, AL, STR(r0, r4, 0x038); /* [0xfffb1c38] */);
T(0x10083ac6, 0x00002020, AL, MOVS(r0, 0x20));
T(0x10083ac8, 0x00006120, AL, STR(r0, r4, 0x010); /* [0xfffb1c10] */);
T(0x10083aca, 0x00002607, AL, MOVS(r6, 0x07));
T(0x10083acc, 0x000061a6, AL, STR(r6, r4, 0x018); /* [0xfffb1c18] */);
T(0x10083ace, 0x00002500, AL, MOVS(r5, 0x00));
T(0x10083ad0, 0x000061e5, AL, STR(r5, r4, 0x01c); /* [0xfffb1c1c] */);
T(0x10083ad2, 0x00006225, AL, STR(r5, r4, 0x020); /* [0xfffb1c20] */);
T(0x10083ad4, 0x0000482e, AL, LDR(r0, PC, 0x00b8); /* [0x10083b90]:0x00001863 */);
T(0x10083ad6, 0x00006260, AL, STR(r0, r4, 0x024); /* [0xfffb1c24] */);
T(0x10083ad8, 0x0000482e, AL, LDR(r0, PC, 0x00b8); /* [0x10083b94]:0xfffb1c40 */);
T(0x10083ada, 0x00002704, AL, MOVS(r7, 0x04));
T(0x10083adc, 0x00006007, AL, STR(r7, r0); /* [0xfffb1c40] */);
T(0x10083ade, 0xf0dfea0c, AL, BLX(0x10162ef8); /* 0x10083ae3 + 0x00000418, LR = 0x10083ae2 */);
T(0x10083ae2, 0x00004c2d, AL, LDR(r4, PC, 0x00b4); /* [0x10083b98]:0xfffb2400 */);
T(0x10083ae4, 0x00006a61, AL, LDR(r1, r4, 0x024); /* [0xfffb2424] */);
T(0x10083ae6, 0x00000849, AL, LSR(r1, r1, 0x01));
T(0x10083ae8, 0x00000049, AL, LSL(r1, r1, 0x01));
T(0x10083aea, 0x00006261, AL, STR(r1, r4, 0x024); /* [0xfffb2424] */);
T(0x10083aec, 0xf0dfea0c, AL, BLX(0x10162f08); /* 0x10083af1 + 0x00000418, LR = 0x10083af0 */);
T(0x10083af0, 0x0000482a, AL, LDR(r0, PC, 0x00a8); /* [0x10083b9c]:0xfffffc18 */);
T(0x10083af2, 0x000062e0, AL, STR(r0, r4, 0x02c); /* [0xfffb242c] */);
T(0x10083af4, 0x0000482a, AL, LDR(r0, PC, 0x00a8); /* [0x10083ba0]:0xfffffe0b */);
T(0x10083af6, 0x000063a0, AL, STR(r0, r4, 0x038); /* [0xfffb2438] */);
T(0x10083af8, 0x00002020, AL, MOVS(r0, 0x20));
T(0x10083afa, 0x00006120, AL, STR(r0, r4, 0x010); /* [0xfffb2410] */);
T(0x10083afc, 0x000061a6, AL, STR(r6, r4, 0x018); /* [0xfffb2418] */);
T(0x10083afe, 0x000061e5, AL, STR(r5, r4, 0x01c); /* [0xfffb241c] */);
T(0x10083b00, 0x00006225, AL, STR(r5, r4, 0x020); /* [0xfffb2420] */);
T(0x10083b02, 0x00004823, AL, LDR(r0, PC, 0x008c); /* [0x10083b90]:0x00001863 */);
T(0x10083b04, 0x00006260, AL, STR(r0, r4, 0x024); /* [0xfffb2424] */);
T(0x10083b06, 0x00004827, AL, LDR(r0, PC, 0x009c); /* [0x10083ba4]:0xfffb2440 */);
T(0x10083b08, 0x00006007, AL, STR(r7, r0); /* [0xfffb2440] */);
T(0x10083b0a, 0x00004827, AL, LDR(r0, PC, 0x009c); /* [0x10083ba8]:0xfffb3400 */);
T(0x10083b0c, 0x00002102, AL, MOVS(r1, 0x02));
T(0x10083b0e, 0x00006101, AL, STR(r1, r0, 0x010); /* [0xfffb3410] */);
T(0x10083b10, 0x00006186, AL, STR(r6, r0, 0x018); /* [0xfffb3418] */);
T(0x10083b12, 0x000061c5, AL, STR(r5, r0, 0x01c); /* [0xfffb341c] */);
T(0x10083b14, 0x00006205, AL, STR(r5, r0, 0x020); /* [0xfffb3420] */);
T(0x10083b16, 0x00004925, AL, LDR(r1, PC, 0x0094); /* [0x10083bac]:0x00001442 */);
T(0x10083b18, 0x00006241, AL, STR(r1, r0, 0x024); /* [0xfffb3424] */);
T(0x10083b1a, 0x00004825, AL, LDR(r0, PC, 0x0094); /* [0x10083bb0]:0xfffb3440 */);
T(0x10083b1c, 0x00006007, AL, STR(r7, r0); /* [0xfffb3440] */);
T(0x10083b1e, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10083bb4, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x10083bb6, 0xf0dfe9a0, AL, BLX(0x10162ef8); /* 0x10083bbb + 0x00000340, LR = 0x10083bba */);
T(0x10083bba, 0x00004a05, AL, LDR(r2, PC, 0x0014); /* [0x10083bd0]:0xfffffdff */);
T(0x10083bbc, 0x00004905, AL, LDR(r1, PC, 0x0014); /* [0x10083bd4]:0xfffe0300 */);
T(0x10083bbe, 0x0000600a, AL, STR(r2, r1); /* [0xfffe0300] */);
T(0x10083bc0, 0x0000684a, AL, LDR(r2, r1, 0x004); /* [0xfffe0304] */);
T(0x10083bc2, 0x00002301, AL, MOVS(r3, 0x01));
T(0x10083bc4, 0x0000025b, AL, LSL(r3, r3, 0x09));
T(0x10083bc6, 0x0000439a, AL, BIC(r2, r3));
T(0x10083bc8, 0x0000604a, AL, STR(r2, r1, 0x004); /* [0xfffe0304] */);
T(0x10083bca, 0xf0dfe99e, AL, BLX(0x10162f08); /* 0x10083bcf + 0x0000033c, LR = 0x10083bce */);
T(0x10083bce, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x1008425e, 0x0000b500, AL, PUSH(rSP, r{........, LR}););
T(0x10084260, 0x0000b083, AL, SUB(SP, 0x00c));
T(0x10084262, 0xf7fcfb23, AL, BL(0x100808ac); /* 0x10084267 + 0x00000646, LR = 0x10084266 */);
T(0x10084266, 0xf000f87a, AL, BL(0x1008435e); /* 0x1008426b + 0x000000f4, LR = 0x1008426a */);
T(0x1008426a, 0xf000fd61, AL, BL(0x10084d30); /* 0x1008426f + 0x00000ac2, LR = 0x1008426e */);
T(0x1008426e, 0xf7fefb7a, AL, BL(0x10082966); /* 0x10084273 + 0x000006f4, LR = 0x10084272 */);
T(0x10084272, 0xf7fcfb29, AL, BL(0x100808c8); /* 0x10084277 + 0x00000652, LR = 0x10084276 */);
T(0x10084276, 0x0000aa02, AL, ADD(r2, SP, 0x008)));
T(0x10084278, 0x0000a901, AL, ADD(r1, SP, 0x004)));
T(0x1008427a, 0x0000200d, AL, MOVS(r0, 0x0d));
T(0x1008427c, 0xf000fad6, AL, BL(0x1008482c); /* 0x10084281 + 0x000005ac, LR = 0x10084280 */);
T(0x10084280, 0x00004912, AL, LDR(r1, PC, 0x0048); /* [0x100842cc]:0x1085d094 */);
T(0x10084282, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084284, 0x00006008, AL, STR(r0, r1); /* [0x1085d094] */);
T(0x10084286, 0x0000d00b, EQ, B(0x100842a0); /* 0x1008428a + 0x016 */);
T(0x10084288, 0x00000043, AL, LSL(r3, r0, 0x01));
T(0x1008428a, 0x00001818, AL, SUBS(r0, r3, r0);
T(0x1008428c, 0x00004a05, AL, LDR(r2, PC, 0x0014); /* [0x100842a4]:0x102c7878 */);
T(0x1008428e, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10084290, 0x00001880, AL, SUBS(r0, r0, r2);
T(0x10084292, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x10084294, 0x00009a01, AL, LDR(r2, SP, 0x0004);
T(0x10084296, 0x00001882, AL, SUBS(r2, r0, r2);
T(0x10084298, 0x0000608a, AL, STR(r2, r1, 0x008); /* [0x1085d09c] */);
T(0x1008429a, 0x00009a02, AL, LDR(r2, SP, 0x0008);
T(0x1008429c, 0x00001880, AL, SUBS(r0, r0, r2);
T(0x1008429e, 0x00006048, AL, STR(r0, r1, 0x004); /* [0x1085d098] */);
T(0x100842a0, 0x0000b003, AL, ADD(SP, 0x00c));
T(0x100842a2, 0x0000bd00, AL, POP(rSP, r{........, PC}););

T(0x100808ac, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x100808ae, 0xf0e2eb24, AL, BLX(0x10162ef8); /* 0x100808b3 + 0x00000648, LR = 0x100808b2 */);
T(0x100808b2, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100808b4, 0xf0e4efbe, AL, BLX(0x10165834); /* 0x100808b9 + 0x00000f7c, LR = 0x100808b8 */);
T(0x100808b8, 0xf0e5e8b0, AL, BLX(0x10165a1c); /* 0x100808bd + 0x00000160, LR = 0x100808bc */);
T(0x100808bc, 0xf0e5e8a0, AL, BLX(0x10165a00); /* 0x100808c1 + 0x00000140, LR = 0x100808c0 */);
T(0x100808c0, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x100808c2, 0xf0e2eb22, AL, BLX(0x10162f08); /* 0x100808c7 + 0x00000644, LR = 0x100808c6 */);
T(0x100808c6, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x100808c8, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x100808ca, 0xf0e2eb16, AL, BLX(0x10162ef8); /* 0x100808cf + 0x0000062c, LR = 0x100808ce */);
T(0x100808ce, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100808d0, 0xf0e5e8f6, AL, BLX(0x10165ac0); /* 0x100808d5 + 0x000001ec, LR = 0x100808d4 */);
T(0x100808d4, 0xf0e5e8a2, AL, BLX(0x10165a1c); /* 0x100808d9 + 0x00000144, LR = 0x100808d8 */);
T(0x100808d8, 0xf0e5e8e4, AL, BLX(0x10165aa4); /* 0x100808dd + 0x000001c8, LR = 0x100808dc */);
T(0x100808dc, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x100808de, 0xf0e2eb14, AL, BLX(0x10162f08); /* 0x100808e3 + 0x00000628, LR = 0x100808e2 */);
T(0x100808e2, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x100842a0, 0x0000b003, AL, ADD(SP, 0x00c));
T(0x100842a2, 0x0000bd00, AL, POP(rSP, r{........, PC}););

T(0x1008435e, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x10084360, 0x00004c3b, AL, LDR(r4, PC, 0x00ec); /* [0x10084450]:0x1085d0a0 */);
T(0x10084362, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x1085d0a0 - 0x00000000 = 0x1085d0a0 */ XXX);
T(0x10084364, 0xf0e3fa76, AL, BL(0x10167854); /* 0x10084369 + 0x000004ec, LR = 0x10084368 */);
T(0x10084368, 0x0000a03a, AL, ADD(r0, PC, 0x0e8); /* 0x10084454 */));
T(0x1008436a, 0x00004a40, AL, LDR(r2, PC, 0x0100); /* [0x1008446c]:0x102c7878 */);
T(0x1008436c, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x1085d0b0] */);
T(0x1008436e, 0x0000493f, AL, LDR(r1, PC, 0x00fc); /* [0x1008446c]:0x102c7878 */);
T(0x10084370, 0x00003a30, AL, SUBS(r2, 0x30));
T(0x10084372, 0x00006813, AL, LDR(r3, r2));
T(0x10084374, 0x00006852, AL, LDR(r2, r2, 0x004));
T(0x10084376, 0x00006bc8, AL, LDR(r0, r1, 0x03c); /* [0x102c78b4] */);
T(0x10084378, 0x00006042, AL, STR(r2, r0, 0x004));
T(0x1008437a, 0x00006003, AL, STR(r3, r0));
T(0x1008437c, 0x0000483c, AL, LDR(r0, PC, 0x00f0); /* [0x10084470]:0x1085d090 */);
T(0x1008437e, 0x00007800, AL, LDRB(r0, r0));
T(0x10084380, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084382, 0x0000d02c, EQ, B(0x100843de); /* 0x10084386 + 0x058 */);
T(0x10084384, 0x00002801, AL, CMPS(r0, 0x01));
T(0x10084386, 0x0000d021, EQ, B(0x100843cc); /* 0x1008438a + 0x042 */);
T(0x10084388, 0x00002802, AL, CMPS(r0, 0x02));
T(0x1008438a, 0x0000d128, NE, B(0x100843de); /* 0x1008438e + 0x050 */);
T(0x1008438c, 0x00004839, AL, LDR(r0, PC, 0x00e4); /* [0x10084474]:0x1085d092 */);
T(0x1008438e, 0x0000493a, AL, LDR(r1, PC, 0x00e8); /* [0x10084478]:0x10d0f178 */);
T(0x10084390, 0x00007800, AL, LDRB(r0, r0));
T(0x10084392, 0x000025f3, AL, MOVS(r5, 0xf3));
T(0x10084394, 0x00002201, AL, MOVS(r2, 0x01));
T(0x10084396, 0x00000652, AL, LSL(r2, r2, 0x19));
T(0x10084398, 0x000005ad, AL, LSL(r5, r5, 0x16));
T(0x1008439a, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1008439c, 0x00003930, AL, SUBS(r1, 0x30));
T(0x1008439e, 0x00002801, AL, CMPS(r0, 0x01));
T(0x100843a0, 0x00004b35, AL, LDR(r3, PC, 0x00d4); /* [0x10084478]:0x10d0f178 */);
T(0x100843a2, 0x0000d01d, EQ, B(0x100843e0); /* 0x100843a6 + 0x03a */);
T(0x100843a4, 0x00000a16, AL, LSR(r6, r2, 0x08));
T(0x100843a6, 0x00002701, AL, MOVS(r7, 0x01));
T(0x100843a8, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100843aa, 0x0000d020, EQ, B(0x100843ee); /* 0x100843ae + 0x040 */);
T(0x100843ac, 0x00002803, AL, CMPS(r0, 0x03));
T(0x100843ae, 0x0000d02f, EQ, B(0x10084410); /* 0x100843b2 + 0x05e */);
T(0x100843b0, 0x00002804, AL, CMPS(r0, 0x04));
T(0x100843b2, 0x0000d13c, NE, B(0x1008442e); /* 0x100843b6 + 0x078 */);
T(0x100843b4, 0x00004831, AL, LDR(r0, PC, 0x00c4); /* [0x1008447c]:0x0fae0000 */);
T(0x100843b6, 0x00006158, AL, STR(r0, r3, 0x014); /* [0x10d0f18c] */);
T(0x100843b8, 0x00003304, AL, ADDS(r3, 0x04));
T(0x100843ba, 0x0000c3a4, AL, STMIA(r3.WB, {..2..5.7}));
T(0x100843bc, 0x00003b10, AL, SUBS(r3, 0x10));
T(0x100843be, 0x0000601c, AL, STR(r4, r3));
T(0x100843c0, 0x0000611e, AL, STR(r6, r3, 0x010));
T(0x100843c2, 0x00002031, AL, MOVS(r0, 0x31));
T(0x100843c4, 0x00007008, AL, STRB(r0, r1));
T(0x100843c6, 0x0000482e, AL, LDR(r0, PC, 0x00b8); /* [0x10084480]:0x4c6e0000 */);
T(0x100843c8, 0x00006048, AL, STR(r0, r1, 0x004));
T(0x100843ca, 0x0000e033, AL, B(0x10084432); /* 0x100843cd + 0x066*/);

T(0x100843cc, 0x00004c27, AL, LDR(r4, PC, 0x009c); /* [0x1008446c]:0x102c7878 */);
T(0x100843ce, 0x00006bc8, AL, LDR(r0, r1, 0x03c); /* [0x0000003c] */);
T(0x100843d0, 0x00003c28, AL, SUBS(r4, 0x28));
T(0x100843d2, 0x0000cc0e, AL, LDMIA(r4.WB, {.123....}));
T(0x100843d4, 0x0000c00e, AL, STMIA(r0.WB, {.123....}));
T(0x100843d6, 0x0000cc0e, AL, LDMIA(r4.WB, {.123....}));
T(0x100843d8, 0x0000c00e, AL, STMIA(r0.WB, {.123....}));
T(0x100843da, 0x0000cc1e, AL, LDMIA(r4.WB, {.1234...}));
T(0x100843dc, 0x0000c01e, AL, STMIA(r0.WB, {.1234...}));
T(0x100843de, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x100843de, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x100843e0, 0x0000605a, AL, STR(r2, r3, 0x004); /* [0x00000004] */);
T(0x100843e2, 0x0000609d, AL, STR(r5, r3, 0x008); /* [0x00000008] */);
T(0x100843e4, 0x0000601c, AL, STR(r4, r3); /* [0x00000000] */);
T(0x100843e6, 0x00002031, AL, MOVS(r0, 0x31));
T(0x100843e8, 0x00007008, AL, STRB(r0, r1); /* [0x00000000] */);
T(0x100843ea, 0x0000604d, AL, STR(r5, r1, 0x004); /* [0x00000004] */);
T(0x100843ec, 0x0000e022, AL, B(0x10084432); /* 0x100843ef + 0x044*/);

T(0x100843ee, 0x00004825, AL, LDR(r0, PC, 0x0094); /* [0x10084484]:0x3ebe0000 */);
T(0x100843f0, 0x00006158, AL, STR(r0, r3, 0x014); /* [0x00000014] */);
T(0x100843f2, 0x00003304, AL, ADDS(r3, 0x04));
T(0x100843f4, 0x0000c3a4, AL, STMIA(r3.WB, {..2..5.7}));
T(0x100843f6, 0x00003b10, AL, SUBS(r3, 0x10));
T(0x100843f8, 0x0000601c, AL, STR(r4, r3));
T(0x100843fa, 0x0000611e, AL, STR(r6, r3, 0x010));
T(0x100843fc, 0x00002031, AL, MOVS(r0, 0x31));
T(0x100843fe, 0x00007008, AL, STRB(r0, r1); /* [0x00000000] */);
T(0x10084400, 0x00004821, AL, LDR(r0, PC, 0x0084); /* [0x10084488]:0x71ce0000 */);
T(0x10084402, 0x0000229b, AL, MOVS(r2, 0x9b));
T(0x10084404, 0x00000512, AL, LSL(r2, r2, 0x14));
T(0x10084406, 0x00006048, AL, STR(r0, r1, 0x004); /* [0x00000004] */);
T(0x10084408, 0x00002033, AL, MOVS(r0, 0x33));
T(0x1008440a, 0x00007208, AL, STRB(r0, r1, 0x008); /* [0x00000008] */);
T(0x1008440c, 0x000060ca, AL, STR(r2, r1, 0x00c); /* [0x0000000c] */);
T(0x1008440e, 0x0000e011, AL, B(0x10084432); /* 0x10084411 + 0x022*/);

T(0x10084410, 0x000020f7, AL, MOVS(r0, 0xf7));
T(0x10084412, 0x000005c0, AL, LSL(r0, r0, 0x17));
T(0x10084414, 0x00006098, AL, STR(r0, r3, 0x008); /* [0x00000008] */);
T(0x10084416, 0x0000605a, AL, STR(r2, r3, 0x004); /* [0x00000004] */);
T(0x10084418, 0x0000601c, AL, STR(r4, r3); /* [0x00000000] */);
T(0x1008441a, 0x00002031, AL, MOVS(r0, 0x31));
T(0x1008441c, 0x00007008, AL, STRB(r0, r1); /* [0x00000000] */);
T(0x1008441e, 0x0000481b, AL, LDR(r0, PC, 0x006c); /* [0x1008448c]:0x71d00000 */);
T(0x10084420, 0x0000229b, AL, MOVS(r2, 0x9b));
T(0x10084422, 0x00000512, AL, LSL(r2, r2, 0x14));
T(0x10084424, 0x00006048, AL, STR(r0, r1, 0x004); /* [0x00000004] */);
T(0x10084426, 0x00002033, AL, MOVS(r0, 0x33));
T(0x10084428, 0x00007208, AL, STRB(r0, r1, 0x008); /* [0x00000008] */);
T(0x1008442a, 0x000060ca, AL, STR(r2, r1, 0x00c); /* [0x0000000c] */);
T(0x1008442c, 0x0000e002, AL, B(0x10084432); /* 0x1008442f + 0x004*/);

T(0x1008442e, 0x00007808, AL, LDRB(r0, r1); /* [0x00000000] */);
T(0x10084430, 0x00002831, AL, CMPS(r0, 0x31));
T(0x10084432, 0x0000d1d4, NE, B(0x100843de); /* 0x10084436 + 0xffffffa8 */);
T(0x10084434, 0x00004a10, AL, LDR(r2, PC, 0x0040); /* [0x10084478]:0x10d0f178 */);
T(0x10084436, 0x00002017, AL, MOVS(r0, 0x17));
T(0x10084438, 0x00003a18, AL, SUBS(r2, 0x18));
T(0x1008443a, 0x00007010, AL, STRB(r0, r2));
T(0x1008443c, 0x00006848, AL, LDR(r0, r1, 0x004); /* [0x00000004] */);
T(0x1008443e, 0x00006050, AL, STR(r0, r2, 0x004));
T(0x10084440, 0x0000e7cd, AL, B(0x100843dc); /* 0x10084443 + 0xffffff9a*/);

T(0x100843dc, 0x0000c01e, AL, STMIA(r0.WB, {.1234...}));
T(0x100843de, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10084432, 0x0000d1d4, NE, B(0x100843de); /* 0x10084436 + 0xffffffa8 */);
T(0x10084434, 0x00004a10, AL, LDR(r2, PC, 0x0040); /* [0x10084478]:0x10d0f178 */);
T(0x10084436, 0x00002017, AL, MOVS(r0, 0x17));
T(0x10084438, 0x00003a18, AL, SUBS(r2, 0x18));
T(0x1008443a, 0x00007010, AL, STRB(r0, r2));
T(0x1008443c, 0x00006848, AL, LDR(r0, r1, 0x004); /* [0x00000004] */);
T(0x1008443e, 0x00006050, AL, STR(r0, r2, 0x004));
T(0x10084440, 0x0000e7cd, AL, B(0x100843dc); /* 0x10084443 + 0xffffff9a*/);

T(0x1008482c, 0x0000b5f7, AL, PUSH(rSP, r{012.4567, LR}););
T(0x1008482e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10084830, 0x000043c0, AL, MVN(r0, r0));
T(0x10084832, 0x0000b082, AL, SUB(SP, 0x008));
T(0x10084834, 0x00001c14, AL, SUBS(r4, r2, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084836, 0x00002500, AL, MOVS(r5, 0x00));
T(0x10084838, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x1008483a, 0x00000068, AL, LSL(r0, r5, 0x01));
T(0x1008483c, 0x00001940, AL, SUBS(r0, r0, r5);
T(0x1008483e, 0x00004f88, AL, LDR(r7, PC, 0x0220); /* [0x10084a60]:0x102c7878 */);
T(0x10084840, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10084842, 0x0000583a, AL, LDR(r2, r7, r0));
T(0x10084844, 0x00002600, AL, MOVS(r6, 0x00));
T(0x10084846, 0x00007813, AL, LDRB(r3, r2));
T(0x10084848, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1008484a, 0x00002bff, AL, CMPS(r3, 0xff));
T(0x1008484c, 0x0000d052, EQ, B(0x100848f4); /* 0x10084850 + 0x0a4 */);
T(0x1008484e, 0x00004b83, AL, LDR(r3, PC, 0x020c); /* [0x10084a5c]:0x1085d1cc */);
T(0x10084850, 0x00004686, AL, MOV(LR, r0));
T(0x10084852, 0x00003be0, AL, SUBS(r3, 0xe0));
T(0x10084854, 0x00000168, AL, LSL(r0, r5, 0x05));
T(0x10084856, 0x00004684, AL, MOV(r12, r0));
T(0x10084858, 0x0000449c, AL, ADD(r12, r3));
T(0x1008485a, 0x000044be, AL, ADD(LR, r7));
T(0x1008485c, 0x000000f7, AL, LSL(r7, r6, 0x03));
T(0x1008485e, 0x00005dd0, AL, LDRB(r0, r2, r7));
T(0x10084860, 0x00009b02, AL, LDR(r3, SP, 0x0008);
T(0x10084862, 0x00004298, AL, CMP(r0, r3));
T(0x10084864, 0x0000d147, NE, B(0x100848f6); /* 0x10084868 + 0x08e */);
T(0x10084866, 0x00004660, AL, MOV(r0, r12));
T(0x10084868, 0x00006940, AL, LDR(r0, r0, 0x014));
T(0x1008486a, 0x00006800, AL, LDR(r0, r0));
T(0x1008486c, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x1008486e, 0x0000d042, EQ, B(0x100848f6); /* 0x10084872 + 0x084 */);
T(0x10084870, 0x00009803, AL, LDR(r0, SP, 0x000c);
T(0x10084872, 0x00006001, AL, STR(r1, r0));
T(0x10084874, 0x000000f0, AL, LSL(r0, r6, 0x03));
T(0x10084876, 0x00001880, AL, SUBS(r0, r0, r2);
T(0x10084878, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x1008487a, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1008487c, 0x0000d114, NE, B(0x100848a8); /* 0x10084880 + 0x028 */);
T(0x1008487e, 0x00004672, AL, MOV(r2, LR));
T(0x10084880, 0x00007a12, AL, LDRB(r2, r2, 0x008));
T(0x10084882, 0x00002a04, AL, CMPS(r2, 0x04));
T(0x10084884, 0x0000d010, EQ, B(0x100848a8); /* 0x10084888 + 0x020 */);
T(0x10084886, 0x00004660, AL, MOV(r0, r12));
T(0x10084888, 0x00006940, AL, LDR(r0, r0, 0x014));
T(0x1008488a, 0x00006802, AL, LDR(r2, r0));
T(0x1008488c, 0x00001c53, AL, SUBS(r3, r2, 0x1);
T(0x1008488e, 0x0000d101, NE, B(0x10084894); /* 0x10084892 + 0x002 */);
T(0x10084890, 0x00006021, AL, STR(r1, r4));
T(0x10084892, 0x0000e02e, AL, B(0x100848f0); /* 0x10084895 + 0x05c*/);

T(0x10084894, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x10084896, 0x00004662, AL, MOV(r2, r12));
T(0x10084898, 0x00008803, AL, LDRH(r3, r0));
T(0x1008489a, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1008489c, 0x000069d2, AL, LDR(r2, r2, 0x01c));
T(0x1008489e, 0x00004098, AL, LSL(r0, r3));
T(0x100848a0, 0x00004342, AL, MUL(r2, r0));
T(0x100848a2, 0x00001850, AL, SUBS(r0, r2, r1);
T(0x100848a4, 0x00006020, AL, STR(r0, r4); /* [0x00000000] */);
T(0x100848a6, 0x0000e024, AL, B(0x100848f0); /* 0x100848a9 + 0x048*/);

T(0x100848a8, 0x00004672, AL, MOV(r2, LR));
T(0x100848aa, 0x00007a12, AL, LDRB(r2, r2, 0x008));
T(0x100848ac, 0x00002a05, AL, CMPS(r2, 0x05));
T(0x100848ae, 0x0000d001, EQ, B(0x100848b4); /* 0x100848b2 + 0x002 */);
T(0x100848b0, 0x00002a06, AL, CMPS(r2, 0x06));
T(0x100848b2, 0x0000d102, NE, B(0x100848ba); /* 0x100848b6 + 0x004 */);

T(0x100848b4, 0x00001808, AL, SUBS(r0, r1, r0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100848b6, 0x00006020, AL, STR(r0, r4); /* [0x00000000] */);
T(0x100848b8, 0x0000e01b, AL, B(0x100848f0); /* 0x100848bb + 0x036*/);

T(0x100848ba, 0x00002a03, AL, CMPS(r2, 0x03));
T(0x100848bc, 0x0000d103, NE, B(0x100848c6); /* 0x100848c0 + 0x006 */);
T(0x100848be, 0x00000280, AL, LSL(r0, r0, 0x0a));
T(0x100848c0, 0x00001808, AL, SUBS(r0, r1, r0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100848c2, 0x00006020, AL, STR(r0, r4); /* [0x00000000] */);
T(0x100848c4, 0x0000e015, AL, B(0x100848f0); /* 0x100848c7 + 0x02a*/);

T(0x100848c6, 0x00002a04, AL, CMPS(r2, 0x04));
T(0x100848c8, 0x0000d110, NE, B(0x100848ec); /* 0x100848cc + 0x020 */);
T(0x100848ca, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100848cc, 0x0000d10b, NE, B(0x100848e6); /* 0x100848d0 + 0x016 */);
T(0x100848ce, 0x00004660, AL, MOV(r0, r12));
T(0x100848d0, 0x00006940, AL, LDR(r0, r0, 0x014));
T(0x100848d2, 0x00006800, AL, LDR(r0, r0));
T(0x100848d4, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x100848d6, 0x0000d101, NE, B(0x100848dc); /* 0x100848da + 0x002 */);
T(0x100848d8, 0x00006021, AL, STR(r1, r4); /* [0x00000000] */);
T(0x100848da, 0x0000e00a, AL, B(0x100848f0); /* 0x100848dd + 0x014*/);

T(0x100848dc, 0x00009802, AL, LDR(r0, SP, 0x0008);
T(0x100848de, 0xf7f9ff47, AL, BL(0x1007e770); /* 0x100848e3 + 0x00000e8e, LR = 0x100848e2 */);
T(0x100848e2, 0x00006020, AL, STR(r0, r4); /* [0x00000000] */);
T(0x100848e4, 0x0000e005, AL, B(0x100848f0); /* 0x100848e7 + 0x00a*/);

T(0x1007e770, 0x0000b538, AL, PUSH(rSP, r{...345.., LR}););
T(0x1007e772, 0xf7f3f853, AL, BL(0x1007181c); /* 0x1007e777 + 0x000000a6, LR = 0x1007e776 */);
T(0x1007e776, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007e778, 0x0000a05f, AL, ADD(r0, PC, 0x17c); /* 0x1007e8f8 */));
T(0x1007e77a, 0x0000c80c, AL, LDMIA(r0.WB, {..23....}));
T(0x1007e77c, 0x00001c0d, AL, SUBS(r5, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007e77e, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007e780, 0xf0dce9f2, AL, BLX(0x1015ab68); /* 0x1007e785 + 0x000003e4, LR = 0x1007e784 */);
T(0x1007e784, 0x0000d802, HI, B(0x1007e78c); /* 0x1007e788 + 0x004 */);
T(0x1007e786, 0x00001c29, AL, SUBS(r1, r5, 0x0);
T(0x1007e788, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x1007e78a, 0x0000bd38, AL, POP(rSP, r{...345.., PC}););

T(0x1007181c, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x1007181e, 0x0000a1a7, AL, ADD(r1, PC, 0x29c); /* 0x10071abe */));
T(0x10071820, 0x0000c960, AL, LDMIA(r1.WB, {.....56.}));
T(0x10071822, 0x000049a5, AL, LDR(r1, PC, 0x0294); /* [0x10071ab8]:0x105f7540 */);
T(0x10071824, 0x0000b08a, AL, SUB(SP, 0x028));
T(0x10071826, 0x0000680c, AL, LDR(r4, r1); /* [0x105f7540] */);
T(0x10071828, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x1007182a, 0x0000d025, EQ, B(0x10071878); /* 0x1007182e + 0x04a */);
T(0x1007182c, 0x00007861, AL, LDRB(r1, r4, 0x001));
T(0x1007182e, 0x00004281, AL, CMP(r1, r0));
T(0x10071830, 0x0000d003, EQ, B(0x1007183a); /* 0x10071834 + 0x006 */);
T(0x10071832, 0x000068e4, AL, LDR(r4, r4, 0x00c));
T(0x10071834, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x10071836, 0x0000d1f9, NE, B(0x1007182c); /* 0x1007183a + 0xfffffff2 */);
T(0x10071838, 0x0000e01e, AL, B(0x10071876); /* 0x1007183b + 0x03c*/);

T(0x1007183a, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x1007183c, 0x0000d01c, EQ, B(0x10071878); /* 0x10071840 + 0x038 */);
T(0x1007183e, 0x000068a0, AL, LDR(r0, r4, 0x008));
T(0x10071840, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10071842, 0x0000d00a, EQ, B(0x1007185a); /* 0x10071846 + 0x014 */);
T(0x10071844, 0x0000a905, AL, ADD(r1, SP, 0x014)));
T(0x10071846, 0xf7fffe0d, AL, BL(0x10071464); /* 0x1007184b + 0x00000c1a, LR = 0x1007184a */);
T(0x1007184a, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1007184c, 0x0000d114, NE, B(0x10071878); /* 0x10071850 + 0x028 */);
T(0x1007184e, 0x00009808, AL, LDR(r0, SP, 0x0020);
T(0x10071850, 0x00009909, AL, LDR(r1, SP, 0x0024);
T(0x10071852, 0xf0e9e9b8, AL, BLX(0x1015abc4); /* 0x10071857 + 0x00000370, LR = 0x10071856 */);
T(0x10071856, 0x00001c05, AL, SUBS(r5, r0, 0x0);
T(0x10071858, 0x00001c0e, AL, SUBS(r6, r1, 0x0);
T(0x1007185a, 0x00007820, AL, LDRB(r0, r4));
T(0x1007185c, 0x0000a901, AL, ADD(r1, SP, 0x004)));
T(0x1007185e, 0xf000f9f0, AL, BL(0x10071c42); /* 0x10071863 + 0x000003e0, LR = 0x10071862 */);
T(0x10071862, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10071864, 0x0000d108, NE, B(0x10071878); /* 0x10071868 + 0x010 */);
T(0x10071866, 0x00009802, AL, LDR(r0, SP, 0x0008);
T(0x10071868, 0x00009904, AL, LDR(r1, SP, 0x0010);
T(0x1007186a, 0xf0e9e9ac, AL, BLX(0x1015abc4); /* 0x1007186f + 0x00000358, LR = 0x1007186e */);
T(0x1007186e, 0x00001c0b, AL, SUBS(r3, r1, 0x0);
T(0x10071870, 0x00001c31, AL, SUBS(r1, r6, 0x0);
T(0x10071872, 0x0000182d, AL, SUBS(r5, r5, r0);
T(0x10071874, 0x00004159, AL, ADC(r1, r3));
T(0x10071876, 0x00001c0e, AL, SUBS(r6, r1, 0x0);
T(0x10071878, 0x00001c28, AL, SUBS(r0, r5, 0x0);
T(0x1007187a, 0x00001c31, AL, SUBS(r1, r6, 0x0);
T(0x1007187c, 0x0000b00a, AL, ADD(SP, 0x028));
T(0x1007187e, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x10071464, 0x00004b9d, AL, LDR(r3, PC, 0x0274); /* [0x100716dc]:0x105f7538 */);
T(0x10071466, 0x0000b410, AL, PUSH(rSP, r{....4...}););
T(0x10071468, 0x0000685a, AL, LDR(r2, r3, 0x004); /* [0x105f753c] */);
T(0x1007146a, 0x00004290, AL, CMP(r0, r2));
T(0x1007146c, 0x0000d30c, CC, B(0x10071488); /* 0x10071470 + 0x018 */);
T(0x1007146e, 0x0000681c, AL, LDR(r4, r3); /* [0x105f7538] */);
T(0x10071470, 0x00002379, AL, MOVS(r3, 0x79));
T(0x10071472, 0x0000011b, AL, LSL(r3, r3, 0x04));
T(0x10071474, 0x00004363, AL, MUL(r3, r4));
T(0x10071476, 0x0000189a, AL, SUBS(r2, r3, r2);
T(0x10071478, 0x00002379, AL, MOVS(r3, 0x79));
T(0x1007147a, 0x0000011b, AL, LSL(r3, r3, 0x04));
T(0x1007147c, 0x00001ad2, AL, ADDS(r2, r2, r3);
T(0x1007147e, 0x00004282, AL, CMP(r2, r0));
T(0x10071480, 0x0000d302, CC, B(0x10071488); /* 0x10071484 + 0x004 */);
T(0x10071482, 0x00007802, AL, LDRB(r2, r0));
T(0x10071484, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x10071486, 0x0000d102, NE, B(0x1007148e); /* 0x1007148a + 0x004 */);

T(0x10071488, 0x00002003, AL, MOVS(r0, 0x03));
T(0x1007148a, 0x0000bc10, AL, POP(rSP, r{....4...}););
T(0x1007148c, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1007148e, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x10071490, 0x00007852, AL, LDRB(r2, r2, 0x001));
T(0x10071492, 0x0000700a, AL, STRB(r2, r1); /* [0x00000000] */);
T(0x10071494, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x10071496, 0x000068d3, AL, LDR(r3, r2, 0x00c));
T(0x10071498, 0x00006912, AL, LDR(r2, r2, 0x010));
T(0x1007149a, 0x0000608a, AL, STR(r2, r1, 0x008); /* [0x00000008] */);
T(0x1007149c, 0x0000604b, AL, STR(r3, r1, 0x004); /* [0x00000004] */);
T(0x1007149e, 0x00006882, AL, LDR(r2, r0, 0x008); /* [0x00000008] */);
T(0x100714a0, 0x00006852, AL, LDR(r2, r2, 0x004));
T(0x100714a2, 0x000060ca, AL, STR(r2, r1, 0x00c); /* [0x0000000c] */);
T(0x100714a4, 0x00006880, AL, LDR(r0, r0, 0x008));
T(0x100714a6, 0x00006880, AL, LDR(r0, r0, 0x008));
T(0x100714a8, 0x00006108, AL, STR(r0, r1, 0x010); /* [0x00000010] */);
T(0x100714aa, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100714ac, 0x0000e7ed, AL, B(0x10071488); /* 0x100714af + 0xffffffda*/);

T(0x1007185a, 0x00007820, AL, LDRB(r0, r4); /* [0x00000000] */);
T(0x1007185c, 0x0000a901, AL, ADD(r1, SP, 0x004)));
T(0x1007185e, 0xf000f9f0, AL, BL(0x10071c42); /* 0x10071863 + 0x000003e0, LR = 0x10071862 */);
T(0x10071862, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10071864, 0x0000d108, NE, B(0x10071878); /* 0x10071868 + 0x010 */);
T(0x10071866, 0x00009802, AL, LDR(r0, SP, 0x0008);
T(0x10071868, 0x00009904, AL, LDR(r1, SP, 0x0010);
T(0x1007186a, 0xf0e9e9ac, AL, BLX(0x1015abc4); /* 0x1007186f + 0x00000358, LR = 0x1007186e */);
T(0x1007186e, 0x00001c0b, AL, SUBS(r3, r1, 0x0);
T(0x10071870, 0x00001c31, AL, SUBS(r1, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10071872, 0x0000182d, AL, SUBS(r5, r5, r0);
T(0x10071874, 0x00004159, AL, ADC(r1, r3));
T(0x10071876, 0x00001c0e, AL, SUBS(r6, r1, 0x0);
T(0x10071878, 0x00001c28, AL, SUBS(r0, r5, 0x0);
T(0x1007187a, 0x00001c31, AL, SUBS(r1, r6, 0x0);
T(0x1007187c, 0x0000b00a, AL, ADD(SP, 0x028));
T(0x1007187e, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x10071876, 0x00001c0e, AL, SUBS(r6, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10071878, 0x00001c28, AL, SUBS(r0, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007187a, 0x00001c31, AL, SUBS(r1, r6, 0x0);
T(0x1007187c, 0x0000b00a, AL, ADD(SP, 0x028));
T(0x1007187e, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x10071878, 0x00001c28, AL, SUBS(r0, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007187a, 0x00001c31, AL, SUBS(r1, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007187c, 0x0000b00a, AL, ADD(SP, 0x028));
T(0x1007187e, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x10071c42, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10071c44, 0x00001c0c, AL, SUBS(r4, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10071c46, 0x00004980, AL, LDR(r1, PC, 0x0200); /* [0x10071e48]:0x105f7558 */);
T(0x10071c48, 0x00007809, AL, LDRB(r1, r1));
T(0x10071c4a, 0x00004288, AL, CMP(r0, r1));
T(0x10071c4c, 0x0000d301, CC, B(0x10071c52); /* 0x10071c50 + 0x002 */);
T(0x10071c4e, 0x0000200e, AL, MOVS(r0, 0x0e));
T(0x10071c50, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x10071c52, 0xf7ffffeb, AL, BL(0x10071c2c); /* 0x10071c57 + 0x00000fd6, LR = 0x10071c56 */);
T(0x10071c56, 0x00007801, AL, LDRB(r1, r0); /* [0x00000000] */);
T(0x10071c58, 0x00007021, AL, STRB(r1, r4); /* [0x00000000] */);
T(0x10071c5a, 0x00007801, AL, LDRB(r1, r0); /* [0x00000000] */);
T(0x10071c5c, 0x00002900, AL, CMPS(r1, 0x00));
T(0x10071c5e, 0x0000d101, NE, B(0x10071c64); /* 0x10071c62 + 0x002 */);
T(0x10071c60, 0x00002007, AL, MOVS(r0, 0x07));
T(0x10071c62, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x10071c2c, 0x00004986, AL, LDR(r1, PC, 0x0218); /* [0x10071e48]:0x105f7558 */);
T(0x10071c2e, 0x0000780a, AL, LDRB(r2, r1); /* [0x105f7558] */);
T(0x10071c30, 0x00004290, AL, CMP(r0, r2));
T(0x10071c32, 0x0000d301, CC, B(0x10071c38); /* 0x10071c36 + 0x002 */);
T(0x10071c34, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10071c36, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10071c38, 0x00002334, AL, MOVS(r3, 0x34));
T(0x10071c3a, 0x00004358, AL, MUL(r0, r3));
T(0x10071c3c, 0x00006849, AL, LDR(r1, r1, 0x004));
T(0x10071c3e, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x10071c40, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10071c64, 0x00007881, AL, LDRB(r1, r0, 0x002); /* [0x00000002] */);
T(0x10071c66, 0x00004a79, AL, LDR(r2, PC, 0x01e4); /* [0x10071e4c]:0x105f7248 */);
T(0x10071c68, 0x00007061, AL, STRB(r1, r4, 0x001); /* [0x00000001] */);
T(0x10071c6a, 0x000078c1, AL, LDRB(r1, r0, 0x003); /* [0x00000003] */);
T(0x10071c6c, 0x0000004b, AL, LSL(r3, r1, 0x01));
T(0x10071c6e, 0x00001859, AL, SUBS(r1, r3, r1);
T(0x10071c70, 0x000000c9, AL, LSL(r1, r1, 0x03));
T(0x10071c72, 0x00001889, AL, SUBS(r1, r1, r2);
T(0x10071c74, 0x0000694a, AL, LDR(r2, r1, 0x014));
T(0x10071c76, 0x00001c21, AL, SUBS(r1, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10071c78, 0x00004790, AL, BLX(r2));
T(0x10071c7a, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x1007e78c, 0x0000485c, AL, LDR(r0, PC, 0x0170); /* [0x1007e900]:0x7fffffff */);
T(0x1007e78e, 0x0000e7fc, AL, B(0x1007e788); /* 0x1007e791 + 0xfffffff8*/);

T(0x1007e788, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1007e78a, 0x0000bd38, AL, POP(rSP, r{...345.., PC}););

T(0x100848e6, 0x00000300, AL, LSL(r0, r0, 0x0c));
T(0x100848e8, 0x00006020, AL, STR(r0, r4); /* [0x00000000] */);
T(0x100848ea, 0x0000e002, AL, B(0x100848f0); /* 0x100848ed + 0x004*/);

T(0x100848ec, 0x00000300, AL, LSL(r0, r0, 0x0c));
T(0x100848ee, 0x00001808, AL, SUBS(r0, r1, r0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100848f0, 0x00006020, AL, STR(r0, r4); /* [0x00000000] */);
T(0x100848f2, 0x00009501, AL, STR(r5, SP, 0x0004);
T(0x100848f4, 0x0000e01b, AL, B(0x1008492c); /* 0x100848f7 + 0x036*/);

T(0x100848f0, 0x00006020, AL, STR(r0, r4); /* [0x00000000] */);
T(0x100848f2, 0x00009501, AL, STR(r5, SP, 0x0004);
T(0x100848f4, 0x0000e01b, AL, B(0x1008492c); /* 0x100848f7 + 0x036*/);

T(0x100848f4, 0x0000e01b, AL, B(0x1008492c); /* 0x100848f7 + 0x036*/);

T(0x100848f6, 0x00004670, AL, MOV(r0, LR));
T(0x100848f8, 0x00007a00, AL, LDRB(r0, r0, 0x008));
T(0x100848fa, 0x00002805, AL, CMPS(r0, 0x05));
T(0x100848fc, 0x0000d001, EQ, B(0x10084902); /* 0x10084900 + 0x002 */);
T(0x100848fe, 0x00002806, AL, CMPS(r0, 0x06));
T(0x10084900, 0x0000d103, NE, B(0x1008490a); /* 0x10084904 + 0x006 */);

T(0x10084902, 0x000018b8, AL, SUBS(r0, r7, r2); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084904, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x10084906, 0x00001841, AL, SUBS(r1, r0, r1);
T(0x10084908, 0x0000e00c, AL, B(0x10084922); /* 0x1008490b + 0x018*/);

T(0x1008490a, 0x00002803, AL, CMPS(r0, 0x03));
T(0x1008490c, 0x0000d104, NE, B(0x10084918); /* 0x10084910 + 0x008 */);
T(0x1008490e, 0x000018b8, AL, SUBS(r0, r7, r2); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084910, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x10084912, 0x00000280, AL, LSL(r0, r0, 0x0a));
T(0x10084914, 0x00001841, AL, SUBS(r1, r0, r1);
T(0x10084916, 0x0000e005, AL, B(0x10084922); /* 0x10084919 + 0x00a*/);

T(0x10084918, 0x00002804, AL, CMPS(r0, 0x04));
T(0x1008491a, 0x0000d003, EQ, B(0x10084924); /* 0x1008491e + 0x006 */);
T(0x1008491c, 0x000018b8, AL, SUBS(r0, r7, r2); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1008491e, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x10084920, 0x00000300, AL, LSL(r0, r0, 0x0c));
T(0x10084922, 0x00001841, AL, SUBS(r1, r0, r1);
T(0x10084924, 0x00003601, AL, ADDS(r6, 0x01));
T(0x10084926, 0x000000f0, AL, LSL(r0, r6, 0x03));
T(0x10084928, 0x00005c10, AL, LDRB(r0, r2, r0));
T(0x1008492a, 0x000028ff, AL, CMPS(r0, 0xff));
T(0x1008492c, 0x0000d196, NE, B(0x1008485c); /* 0x10084930 + 0xffffff2c */);
T(0x1008492e, 0x00003501, AL, ADDS(r5, 0x01));
T(0x10084930, 0x00002d07, AL, CMPS(r5, 0x07));
T(0x10084932, 0x0000da03, GE, B(0x1008493c); /* 0x10084936 + 0x006 */);
T(0x10084934, 0x00009801, AL, LDR(r0, SP, 0x0004);
T(0x10084936, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084938, 0x0000d100, NE, B(0x1008493c); /* 0x1008493c + 0x000 */);
T(0x1008493a, 0x0000e77e, AL, B(0x10084838); /* 0x1008493d + 0xfffffefc*/);

T(0x10084838, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x1008483a, 0x00000068, AL, LSL(r0, r5, 0x01));
T(0x1008483c, 0x00001940, AL, SUBS(r0, r0, r5);
T(0x1008483e, 0x00004f88, AL, LDR(r7, PC, 0x0220); /* [0x10084a60]:0x102c7878 */);
T(0x10084840, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10084842, 0x0000583a, AL, LDR(r2, r7, r0));
T(0x10084844, 0x00002600, AL, MOVS(r6, 0x00));
T(0x10084846, 0x00007813, AL, LDRB(r3, r2));
T(0x10084848, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1008484a, 0x00002bff, AL, CMPS(r3, 0xff));
T(0x1008484c, 0x0000d052, EQ, B(0x100848f4); /* 0x10084850 + 0x0a4 */);
T(0x1008484e, 0x00004b83, AL, LDR(r3, PC, 0x020c); /* [0x10084a5c]:0x1085d1cc */);
T(0x10084850, 0x00004686, AL, MOV(LR, r0));
T(0x10084852, 0x00003be0, AL, SUBS(r3, 0xe0));
T(0x10084854, 0x00000168, AL, LSL(r0, r5, 0x05));
T(0x10084856, 0x00004684, AL, MOV(r12, r0));
T(0x10084858, 0x0000449c, AL, ADD(r12, r3));
T(0x1008485a, 0x000044be, AL, ADD(LR, r7));
T(0x1008485c, 0x000000f7, AL, LSL(r7, r6, 0x03));
T(0x1008485e, 0x00005dd0, AL, LDRB(r0, r2, r7));
T(0x10084860, 0x00009b02, AL, LDR(r3, SP, 0x0008);
T(0x10084862, 0x00004298, AL, CMP(r0, r3));
T(0x10084864, 0x0000d147, NE, B(0x100848f6); /* 0x10084868 + 0x08e */);
T(0x10084866, 0x00004660, AL, MOV(r0, r12));
T(0x10084868, 0x00006940, AL, LDR(r0, r0, 0x014));
T(0x1008486a, 0x00006800, AL, LDR(r0, r0));
T(0x1008486c, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x1008486e, 0x0000d042, EQ, B(0x100848f6); /* 0x10084872 + 0x084 */);
T(0x10084870, 0x00009803, AL, LDR(r0, SP, 0x000c);
T(0x10084872, 0x00006001, AL, STR(r1, r0));
T(0x10084874, 0x000000f0, AL, LSL(r0, r6, 0x03));
T(0x10084876, 0x00001880, AL, SUBS(r0, r0, r2);
T(0x10084878, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x1008487a, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1008487c, 0x0000d114, NE, B(0x100848a8); /* 0x10084880 + 0x028 */);
T(0x1008487e, 0x00004672, AL, MOV(r2, LR));
T(0x10084880, 0x00007a12, AL, LDRB(r2, r2, 0x008));
T(0x10084882, 0x00002a04, AL, CMPS(r2, 0x04));
T(0x10084884, 0x0000d010, EQ, B(0x100848a8); /* 0x10084888 + 0x020 */);
T(0x10084886, 0x00004660, AL, MOV(r0, r12));
T(0x10084888, 0x00006940, AL, LDR(r0, r0, 0x014));
T(0x1008488a, 0x00006802, AL, LDR(r2, r0));
T(0x1008488c, 0x00001c53, AL, SUBS(r3, r2, 0x1);
T(0x1008488e, 0x0000d101, NE, B(0x10084894); /* 0x10084892 + 0x002 */);
T(0x10084890, 0x00006021, AL, STR(r1, r4); /* [0x00000000] */);
T(0x10084892, 0x0000e02e, AL, B(0x100848f0); /* 0x10084895 + 0x05c*/);

T(0x1008485c, 0x000000f7, AL, LSL(r7, r6, 0x03));
T(0x1008485e, 0x00005dd0, AL, LDRB(r0, r2, r7));
T(0x10084860, 0x00009b02, AL, LDR(r3, SP, 0x0008);
T(0x10084862, 0x00004298, AL, CMP(r0, r3));
T(0x10084864, 0x0000d147, NE, B(0x100848f6); /* 0x10084868 + 0x08e */);
T(0x10084866, 0x00004660, AL, MOV(r0, r12));
T(0x10084868, 0x00006940, AL, LDR(r0, r0, 0x014));
T(0x1008486a, 0x00006800, AL, LDR(r0, r0));
T(0x1008486c, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x1008486e, 0x0000d042, EQ, B(0x100848f6); /* 0x10084872 + 0x084 */);
T(0x10084870, 0x00009803, AL, LDR(r0, SP, 0x000c);
T(0x10084872, 0x00006001, AL, STR(r1, r0));
T(0x10084874, 0x000000f0, AL, LSL(r0, r6, 0x03));
T(0x10084876, 0x00001880, AL, SUBS(r0, r0, r2);
T(0x10084878, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x1008487a, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1008487c, 0x0000d114, NE, B(0x100848a8); /* 0x10084880 + 0x028 */);
T(0x1008487e, 0x00004672, AL, MOV(r2, LR));
T(0x10084880, 0x00007a12, AL, LDRB(r2, r2, 0x008));
T(0x10084882, 0x00002a04, AL, CMPS(r2, 0x04));
T(0x10084884, 0x0000d010, EQ, B(0x100848a8); /* 0x10084888 + 0x020 */);
T(0x10084886, 0x00004660, AL, MOV(r0, r12));
T(0x10084888, 0x00006940, AL, LDR(r0, r0, 0x014));
T(0x1008488a, 0x00006802, AL, LDR(r2, r0));
T(0x1008488c, 0x00001c53, AL, SUBS(r3, r2, 0x1);
T(0x1008488e, 0x0000d101, NE, B(0x10084894); /* 0x10084892 + 0x002 */);
T(0x10084890, 0x00006021, AL, STR(r1, r4); /* [0x00000000] */);
T(0x10084892, 0x0000e02e, AL, B(0x100848f0); /* 0x10084895 + 0x05c*/);

T(0x10084922, 0x00001841, AL, SUBS(r1, r0, r1); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084924, 0x00003601, AL, ADDS(r6, 0x01));
T(0x10084926, 0x000000f0, AL, LSL(r0, r6, 0x03));
T(0x10084928, 0x00005c10, AL, LDRB(r0, r2, r0));
T(0x1008492a, 0x000028ff, AL, CMPS(r0, 0xff));
T(0x1008492c, 0x0000d196, NE, B(0x1008485c); /* 0x10084930 + 0xffffff2c */);
T(0x1008492e, 0x00003501, AL, ADDS(r5, 0x01));
T(0x10084930, 0x00002d07, AL, CMPS(r5, 0x07));
T(0x10084932, 0x0000da03, GE, B(0x1008493c); /* 0x10084936 + 0x006 */);
T(0x10084934, 0x00009801, AL, LDR(r0, SP, 0x0004);
T(0x10084936, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084938, 0x0000d100, NE, B(0x1008493c); /* 0x1008493c + 0x000 */);
T(0x1008493a, 0x0000e77e, AL, B(0x10084838); /* 0x1008493d + 0xfffffefc*/);

T(0x10084924, 0x00003601, AL, ADDS(r6, 0x01));
T(0x10084926, 0x000000f0, AL, LSL(r0, r6, 0x03));
T(0x10084928, 0x00005c10, AL, LDRB(r0, r2, r0));
T(0x1008492a, 0x000028ff, AL, CMPS(r0, 0xff));
T(0x1008492c, 0x0000d196, NE, B(0x1008485c); /* 0x10084930 + 0xffffff2c */);
T(0x1008492e, 0x00003501, AL, ADDS(r5, 0x01));
T(0x10084930, 0x00002d07, AL, CMPS(r5, 0x07));
T(0x10084932, 0x0000da03, GE, B(0x1008493c); /* 0x10084936 + 0x006 */);
T(0x10084934, 0x00009801, AL, LDR(r0, SP, 0x0004);
T(0x10084936, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084938, 0x0000d100, NE, B(0x1008493c); /* 0x1008493c + 0x000 */);
T(0x1008493a, 0x0000e77e, AL, B(0x10084838); /* 0x1008493d + 0xfffffefc*/);

T(0x1008492c, 0x0000d196, NE, B(0x1008485c); /* 0x10084930 + 0xffffff2c */);
T(0x1008492e, 0x00003501, AL, ADDS(r5, 0x01));
T(0x10084930, 0x00002d07, AL, CMPS(r5, 0x07));
T(0x10084932, 0x0000da03, GE, B(0x1008493c); /* 0x10084936 + 0x006 */);
T(0x10084934, 0x00009801, AL, LDR(r0, SP, 0x0004);
T(0x10084936, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084938, 0x0000d100, NE, B(0x1008493c); /* 0x1008493c + 0x000 */);
T(0x1008493a, 0x0000e77e, AL, B(0x10084838); /* 0x1008493d + 0xfffffefc*/);

T(0x1008493c, 0x00009801, AL, LDR(r0, SP, 0x0004);
T(0x1008493e, 0x0000b005, AL, ADD(SP, 0x014));
T(0x10084940, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x10084d30, 0x0000b5f0, AL, PUSH(rSP, r{....4567, LR}););
T(0x10084d32, 0x0000b087, AL, SUB(SP, 0x01c));
T(0x10084d34, 0xf7fbff60, AL, BL(0x10080bf8); /* 0x10084d39 + 0x00000ec0, LR = 0x10084d38 */);
T(0x10084d38, 0xf0e0fbcc, AL, BL(0x101654d4); /* 0x10084d3d + 0x00000798, LR = 0x10084d3c */);
T(0x10084d3c, 0xf05cf867, AL, BL(0x100e0e0e); /* 0x10084d41 + 0x000000ce, LR = 0x10084d40 */);
T(0x10084d40, 0xf053f866, AL, BL(0x100d7e10); /* 0x10084d45 + 0x000000cc, LR = 0x10084d44 */);
T(0x10084d44, 0xf001faea, AL, BL(0x1008631c); /* 0x10084d49 + 0x000005d4, LR = 0x10084d48 */);
T(0x10084d48, 0xf7f9ff00, AL, BL(0x1007eb4c); /* 0x10084d4d + 0x00000e00, LR = 0x10084d4c */);
T(0x10084d4c, 0x000048b7, AL, LDR(r0, PC, 0x02dc); /* [0x1008502c]:0x102c7ae4 */);
T(0x10084d4e, 0x000049b8, AL, LDR(r1, PC, 0x02e0); /* [0x10085030]:0x102c79a4 */);
T(0x10084d50, 0x00008800, AL, LDRH(r0, r0));
T(0x10084d52, 0x00002600, AL, MOVS(r6, 0x00));
T(0x10084d54, 0x00001e47, AL, ADDS(r7, r0, 0x1);
T(0x10084d56, 0x00000083, AL, LSL(r3, r0, 0x02));
T(0x10084d58, 0x00001818, AL, SUBS(r0, r3, r0);
T(0x10084d5a, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10084d5c, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x10084d5e, 0x00003814, AL, SUBS(r0, 0x14));
T(0x10084d60, 0x00009006, AL, STR(r0, SP, 0x0018);
T(0x10084d62, 0x00000071, AL, LSL(r1, r6, 0x01));
T(0x10084d64, 0x00001989, AL, SUBS(r1, r1, r6);
T(0x10084d66, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x10084d68, 0x00004aad, AL, LDR(r2, PC, 0x02b4); /* [0x10085020]:0x102c7878 */);
T(0x10084d6a, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10084d6c, 0x0000188b, AL, SUBS(r3, r1, r2);
T(0x10084d6e, 0x00009304, AL, STR(r3, SP, 0x0010);
T(0x10084d70, 0x00009000, AL, STR(r0, SP, 0x0000);
T(0x10084d72, 0x00009105, AL, STR(r1, SP, 0x0014);
T(0x10084d74, 0x00007a58, AL, LDRB(r0, r3, 0x009));
T(0x10084d76, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084d78, 0x0000d105, NE, B(0x10084d86); /* 0x10084d7c + 0x00a */);
T(0x10084d7a, 0x00004dae, AL, LDR(r5, PC, 0x02b8); /* [0x10085034]:0x1085d0ec */);
T(0x10084d7c, 0x00002002, AL, MOVS(r0, 0x02));
T(0x10084d7e, 0x00000171, AL, LSL(r1, r6, 0x05));
T(0x10084d80, 0x00001949, AL, SUBS(r1, r1, r5);
T(0x10084d82, 0x00007608, AL, STRB(r0, r1, 0x018));
T(0x10084d84, 0x0000e006, AL, B(0x10084d92); /* 0x10084d87 + 0x00c*/);

T(0x1007eb4c, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x1007eb4e, 0xf000ff93, AL, BL(0x1007fa78); /* 0x1007eb53 + 0x00000f26, LR = 0x1007eb52 */);
T(0x1007eb52, 0x00004c16, AL, LDR(r4, PC, 0x0058); /* [0x1007ebac]:0x10859404 */);
T(0x1007eb54, 0x00002118, AL, MOVS(r1, 0x18));
T(0x1007eb56, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x10859404 - 0x00000000 = 0x10859404 */ XXX);
T(0x1007eb58, 0xf0dcec82, AL, BLX(0x1015b460); /* 0x1007eb5d + 0x00000904, LR = 0x1007eb5c */);
T(0x1007eb5c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007eb5e, 0x00004915, AL, LDR(r1, PC, 0x0054); /* [0x1007ebb4]:0x102c778c */);
T(0x1007eb60, 0x00002200, AL, MOVS(r2, 0x00));
T(0x1007eb62, 0x00000103, AL, LSL(r3, r0, 0x04));
T(0x1007eb64, 0x0000185e, AL, SUBS(r6, r3, r1);
T(0x1007eb66, 0x000068b3, AL, LDR(r3, r6, 0x008));
T(0x1007eb68, 0x00002500, AL, MOVS(r5, 0x00));
T(0x1007eb6a, 0x0000701a, AL, STRB(r2, r3));
T(0x1007eb6c, 0x00007873, AL, LDRB(r3, r6, 0x001));
T(0x1007eb6e, 0x00002b00, AL, CMPS(r3, 0x00));
T(0x1007eb70, 0x0000d90b, LS, B(0x1007eb8a); /* 0x1007eb74 + 0x016 */);
T(0x1007eb72, 0x00006873, AL, LDR(r3, r6, 0x004));
T(0x1007eb74, 0x000000af, AL, LSL(r7, r5, 0x02));
T(0x1007eb76, 0x00005ddf, AL, LDRB(r7, r3, r7));
T(0x1007eb78, 0x00003501, AL, ADDS(r5, 0x01));
T(0x1007eb7a, 0x0000007b, AL, LSL(r3, r7, 0x01));
T(0x1007eb7c, 0x000019db, AL, SUBS(r3, r3, r7);
T(0x1007eb7e, 0x0000009b, AL, LSL(r3, r3, 0x02));
T(0x1007eb80, 0x0000191b, AL, SUBS(r3, r3, r4);
T(0x1007eb82, 0x00007058, AL, STRB(r0, r3, 0x001));
T(0x1007eb84, 0x00007873, AL, LDRB(r3, r6, 0x001));
T(0x1007eb86, 0x000042ab, AL, CMP(r3, r5));
T(0x1007eb88, 0x0000d8f3, HI, B(0x1007eb72); /* 0x1007eb8c + 0xffffffe6 */);

T(0x1007eb8a, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1007eb8c, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x1007eb8e, 0x00000e00, AL, LSR(r0, r0, 0x18));
T(0x1007eb90, 0x00002802, AL, CMPS(r0, 0x02));
T(0x1007eb92, 0x0000d3e6, CC, B(0x1007eb62); /* 0x1007eb96 + 0xffffffcc */);
T(0x1007eb94, 0x00004c09, AL, LDR(r4, PC, 0x0024); /* [0x1007ebbc]:0x102c7758 */);
T(0x1007eb96, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x102c7758 - 0x00000000 = 0x102c7758 */ XXX);
T(0x1007eb98, 0xf0e8f98a, AL, BL(0x10166eb0); /* 0x1007eb9d + 0x00000314, LR = 0x1007eb9c */);
T(0x1007eb9c, 0x00004908, AL, LDR(r1, PC, 0x0020); /* [0x1007ebc0]:0x106542e8 */);
T(0x1007eb9e, 0x00006008, AL, STR(r0, r1); /* [0x106542e8] */);
T(0x1007eba0, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x102c7758 - 0x00000000 = 0x102c7758 */ XXX);
T(0x1007eba2, 0xf039f935, AL, BL(0x100b7e10); /* 0x1007eba7 + 0x0000026a, LR = 0x1007eba6 */);
T(0x1007eba6, 0xf7f1ff37, AL, BL(0x10070a18); /* 0x1007ebab + 0x00000e6e, LR = 0x1007ebaa */);
T(0x1007ebaa, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10070a18, 0x0000b500, AL, PUSH(rSP, r{........, LR}););
T(0x10070a1a, 0x0000b087, AL, SUB(SP, 0x01c));
T(0x10070a1c, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x10070a1e, 0x00002002, AL, MOVS(r0, 0x02));
T(0x10070a20, 0x00007518, AL, STRB(r0, r3, 0x014));
T(0x10070a22, 0x0000480a, AL, LDR(r0, PC, 0x0028); /* [0x10070a4c]:0x105f7278 */);
T(0x10070a24, 0x00004909, AL, LDR(r1, PC, 0x0024); /* [0x10070a4c]:0x105f7278 */);
T(0x10070a26, 0x00009006, AL, STR(r0, SP, 0x0018);
T(0x10070a28, 0x00002006, AL, MOVS(r0, 0x06));
T(0x10070a2a, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x10070a2c, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x10070a2e, 0x00004808, AL, LDR(r0, PC, 0x0020); /* [0x10070a50]:0x105f7430 */);
T(0x10070a30, 0x00003168, AL, ADDS(r1, 0x68));
T(0x10070a32, 0x00009104, AL, STR(r1, SP, 0x0010);
T(0x10070a34, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x10070a36, 0x0000a801, AL, ADD(r0, SP, 0x004)));
T(0x10070a38, 0x0000a903, AL, ADD(r1, SP, 0x00c)));
T(0x10070a3a, 0x0000aa05, AL, ADD(r2, SP, 0x014)));
T(0x10070a3c, 0xf000fe8d, AL, BL(0x1007175a); /* 0x10070a41 + 0x00000d1a, LR = 0x10070a40 */);
T(0x10070a40, 0xf7fdf836, AL, BL(0x1006dab0); /* 0x10070a45 + 0x0000006c, LR = 0x10070a44 */);
T(0x10070a44, 0xf001f8d8, AL, BL(0x10071bf8); /* 0x10070a49 + 0x000001b0, LR = 0x10070a48 */);
T(0x10070a48, 0x0000b007, AL, ADD(SP, 0x01c));
T(0x10070a4a, 0x0000bd00, AL, POP(rSP, r{........, PC}););

T(0x1006dab0, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x1006dab2, 0x000049ef, AL, LDR(r1, PC, 0x03bc); /* [0x1006de70]:0x102c70ec */);
T(0x1006dab4, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1006dab6, 0xf002ff7c, AL, BL(0x100709b2); /* 0x1006dabb + 0x00000ef8, LR = 0x1006daba */);
T(0x1006daba, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x100709b2, 0x0000b470, AL, PUSH(rSP, r{....456.}););
T(0x100709b4, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100709b6, 0x0000d302, CC, B(0x100709be); /* 0x100709ba + 0x004 */);
T(0x100709b8, 0x0000200f, AL, MOVS(r0, 0x0f));
T(0x100709ba, 0x0000bc70, AL, POP(rSP, r{....456.}););
T(0x100709bc, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100709be, 0x00000043, AL, LSL(r3, r0, 0x01));
T(0x100709c0, 0x00001818, AL, SUBS(r0, r3, r0);
T(0x100709c2, 0x00004c13, AL, LDR(r4, PC, 0x004c); /* [0x10070a10]:0x105f7248 */);
T(0x100709c4, 0x000000c0, AL, LSL(r0, r0, 0x03));
T(0x100709c6, 0x00005c22, AL, LDRB(r2, r4, r0));
T(0x100709c8, 0x000007d2, AL, LSL(r2, r2, 0x1f));
T(0x100709ca, 0x0000d405, MI, B(0x100709d8); /* 0x100709ce + 0x00a */);
T(0x100709cc, 0x0000688a, AL, LDR(r2, r1, 0x008); /* [0x00000008] */);
T(0x100709ce, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x100709d0, 0x0000d002, EQ, B(0x100709d8); /* 0x100709d4 + 0x004 */);
T(0x100709d2, 0x0000694a, AL, LDR(r2, r1, 0x014); /* [0x00000014] */);
T(0x100709d4, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x100709d6, 0x0000d101, NE, B(0x100709dc); /* 0x100709da + 0x002 */);

T(0x100709d8, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100709da, 0x0000e7ee, AL, B(0x100709b8); /* 0x100709dd + 0xffffffdc*/);

T(0x100709dc, 0x00001905, AL, SUBS(r5, r0, r4); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100709de, 0x00001c0e, AL, SUBS(r6, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100709e0, 0x0000ce0e, AL, LDMIA(r6.WB, {.123....}));
T(0x100709e2, 0x0000c50e, AL, STMIA(r5.WB, {.123....}));
T(0x100709e4, 0x0000ce0e, AL, LDMIA(r6.WB, {.123....}));
T(0x100709e6, 0x0000c50e, AL, STMIA(r5.WB, {.123....}));
T(0x100709e8, 0x00005c21, AL, LDRB(r1, r4, r0));
T(0x100709ea, 0x00002201, AL, MOVS(r2, 0x01));
T(0x100709ec, 0x00004311, AL, ORR(r1, r2));
T(0x100709ee, 0x00005421, AL, STRB(r1, r4, r0));
T(0x100709f0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100709f2, 0x0000e7e2, AL, B(0x100709b8); /* 0x100709f5 + 0xffffffc4*/);

T(0x1007175a, 0x0000b5f7, AL, PUSH(rSP, r{012.4567, LR}););
T(0x1007175c, 0x00006801, AL, LDR(r1, r0); /* [0x00000000] */);
T(0x1007175e, 0x00004e11, AL, LDR(r6, PC, 0x0044); /* [0x100717a4]:0x105f7538 */);
T(0x10071760, 0x00002400, AL, MOVS(r4, 0x00));
T(0x10071762, 0x00006031, AL, STR(r1, r6); /* [0x105f7538] */);
T(0x10071764, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x10071766, 0x00002900, AL, CMPS(r1, 0x00));
T(0x10071768, 0x00006070, AL, STR(r0, r6, 0x004); /* [0x105f753c] */);
T(0x1007176a, 0x0000d910, LS, B(0x1007178e); /* 0x1007176e + 0x020 */);
T(0x1007176c, 0x00002700, AL, MOVS(r7, 0x00));
T(0x1007176e, 0x0000252c, AL, MOVS(r5, 0x2c));
T(0x10071770, 0x00004365, AL, MUL(r5, r4));
T(0x10071772, 0x00006870, AL, LDR(r0, r6, 0x004); /* [0x105f753c] */);
T(0x10071774, 0x00005547, AL, STRB(r7, r0, r5));
T(0x10071776, 0x00001828, AL, SUBS(r0, r5, r0);
T(0x10071778, 0x00003018, AL, ADDS(r0, 0x18));
T(0x1007177a, 0xf0f6f86b, AL, BL(0x10167854); /* 0x1007177f + 0x000000d6, LR = 0x1007177e */);
T(0x1007177e, 0x00006871, AL, LDR(r1, r6, 0x004); /* [0x105f753c] */);
T(0x10071780, 0x0000a009, AL, ADD(r0, PC, 0x024); /* 0x100717a8 */));
T(0x10071782, 0x00001869, AL, SUBS(r1, r5, r1);
T(0x10071784, 0x00006288, AL, STR(r0, r1, 0x028));
T(0x10071786, 0x00006830, AL, LDR(r0, r6); /* [0x105f7538] */);
T(0x10071788, 0x00003401, AL, ADDS(r4, 0x01));
T(0x1007178a, 0x00004284, AL, CMP(r4, r0));
T(0x1007178c, 0x0000d3ef, CC, B(0x1007176e); /* 0x10071790 + 0xffffffde */);

T(0x1007178e, 0xf7fff8fd, AL, BL(0x1007098c); /* 0x10071793 + 0x000001fa, LR = 0x10071792 */);
T(0x10071792, 0x00009801, AL, LDR(r0, SP, 0x0004);
T(0x10071794, 0xf7fff8bf, AL, BL(0x10070916); /* 0x10071799 + 0x0000017e, LR = 0x10071798 */);
T(0x10071798, 0x00009802, AL, LDR(r0, SP, 0x0008);
T(0x1007179a, 0xf000fb20, AL, BL(0x10071dde); /* 0x1007179f + 0x00000640, LR = 0x1007179e */);
T(0x1007179e, 0x0000b003, AL, ADD(SP, 0x00c));
T(0x100717a0, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x10070916, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x10070918, 0x00006801, AL, LDR(r1, r0); /* [0x00000000] */);
T(0x1007091a, 0x00004e0d, AL, LDR(r6, PC, 0x0034); /* [0x10070950]:0x105f7240 */);
T(0x1007091c, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1007091e, 0x00006031, AL, STR(r1, r6); /* [0x105f7240] */);
T(0x10070920, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x10070922, 0x00002900, AL, CMPS(r1, 0x00));
T(0x10070924, 0x00006070, AL, STR(r0, r6, 0x004); /* [0x105f7244] */);
T(0x10070926, 0x0000d911, LS, B(0x1007094c); /* 0x1007092a + 0x022 */);
T(0x10070928, 0x00002700, AL, MOVS(r7, 0x00));
T(0x1007092a, 0x000000e5, AL, LSL(r5, r4, 0x03));
T(0x1007092c, 0x00001b2d, AL, ADDS(r5, r5, r4);
T(0x1007092e, 0x00006870, AL, LDR(r0, r6, 0x004); /* [0x105f7244] */);
T(0x10070930, 0x000000ed, AL, LSL(r5, r5, 0x03));
T(0x10070932, 0x00005547, AL, STRB(r7, r0, r5));
T(0x10070934, 0x00001828, AL, SUBS(r0, r5, r0);
T(0x10070936, 0x00003024, AL, ADDS(r0, 0x24));
T(0x10070938, 0xf0f6ff8c, AL, BL(0x10167854); /* 0x1007093d + 0x00000f18, LR = 0x1007093c */);
T(0x1007093c, 0x00006871, AL, LDR(r1, r6, 0x004); /* [0x105f7244] */);
T(0x1007093e, 0x0000a005, AL, ADD(r0, PC, 0x014); /* 0x10070956 */));
T(0x10070940, 0x00001869, AL, SUBS(r1, r5, r1);
T(0x10070942, 0x00006348, AL, STR(r0, r1, 0x034));
T(0x10070944, 0x00006830, AL, LDR(r0, r6); /* [0x105f7240] */);
T(0x10070946, 0x00003401, AL, ADDS(r4, 0x01));
T(0x10070948, 0x00004284, AL, CMP(r4, r0));
T(0x1007094a, 0x0000d3ee, CC, B(0x1007092a); /* 0x1007094e + 0xffffffdc */);

T(0x1007094c, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x1007098c, 0x00004a20, AL, LDR(r2, PC, 0x0080); /* [0x10070a10]:0x105f7248 */);
T(0x1007098e, 0x00004821, AL, LDR(r0, PC, 0x0084); /* [0x10070a14]:0x1007096d */);
T(0x10070990, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10070992, 0x00006090, AL, STR(r0, r2, 0x008); /* [0x105f7250] */);
T(0x10070994, 0x00006051, AL, STR(r1, r2, 0x004); /* [0x105f724c] */);
T(0x10070996, 0x00006111, AL, STR(r1, r2, 0x010); /* [0x105f7258] */);
T(0x10070998, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1007099a, 0x00007010, AL, STRB(r0, r2); /* [0x105f7248] */);
T(0x1007099c, 0x00000043, AL, LSL(r3, r0, 0x01));
T(0x1007099e, 0x0000181b, AL, SUBS(r3, r3, r0);
T(0x100709a0, 0x000000db, AL, LSL(r3, r3, 0x03));
T(0x100709a2, 0x000054d1, AL, STRB(r1, r2, r3));
T(0x100709a4, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x100709a6, 0x00006059, AL, STR(r1, r3, 0x004));
T(0x100709a8, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100709aa, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100709ac, 0x00006099, AL, STR(r1, r3, 0x008));
T(0x100709ae, 0x0000d3f5, CC, B(0x1007099c); /* 0x100709b2 + 0xffffffea */);
T(0x100709b0, 0x00004770, AL, BX(LR); /* 0x105f7248 */);

T(0x10071bf8, 0x00004905, AL, LDR(r1, PC, 0x0014); /* [0x10071c10]:0x105f7540 */);
T(0x10071bfa, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10071bfc, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10071bfe, 0x00006008, AL, STR(r0, r1); /* [0x105f7540] */);
T(0x10071c00, 0x00001d0c, AL, SUBS(r4, r1, 0x4); /* 0x105f7540 - 0x00000004 = 0x105f753c */ XXX);
T(0x10071c02, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10071c04, 0xf0f5fe26, AL, BL(0x10167854); /* 0x10071c09 + 0x00000c4c, LR = 0x10071c08 */);
T(0x10071c08, 0x0000a004, AL, ADD(r0, PC, 0x010); /* 0x10071c1c */));
T(0x10071c0a, 0x00006120, AL, STR(r0, r4, 0x010));
T(0x10071c0c, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x10071dde, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x10071de0, 0x00007801, AL, LDRB(r1, r0); /* [0x00000000] */);
T(0x10071de2, 0x00004e19, AL, LDR(r6, PC, 0x0064); /* [0x10071e48]:0x105f7558 */);
T(0x10071de4, 0x00002400, AL, MOVS(r4, 0x00));
T(0x10071de6, 0x00007031, AL, STRB(r1, r6); /* [0x105f7558] */);
T(0x10071de8, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x10071dea, 0x00002900, AL, CMPS(r1, 0x00));
T(0x10071dec, 0x00006070, AL, STR(r0, r6, 0x004); /* [0x105f755c] */);
T(0x10071dee, 0x0000d910, LS, B(0x10071e12); /* 0x10071df2 + 0x020 */);
T(0x10071df0, 0x00002700, AL, MOVS(r7, 0x00));
T(0x10071df2, 0x00002534, AL, MOVS(r5, 0x34));
T(0x10071df4, 0x00004365, AL, MUL(r5, r4));
T(0x10071df6, 0x00006870, AL, LDR(r0, r6, 0x004); /* [0x105f755c] */);
T(0x10071df8, 0x00005547, AL, STRB(r7, r0, r5));
T(0x10071dfa, 0x00001828, AL, SUBS(r0, r5, r0);
T(0x10071dfc, 0x00003020, AL, ADDS(r0, 0x20));
T(0x10071dfe, 0xf0f5fd29, AL, BL(0x10167854); /* 0x10071e03 + 0x00000a52, LR = 0x10071e02 */);
T(0x10071e02, 0x00006871, AL, LDR(r1, r6, 0x004); /* [0x105f755c] */);
T(0x10071e04, 0x0000a012, AL, ADD(r0, PC, 0x048); /* 0x10071e50 */));
T(0x10071e06, 0x00001869, AL, SUBS(r1, r5, r1);
T(0x10071e08, 0x00006308, AL, STR(r0, r1, 0x030));
T(0x10071e0a, 0x00007830, AL, LDRB(r0, r6); /* [0x105f7558] */);
T(0x10071e0c, 0x00003401, AL, ADDS(r4, 0x01));
T(0x10071e0e, 0x00004284, AL, CMP(r4, r0));
T(0x10071e10, 0x0000d3ef, CC, B(0x10071df2); /* 0x10071e14 + 0xffffffde */);

T(0x10071e12, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x1007eb62, 0x00000103, AL, LSL(r3, r0, 0x04));
T(0x1007eb64, 0x0000185e, AL, SUBS(r6, r3, r1);
T(0x1007eb66, 0x000068b3, AL, LDR(r3, r6, 0x008));
T(0x1007eb68, 0x00002500, AL, MOVS(r5, 0x00));
T(0x1007eb6a, 0x0000701a, AL, STRB(r2, r3));
T(0x1007eb6c, 0x00007873, AL, LDRB(r3, r6, 0x001));
T(0x1007eb6e, 0x00002b00, AL, CMPS(r3, 0x00));
T(0x1007eb70, 0x0000d90b, LS, B(0x1007eb8a); /* 0x1007eb74 + 0x016 */);
T(0x1007eb72, 0x00006873, AL, LDR(r3, r6, 0x004));
T(0x1007eb74, 0x000000af, AL, LSL(r7, r5, 0x02));
T(0x1007eb76, 0x00005ddf, AL, LDRB(r7, r3, r7));
T(0x1007eb78, 0x00003501, AL, ADDS(r5, 0x01));
T(0x1007eb7a, 0x0000007b, AL, LSL(r3, r7, 0x01));
T(0x1007eb7c, 0x000019db, AL, SUBS(r3, r3, r7);
T(0x1007eb7e, 0x0000009b, AL, LSL(r3, r3, 0x02));
T(0x1007eb80, 0x0000191b, AL, SUBS(r3, r3, r4);
T(0x1007eb82, 0x00007058, AL, STRB(r0, r3, 0x001));
T(0x1007eb84, 0x00007873, AL, LDRB(r3, r6, 0x001));
T(0x1007eb86, 0x000042ab, AL, CMP(r3, r5));
T(0x1007eb88, 0x0000d8f3, HI, B(0x1007eb72); /* 0x1007eb8c + 0xffffffe6 */);
T(0x1007eb8a, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1007eb8c, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x1007eb8e, 0x00000e00, AL, LSR(r0, r0, 0x18));
T(0x1007eb90, 0x00002802, AL, CMPS(r0, 0x02));
T(0x1007eb92, 0x0000d3e6, CC, B(0x1007eb62); /* 0x1007eb96 + 0xffffffcc */);
T(0x1007eb94, 0x00004c09, AL, LDR(r4, PC, 0x0024); /* [0x1007ebbc]:0x102c7758 */);
T(0x1007eb96, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x102c7758 - 0x00000000 = 0x102c7758 */ XXX);
T(0x1007eb98, 0xf0e8f98a, AL, BL(0x10166eb0); /* 0x1007eb9d + 0x00000314, LR = 0x1007eb9c */);
T(0x1007eb9c, 0x00004908, AL, LDR(r1, PC, 0x0020); /* [0x1007ebc0]:0x106542e8 */);
T(0x1007eb9e, 0x00006008, AL, STR(r0, r1); /* [0x106542e8] */);
T(0x1007eba0, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x102c7758 - 0x00000000 = 0x102c7758 */ XXX);
T(0x1007eba2, 0xf039f935, AL, BL(0x100b7e10); /* 0x1007eba7 + 0x0000026a, LR = 0x1007eba6 */);
T(0x1007eba6, 0xf7f1ff37, AL, BL(0x10070a18); /* 0x1007ebab + 0x00000e6e, LR = 0x1007ebaa */);
T(0x1007ebaa, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x1007fa78, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x1007fa7a, 0xf7fffc11, AL, BL(0x1007f2a0); /* 0x1007fa7f + 0x00000822, LR = 0x1007fa7e */);
T(0x1007fa7e, 0x0000482a, AL, LDR(r0, PC, 0x00a8); /* [0x1007fb28]:0x1085932c */);
T(0x1007fa80, 0x00004d29, AL, LDR(r5, PC, 0x00a4); /* [0x1007fb28]:0x1085932c */);
T(0x1007fa82, 0x00002400, AL, MOVS(r4, 0x00));
T(0x1007fa84, 0x00007004, AL, STRB(r4, r0); /* [0x1085932c] */);
T(0x1007fa86, 0x00003508, AL, ADDS(r5, 0x08));
T(0x1007fa88, 0x00001d2e, AL, SUBS(r6, r5, 0x4);
T(0x1007fa8a, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007fa8c, 0x00004b25, AL, LDR(r3, PC, 0x0094); /* [0x1007fb24]:0x102c778c */);
T(0x1007fa8e, 0x00001eb7, AL, ADDS(r7, r6, 0x2);
T(0x1007fa90, 0x00000102, AL, LSL(r2, r0, 0x04));
T(0x1007fa92, 0x00005c9a, AL, LDRB(r2, r3, r2));
T(0x1007fa94, 0x00001c21, AL, SUBS(r1, r4, 0x0);
T(0x1007fa96, 0x000007d2, AL, LSL(r2, r2, 0x1f));
T(0x1007fa98, 0x0000d400, MI, B(0x1007fa9c); /* 0x1007fa9c + 0x000 */);
T(0x1007fa9a, 0x00002102, AL, MOVS(r1, 0x02));
T(0x1007fa9c, 0x00005439, AL, STRB(r1, r7, r0));
T(0x1007fa9e, 0x00005431, AL, STRB(r1, r6, r0));
T(0x1007faa0, 0x0000542c, AL, STRB(r4, r5, r0));
T(0x1007faa2, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1007faa4, 0x00002802, AL, CMPS(r0, 0x02));
T(0x1007faa6, 0x0000d3f3, CC, B(0x1007fa90); /* 0x1007faaa + 0xffffffe6 */);
T(0x1007faa8, 0x0000491f, AL, LDR(r1, PC, 0x007c); /* [0x1007fb28]:0x1085932c */);
T(0x1007faaa, 0x00002009, AL, MOVS(r0, 0x09));
T(0x1007faac, 0x000031f0, AL, ADDS(r1, 0xf0));
T(0x1007faae, 0x00008008, AL, STRH(r0, r1));
T(0x1007fab0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007fab2, 0x000043c0, AL, MVN(r0, r0));
T(0x1007fab4, 0x00004d1c, AL, LDR(r5, PC, 0x0070); /* [0x1007fb28]:0x1085932c */);
T(0x1007fab6, 0x00006048, AL, STR(r0, r1, 0x004));
T(0x1007fab8, 0x0000481c, AL, LDR(r0, PC, 0x0070); /* [0x1007fb2c]:0x1007eda3 */);
T(0x1007faba, 0x00003518, AL, ADDS(r5, 0x18));
T(0x1007fabc, 0x00003554, AL, ADDS(r5, 0x54));
T(0x1007fabe, 0x00004e1c, AL, LDR(r6, PC, 0x0070); /* [0x1007fb30]:0x1007f01b */);
T(0x1007fac0, 0x00004f1c, AL, LDR(r7, PC, 0x0070); /* [0x1007fb34]:0x1007ecb9 */);
T(0x1007fac2, 0x0000c5c1, AL, STMIA(r5.WB, {0.....67}));
T(0x1007fac4, 0x0000481c, AL, LDR(r0, PC, 0x0070); /* [0x1007fb38]:0x10086347 */);
T(0x1007fac6, 0x00003d60, AL, SUBS(r5, 0x60));
T(0x1007fac8, 0x00006088, AL, STR(r0, r1, 0x008));
T(0x1007faca, 0x0000481c, AL, LDR(r0, PC, 0x0070); /* [0x1007fb3c]:0x100864c1 */);
T(0x1007facc, 0x000060c8, AL, STR(r0, r1, 0x00c));
T(0x1007face, 0x0000610c, AL, STR(r4, r1, 0x010));
T(0x1007fad0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007fad2, 0xf7fffa9c, AL, BL(0x1007f00e); /* 0x1007fad7 + 0x00000538, LR = 0x1007fad6 */);
T(0x1007fad6, 0x0000481a, AL, LDR(r0, PC, 0x0068); /* [0x1007fb40]:0x1085d090 */);
T(0x1007fad8, 0x00007800, AL, LDRB(r0, r0));
T(0x1007fada, 0x00002801, AL, CMPS(r0, 0x01));
T(0x1007fadc, 0x0000d116, NE, B(0x1007fb0c); /* 0x1007fae0 + 0x02c */);
T(0x1007fade, 0x00004812, AL, LDR(r0, PC, 0x0048); /* [0x1007fb28]:0x1085932c */);
T(0x1007fae0, 0x00002109, AL, MOVS(r1, 0x09));
T(0x1007fae2, 0x000030f0, AL, ADDS(r0, 0xf0));
T(0x1007fae4, 0x00008281, AL, STRH(r1, r0, 0x014));
T(0x1007fae6, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1007fae8, 0x000043c9, AL, MVN(r1, r1));
T(0x1007faea, 0x00006181, AL, STR(r1, r0, 0x018));
T(0x1007faec, 0x00001c2a, AL, SUBS(r2, r5, 0x0);
T(0x1007faee, 0x00003280, AL, ADDS(r2, 0x80));
T(0x1007faf0, 0x0000490e, AL, LDR(r1, PC, 0x0038); /* [0x1007fb2c]:0x1007eda3 */);
T(0x1007faf2, 0x00003234, AL, ADDS(r2, 0x34));
T(0x1007faf4, 0x0000c2c2, AL, STMIA(r2.WB, {.1....67}));
T(0x1007faf6, 0x00004913, AL, LDR(r1, PC, 0x004c); /* [0x1007fb44]:0x100d80ef */);
T(0x1007faf8, 0x000061c1, AL, STR(r1, r0, 0x01c));
T(0x1007fafa, 0x00004913, AL, LDR(r1, PC, 0x004c); /* [0x1007fb48]:0x100d8165 */);
T(0x1007fafc, 0x00006201, AL, STR(r1, r0, 0x020));
T(0x1007fafe, 0x00004913, AL, LDR(r1, PC, 0x004c); /* [0x1007fb4c]:0x100d7db7 */);
T(0x1007fb00, 0x00006241, AL, STR(r1, r0, 0x024));
T(0x1007fb02, 0x00001c01, AL, SUBS(r1, r0, 0x0);
T(0x1007fb04, 0x00003114, AL, ADDS(r1, 0x14));
T(0x1007fb06, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1007fb08, 0xf7fffa81, AL, BL(0x1007f00e); /* 0x1007fb0d + 0x00000502, LR = 0x1007fb0c */);

T(0x1007f00e, 0x000028ff, AL, CMPS(r0, 0xff));
T(0x1007f010, 0x0000d002, EQ, B(0x1007f018); /* 0x1007f014 + 0x004 */);
T(0x1007f012, 0x00004aa0, AL, LDR(r2, PC, 0x0280); /* [0x1007f294]:0x10655310 */);
T(0x1007f014, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x1007f016, 0x00005011, AL, STR(r1, r2, r0));
T(0x1007f018, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1007f018, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1007f2a0, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x1007f2a2, 0x0000491f, AL, LDR(r1, PC, 0x007c); /* [0x1007f320]:0x10655318 */);
T(0x1007f2a4, 0x0000481e, AL, LDR(r0, PC, 0x0078); /* [0x1007f320]:0x10655318 */);
T(0x1007f2a6, 0x0000390c, AL, SUBS(r1, 0x0c));
T(0x1007f2a8, 0x00006008, AL, STR(r0, r1));
T(0x1007f2aa, 0x00001c01, AL, SUBS(r1, r0, 0x0); /* 0x10655318 - 0x00000000 = 0x10655318 */ XXX);
T(0x1007f2ac, 0x000023ff, AL, MOVS(r3, 0xff));
T(0x1007f2ae, 0x000033ff, AL, ADDS(r3, 0xff));
T(0x1007f2b0, 0x00003110, AL, ADDS(r1, 0x10));
T(0x1007f2b2, 0x00006001, AL, STR(r1, r0); /* [0x10655318] */);
T(0x1007f2b4, 0x0000011a, AL, LSL(r2, r3, 0x04));
T(0x1007f2b6, 0x00001889, AL, SUBS(r1, r1, r2);
T(0x1007f2b8, 0x00006041, AL, STR(r1, r0, 0x004); /* [0x1065531c] */);
T(0x1007f2ba, 0x00004d1a, AL, LDR(r5, PC, 0x0068); /* [0x1007f324]:0x00007fff */);
T(0x1007f2bc, 0x00002600, AL, MOVS(r6, 0x00));
T(0x1007f2be, 0x00008145, AL, STRH(r5, r0, 0x00a); /* [0x10655322] */);
T(0x1007f2c0, 0x00008185, AL, STRH(r5, r0, 0x00c); /* [0x10655324] */);
T(0x1007f2c2, 0x00008106, AL, STRH(r6, r0, 0x008); /* [0x10655320] */);
T(0x1007f2c4, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1007f2c6, 0x00001c4a, AL, SUBS(r2, r1, 0x1);
T(0x1007f2c8, 0x00006804, AL, LDR(r4, r0); /* [0x10655318] */);
T(0x1007f2ca, 0x00000109, AL, LSL(r1, r1, 0x04));
T(0x1007f2cc, 0x00001864, AL, SUBS(r4, r4, r1);
T(0x1007f2ce, 0x00008162, AL, STRH(r2, r4, 0x00a));
T(0x1007f2d0, 0x00006804, AL, LDR(r4, r0); /* [0x10655318] */);
T(0x1007f2d2, 0x00001864, AL, SUBS(r4, r4, r1);
T(0x1007f2d4, 0x000081a5, AL, STRH(r5, r4, 0x00c));
T(0x1007f2d6, 0x00006804, AL, LDR(r4, r0); /* [0x10655318] */);
T(0x1007f2d8, 0x00001864, AL, SUBS(r4, r4, r1);
T(0x1007f2da, 0x00008125, AL, STRH(r5, r4, 0x008));
T(0x1007f2dc, 0x00006804, AL, LDR(r4, r0); /* [0x10655318] */);
T(0x1007f2de, 0x00001861, AL, SUBS(r1, r4, r1);
T(0x1007f2e0, 0x0000738e, AL, STRB(r6, r1, 0x00e));
T(0x1007f2e2, 0x00001c11, AL, SUBS(r1, r2, 0x0);
T(0x1007f2e4, 0x0000429a, AL, CMP(r2, r3));
T(0x1007f2e6, 0x0000dbee, LT, B(0x1007f2c6); /* 0x1007f2ea + 0xffffffdc */);
T(0x1007f2e8, 0x00006800, AL, LDR(r0, r0));
T(0x1007f2ea, 0x00000119, AL, LSL(r1, r3, 0x04));
T(0x1007f2ec, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x1007f2ee, 0x00001c2a, AL, SUBS(r2, r5, 0x0); /* 0x00007fff - 0x00000000 = 0x00007fff */ XXX);
T(0x1007f2f0, 0x00003820, AL, SUBS(r0, 0x20));
T(0x1007f2f2, 0x00008345, AL, STRH(r5, r0, 0x01a));
T(0x1007f2f4, 0x00004d0c, AL, LDR(r5, PC, 0x0030); /* [0x1007f328]:0x10855318 */);
T(0x1007f2f6, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1007f2f8, 0x00002401, AL, MOVS(r4, 0x01));
T(0x1007f2fa, 0x00000324, AL, LSL(r4, r4, 0x0c));
T(0x1007f2fc, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007f2fe, 0x0000034b, AL, LSL(r3, r1, 0x0d));
T(0x1007f300, 0x0000195b, AL, SUBS(r3, r3, r5);
T(0x1007f302, 0x00000046, AL, LSL(r6, r0, 0x01));
T(0x1007f304, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1007f306, 0x000042a0, AL, CMP(r0, r4));
T(0x1007f308, 0x0000539a, AL, STRH(r2, r3, r6));
T(0x1007f30a, 0x0000dbfa, LT, B(0x1007f302); /* 0x1007f30e + 0xfffffff4 */);
T(0x1007f30c, 0x00003101, AL, ADDS(r1, 0x01));
T(0x1007f30e, 0x00002902, AL, CMPS(r1, 0x02));
T(0x1007f310, 0x0000dbf4, LT, B(0x1007f2fc); /* 0x1007f314 + 0xffffffe8 */);
T(0x1007f312, 0x00004c06, AL, LDR(r4, PC, 0x0018); /* [0x1007f32c]:0x10859318 */);
T(0x1007f314, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x10859318 - 0x00000000 = 0x10859318 */ XXX);
T(0x1007f316, 0xf0e8fa9d, AL, BL(0x10167854); /* 0x1007f31b + 0x0000053a, LR = 0x1007f31a */);
T(0x1007f31a, 0x0000a005, AL, ADD(r0, PC, 0x014); /* 0x1007f332 */));
T(0x1007f31c, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x10859328] */);
T(0x1007f31e, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x1007fa9c, 0x00005439, AL, STRB(r1, r7, r0));
T(0x1007fa9e, 0x00005431, AL, STRB(r1, r6, r0));
T(0x1007faa0, 0x0000542c, AL, STRB(r4, r5, r0));
T(0x1007faa2, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1007faa4, 0x00002802, AL, CMPS(r0, 0x02));
T(0x1007faa6, 0x0000d3f3, CC, B(0x1007fa90); /* 0x1007faaa + 0xffffffe6 */);
T(0x1007faa8, 0x0000491f, AL, LDR(r1, PC, 0x007c); /* [0x1007fb28]:0x1085932c */);
T(0x1007faaa, 0x00002009, AL, MOVS(r0, 0x09));
T(0x1007faac, 0x000031f0, AL, ADDS(r1, 0xf0));
T(0x1007faae, 0x00008008, AL, STRH(r0, r1));
T(0x1007fab0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007fab2, 0x000043c0, AL, MVN(r0, r0));
T(0x1007fab4, 0x00004d1c, AL, LDR(r5, PC, 0x0070); /* [0x1007fb28]:0x1085932c */);
T(0x1007fab6, 0x00006048, AL, STR(r0, r1, 0x004));
T(0x1007fab8, 0x0000481c, AL, LDR(r0, PC, 0x0070); /* [0x1007fb2c]:0x1007eda3 */);
T(0x1007faba, 0x00003518, AL, ADDS(r5, 0x18));
T(0x1007fabc, 0x00003554, AL, ADDS(r5, 0x54));
T(0x1007fabe, 0x00004e1c, AL, LDR(r6, PC, 0x0070); /* [0x1007fb30]:0x1007f01b */);
T(0x1007fac0, 0x00004f1c, AL, LDR(r7, PC, 0x0070); /* [0x1007fb34]:0x1007ecb9 */);
T(0x1007fac2, 0x0000c5c1, AL, STMIA(r5.WB, {0.....67}));
T(0x1007fac4, 0x0000481c, AL, LDR(r0, PC, 0x0070); /* [0x1007fb38]:0x10086347 */);
T(0x1007fac6, 0x00003d60, AL, SUBS(r5, 0x60));
T(0x1007fac8, 0x00006088, AL, STR(r0, r1, 0x008));
T(0x1007faca, 0x0000481c, AL, LDR(r0, PC, 0x0070); /* [0x1007fb3c]:0x100864c1 */);
T(0x1007facc, 0x000060c8, AL, STR(r0, r1, 0x00c));
T(0x1007face, 0x0000610c, AL, STR(r4, r1, 0x010));
T(0x1007fad0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1007fad2, 0xf7fffa9c, AL, BL(0x1007f00e); /* 0x1007fad7 + 0x00000538, LR = 0x1007fad6 */);
T(0x1007fad6, 0x0000481a, AL, LDR(r0, PC, 0x0068); /* [0x1007fb40]:0x1085d090 */);
T(0x1007fad8, 0x00007800, AL, LDRB(r0, r0));
T(0x1007fada, 0x00002801, AL, CMPS(r0, 0x01));
T(0x1007fadc, 0x0000d116, NE, B(0x1007fb0c); /* 0x1007fae0 + 0x02c */);
T(0x1007fade, 0x00004812, AL, LDR(r0, PC, 0x0048); /* [0x1007fb28]:0x1085932c */);
T(0x1007fae0, 0x00002109, AL, MOVS(r1, 0x09));
T(0x1007fae2, 0x000030f0, AL, ADDS(r0, 0xf0));
T(0x1007fae4, 0x00008281, AL, STRH(r1, r0, 0x014));
T(0x1007fae6, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1007fae8, 0x000043c9, AL, MVN(r1, r1));
T(0x1007faea, 0x00006181, AL, STR(r1, r0, 0x018));
T(0x1007faec, 0x00001c2a, AL, SUBS(r2, r5, 0x0);
T(0x1007faee, 0x00003280, AL, ADDS(r2, 0x80));
T(0x1007faf0, 0x0000490e, AL, LDR(r1, PC, 0x0038); /* [0x1007fb2c]:0x1007eda3 */);
T(0x1007faf2, 0x00003234, AL, ADDS(r2, 0x34));
T(0x1007faf4, 0x0000c2c2, AL, STMIA(r2.WB, {.1....67}));
T(0x1007faf6, 0x00004913, AL, LDR(r1, PC, 0x004c); /* [0x1007fb44]:0x100d80ef */);
T(0x1007faf8, 0x000061c1, AL, STR(r1, r0, 0x01c));
T(0x1007fafa, 0x00004913, AL, LDR(r1, PC, 0x004c); /* [0x1007fb48]:0x100d8165 */);
T(0x1007fafc, 0x00006201, AL, STR(r1, r0, 0x020));
T(0x1007fafe, 0x00004913, AL, LDR(r1, PC, 0x004c); /* [0x1007fb4c]:0x100d7db7 */);
T(0x1007fb00, 0x00006241, AL, STR(r1, r0, 0x024));
T(0x1007fb02, 0x00001c01, AL, SUBS(r1, r0, 0x0);
T(0x1007fb04, 0x00003114, AL, ADDS(r1, 0x14));
T(0x1007fb06, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1007fb08, 0xf7fffa81, AL, BL(0x1007f00e); /* 0x1007fb0d + 0x00000502, LR = 0x1007fb0c */);

T(0x1007fb0c, 0x00004806, AL, LDR(r0, PC, 0x0018); /* [0x1007fb28]:0x1085932c */);
T(0x1007fb0e, 0x00002106, AL, MOVS(r1, 0x06));
T(0x1007fb10, 0x00007084, AL, STRB(r4, r0, 0x002); /* [0x1085932e] */);
T(0x1007fb12, 0x00007044, AL, STRB(r4, r0, 0x001); /* [0x1085932d] */);
T(0x1007fb14, 0x000070c1, AL, STRB(r1, r0, 0x003); /* [0x1085932f] */);
T(0x1007fb16, 0x00007104, AL, STRB(r4, r0, 0x004); /* [0x10859330] */);
T(0x1007fb18, 0x00007144, AL, STRB(r4, r0, 0x005); /* [0x10859331] */);
T(0x1007fb1a, 0x00002101, AL, MOVS(r1, 0x01));
T(0x1007fb1c, 0x00007181, AL, STRB(r1, r0, 0x006); /* [0x10859332] */);
T(0x1007fb1e, 0x000071c4, AL, STRB(r4, r0, 0x007); /* [0x10859333] */);
T(0x1007fb20, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10080bf8, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10080bfa, 0x00004c03, AL, LDR(r4, PC, 0x000c); /* [0x10080c08]:0x1085acac */);
T(0x10080bfc, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x1085acac - 0x00000000 = 0x1085acac */ XXX);
T(0x10080bfe, 0xf0e6fe29, AL, BL(0x10167854); /* 0x10080c03 + 0x00000c52, LR = 0x10080c02 */);
T(0x10080c02, 0x0000a003, AL, ADD(r0, PC, 0x00c); /* 0x10080c12 */));
T(0x10080c04, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x1085acbc] */);
T(0x10080c06, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x10084d86, 0x00002801, AL, CMPS(r0, 0x01));
T(0x10084d88, 0x0000d104, NE, B(0x10084d94); /* 0x10084d8c + 0x008 */);
T(0x10084d8a, 0x00004daa, AL, LDR(r5, PC, 0x02a8); /* [0x10085034]:0x1085d0ec */);
T(0x10084d8c, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10084d8e, 0x00000170, AL, LSL(r0, r6, 0x05));
T(0x10084d90, 0x00001940, AL, SUBS(r0, r0, r5);
T(0x10084d92, 0x00007601, AL, STRB(r1, r0, 0x018));
T(0x10084d94, 0x00009b04, AL, LDR(r3, SP, 0x0010);
T(0x10084d96, 0x00007a18, AL, LDRB(r0, r3, 0x008));
T(0x10084d98, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084d9a, 0x0000d105, NE, B(0x10084da8); /* 0x10084d9e + 0x00a */);
T(0x10084d9c, 0x00009b04, AL, LDR(r3, SP, 0x0010);
T(0x10084d9e, 0x000049a6, AL, LDR(r1, PC, 0x0298); /* [0x10085038]:0x10d0f134 */);
T(0x10084da0, 0x00006858, AL, LDR(r0, r3, 0x004));
T(0x10084da2, 0x00006809, AL, LDR(r1, r1));
T(0x10084da4, 0x00004788, AL, BLX(r1));
T(0x10084da6, 0x0000e01a, AL, B(0x10084ddc); /* 0x10084da9 + 0x034*/);

T(0x10084d92, 0x00007601, AL, STRB(r1, r0, 0x018); /* [0x00000018] */);
T(0x10084d94, 0x00009b04, AL, LDR(r3, SP, 0x0010);
T(0x10084d96, 0x00007a18, AL, LDRB(r0, r3, 0x008));
T(0x10084d98, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084d9a, 0x0000d105, NE, B(0x10084da8); /* 0x10084d9e + 0x00a */);
T(0x10084d9c, 0x00009b04, AL, LDR(r3, SP, 0x0010);
T(0x10084d9e, 0x000049a6, AL, LDR(r1, PC, 0x0298); /* [0x10085038]:0x10d0f134 */);
T(0x10084da0, 0x00006858, AL, LDR(r0, r3, 0x004));
T(0x10084da2, 0x00006809, AL, LDR(r1, r1));
T(0x10084da4, 0x00004788, AL, BLX(r1));
T(0x10084da6, 0x0000e01a, AL, B(0x10084ddc); /* 0x10084da9 + 0x034*/);

T(0x10084d94, 0x00009b04, AL, LDR(r3, SP, 0x0010);
T(0x10084d96, 0x00007a18, AL, LDRB(r0, r3, 0x008));
T(0x10084d98, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084d9a, 0x0000d105, NE, B(0x10084da8); /* 0x10084d9e + 0x00a */);
T(0x10084d9c, 0x00009b04, AL, LDR(r3, SP, 0x0010);
T(0x10084d9e, 0x000049a6, AL, LDR(r1, PC, 0x0298); /* [0x10085038]:0x10d0f134 */);
T(0x10084da0, 0x00006858, AL, LDR(r0, r3, 0x004));
T(0x10084da2, 0x00006809, AL, LDR(r1, r1));
T(0x10084da4, 0x00004788, AL, BLX(r1));
T(0x10084da6, 0x0000e01a, AL, B(0x10084ddc); /* 0x10084da9 + 0x034*/);

T(0x10084da8, 0x00002803, AL, CMPS(r0, 0x03));
T(0x10084daa, 0x0000d101, NE, B(0x10084db0); /* 0x10084dae + 0x002 */);
T(0x10084dac, 0x00003805, AL, SUBS(r0, 0x05));
T(0x10084dae, 0x0000e016, AL, B(0x10084ddc); /* 0x10084db1 + 0x02c*/);

T(0x10084db0, 0x00002806, AL, CMPS(r0, 0x06));
T(0x10084db2, 0x0000d102, NE, B(0x10084dba); /* 0x10084db6 + 0x004 */);
T(0x10084db4, 0x00002004, AL, MOVS(r0, 0x04));
T(0x10084db6, 0x000043c0, AL, MVN(r0, r0));
T(0x10084db8, 0x0000e011, AL, B(0x10084ddc); /* 0x10084dbb + 0x022*/);

T(0x10084dba, 0x00002805, AL, CMPS(r0, 0x05));
T(0x10084dbc, 0x0000d102, NE, B(0x10084dc4); /* 0x10084dc0 + 0x004 */);
T(0x10084dbe, 0x00002003, AL, MOVS(r0, 0x03));
T(0x10084dc0, 0x000043c0, AL, MVN(r0, r0));
T(0x10084dc2, 0x0000e00c, AL, B(0x10084ddc); /* 0x10084dc5 + 0x018*/);

T(0x10084dc4, 0x00002802, AL, CMPS(r0, 0x02));
T(0x10084dc6, 0x0000d104, NE, B(0x10084dd2); /* 0x10084dca + 0x008 */);
T(0x10084dc8, 0x00004669, AL, MOV(r1, SP));
T(0x10084dca, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084dcc, 0xf05afa33, AL, BL(0x100df236); /* 0x10084dd1 + 0x00000466, LR = 0x10084dd0 */);
T(0x10084dd0, 0x0000e005, AL, B(0x10084ddc); /* 0x10084dd3 + 0x00a*/);

T(0x10084dd2, 0x00002804, AL, CMPS(r0, 0x04));
T(0x10084dd4, 0x0000d101, NE, B(0x10084dda); /* 0x10084dd8 + 0x002 */);
T(0x10084dd6, 0x00003807, AL, SUBS(r0, 0x07));
T(0x10084dd8, 0x0000e001, AL, B(0x10084ddc); /* 0x10084ddb + 0x002*/);

T(0x10084dda, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10084ddc, 0x000043c0, AL, MVN(r0, r0));
T(0x10084dde, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10084de0, 0x00002f00, AL, CMPS(r7, 0x00));
T(0x10084de2, 0x0000dd09, LE, B(0x10084df8); /* 0x10084de6 + 0x012 */);
T(0x10084de4, 0x00004a92, AL, LDR(r2, PC, 0x0248); /* [0x10085030]:0x102c79a4 */);
T(0x10084de6, 0x0000008b, AL, LSL(r3, r1, 0x02));
T(0x10084de8, 0x0000185b, AL, SUBS(r3, r3, r1);
T(0x10084dea, 0x0000009b, AL, LSL(r3, r3, 0x02));
T(0x10084dec, 0x000058d3, AL, LDR(r3, r2, r3));
T(0x10084dee, 0x00004283, AL, CMP(r3, r0));
T(0x10084df0, 0x0000d002, EQ, B(0x10084df8); /* 0x10084df4 + 0x004 */);
T(0x10084df2, 0x00003101, AL, ADDS(r1, 0x01));
T(0x10084df4, 0x000042b9, AL, CMP(r1, r7));
T(0x10084df6, 0x0000dbf6, LT, B(0x10084de6); /* 0x10084dfa + 0xffffffec */);

T(0x10084ddc, 0x000043c0, AL, MVN(r0, r0));
T(0x10084dde, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10084de0, 0x00002f00, AL, CMPS(r7, 0x00));
T(0x10084de2, 0x0000dd09, LE, B(0x10084df8); /* 0x10084de6 + 0x012 */);
T(0x10084de4, 0x00004a92, AL, LDR(r2, PC, 0x0248); /* [0x10085030]:0x102c79a4 */);
T(0x10084de6, 0x0000008b, AL, LSL(r3, r1, 0x02));
T(0x10084de8, 0x0000185b, AL, SUBS(r3, r3, r1);
T(0x10084dea, 0x0000009b, AL, LSL(r3, r3, 0x02));
T(0x10084dec, 0x000058d3, AL, LDR(r3, r2, r3));
T(0x10084dee, 0x00004283, AL, CMP(r3, r0));
T(0x10084df0, 0x0000d002, EQ, B(0x10084df8); /* 0x10084df4 + 0x004 */);
T(0x10084df2, 0x00003101, AL, ADDS(r1, 0x01));
T(0x10084df4, 0x000042b9, AL, CMP(r1, r7));
T(0x10084df6, 0x0000dbf6, LT, B(0x10084de6); /* 0x10084dfa + 0xffffffec */);

T(0x10084df8, 0x0000428f, AL, CMP(r7, r1));
T(0x10084dfa, 0x0000d10e, NE, B(0x10084e1a); /* 0x10084dfe + 0x01c */);
T(0x10084dfc, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10084dfe, 0x00002f00, AL, CMPS(r7, 0x00));
T(0x10084e00, 0x0000dd0b, LE, B(0x10084e1a); /* 0x10084e04 + 0x016 */);
T(0x10084e02, 0x00000200, AL, LSL(r0, r0, 0x08));
T(0x10084e04, 0x00004a8a, AL, LDR(r2, PC, 0x0228); /* [0x10085030]:0x102c79a4 */);
T(0x10084e06, 0x00000a00, AL, LSR(r0, r0, 0x08));
T(0x10084e08, 0x0000008b, AL, LSL(r3, r1, 0x02));
T(0x10084e0a, 0x0000185b, AL, SUBS(r3, r3, r1);
T(0x10084e0c, 0x0000009b, AL, LSL(r3, r3, 0x02));
T(0x10084e0e, 0x000058d3, AL, LDR(r3, r2, r3));
T(0x10084e10, 0x00004298, AL, CMP(r0, r3));
T(0x10084e12, 0x0000d002, EQ, B(0x10084e1a); /* 0x10084e16 + 0x004 */);
T(0x10084e14, 0x00003101, AL, ADDS(r1, 0x01));
T(0x10084e16, 0x000042b9, AL, CMP(r1, r7));
T(0x10084e18, 0x0000dbf6, LT, B(0x10084e08); /* 0x10084e1c + 0xffffffec */);

T(0x10084e1a, 0x00000088, AL, LSL(r0, r1, 0x02));
T(0x10084e1c, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x10084e1e, 0x00004984, AL, LDR(r1, PC, 0x0210); /* [0x10085030]:0x102c79a4 */);
T(0x10084e20, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10084e22, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x10084e24, 0x00000171, AL, LSL(r1, r6, 0x05));
T(0x10084e26, 0x00004d83, AL, LDR(r5, PC, 0x020c); /* [0x10085034]:0x1085d0ec */);
T(0x10084e28, 0x00009103, AL, STR(r1, SP, 0x000c);
T(0x10084e2a, 0x0000194c, AL, SUBS(r4, r1, r5);
T(0x10084e2c, 0x00006160, AL, STR(r0, r4, 0x014));
T(0x10084e2e, 0x00009900, AL, LDR(r1, SP, 0x0000);
T(0x10084e30, 0x000061e1, AL, STR(r1, r4, 0x01c));
T(0x10084e32, 0x00009b04, AL, LDR(r3, SP, 0x0010);
T(0x10084e34, 0x00007a19, AL, LDRB(r1, r3, 0x008));
T(0x10084e36, 0x00002900, AL, CMPS(r1, 0x00));
T(0x10084e38, 0x0000d10f, NE, B(0x10084e5a); /* 0x10084e3c + 0x01e */);
T(0x10084e3a, 0x00006800, AL, LDR(r0, r0));
T(0x10084e3c, 0x00000e00, AL, LSR(r0, r0, 0x18));
T(0x10084e3e, 0x00002820, AL, CMPS(r0, 0x20));
T(0x10084e40, 0x0000d0ff, EQ, B(0x10084e42); /* 0x10084e44 + 0xfffffffe */);
T(0x10084e42, 0x0000487e, AL, LDR(r0, PC, 0x01f8); /* [0x1008503c]:0x10084cb9 */);
T(0x10084e44, 0x00009903, AL, LDR(r1, SP, 0x000c);
T(0x10084e46, 0x00005068, AL, STR(r0, r5, r1));
T(0x10084e48, 0x0000487d, AL, LDR(r0, PC, 0x01f4); /* [0x10085040]:0x10084cbd */);
T(0x10084e4a, 0x00006060, AL, STR(r0, r4, 0x004));
T(0x10084e4c, 0x0000487d, AL, LDR(r0, PC, 0x01f4); /* [0x10085044]:0x10084cc1 */);
T(0x10084e4e, 0x000060a0, AL, STR(r0, r4, 0x008));
T(0x10084e50, 0x0000487d, AL, LDR(r0, PC, 0x01f4); /* [0x10085048]:0x10084491 */);
T(0x10084e52, 0x000060e0, AL, STR(r0, r4, 0x00c));
T(0x10084e54, 0x0000487d, AL, LDR(r0, PC, 0x01f4); /* [0x1008504c]:0x10084493 */);
T(0x10084e56, 0x00006120, AL, STR(r0, r4, 0x010));
T(0x10084e58, 0x0000e048, AL, B(0x10084eea); /* 0x10084e5b + 0x090*/);

T(0x10084e5a, 0x00002903, AL, CMPS(r1, 0x03));
T(0x10084e5c, 0x0000d001, EQ, B(0x10084e62); /* 0x10084e60 + 0x002 */);
T(0x10084e5e, 0x00002905, AL, CMPS(r1, 0x05));
T(0x10084e60, 0x0000d10b, NE, B(0x10084e7a); /* 0x10084e64 + 0x016 */);

T(0x10084e62, 0x00004876, AL, LDR(r0, PC, 0x01d8); /* [0x1008503c]:0x10084cb9 */);
T(0x10084e64, 0x00009903, AL, LDR(r1, SP, 0x000c);
T(0x10084e66, 0x00005068, AL, STR(r0, r5, r1));
T(0x10084e68, 0x00004875, AL, LDR(r0, PC, 0x01d4); /* [0x10085040]:0x10084cbd */);
T(0x10084e6a, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x00000004] */);
T(0x10084e6c, 0x00004875, AL, LDR(r0, PC, 0x01d4); /* [0x10085044]:0x10084cc1 */);
T(0x10084e6e, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084e70, 0x00004875, AL, LDR(r0, PC, 0x01d4); /* [0x10085048]:0x10084491 */);
T(0x10084e72, 0x000060e0, AL, STR(r0, r4, 0x00c); /* [0x0000000c] */);
T(0x10084e74, 0x00004875, AL, LDR(r0, PC, 0x01d4); /* [0x1008504c]:0x10084493 */);
T(0x10084e76, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x00000010] */);
T(0x10084e78, 0x0000e038, AL, B(0x10084eea); /* 0x10084e7b + 0x070*/);

T(0x10084e7a, 0x00002902, AL, CMPS(r1, 0x02));
T(0x10084e7c, 0x0000d118, NE, B(0x10084eb0); /* 0x10084e80 + 0x030 */);
T(0x10084e7e, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084e80, 0xf05afb6b, AL, BL(0x100df55a); /* 0x10084e85 + 0x000006d6, LR = 0x10084e84 */);
T(0x10084e84, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084e86, 0x0000d004, EQ, B(0x10084e92); /* 0x10084e8a + 0x008 */);
T(0x10084e88, 0x00002801, AL, CMPS(r0, 0x01));
T(0x10084e8a, 0x0000d105, NE, B(0x10084e98); /* 0x10084e8e + 0x00a */);
T(0x10084e8c, 0x00004870, AL, LDR(r0, PC, 0x01c0); /* [0x10085050]:0x100e0959 */);
T(0x10084e8e, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084e90, 0x0000e004, AL, B(0x10084e9a); /* 0x10084e93 + 0x008*/);

T(0x10084e92, 0x00004870, AL, LDR(r0, PC, 0x01c0); /* [0x10085054]:0x100e079b */);
T(0x10084e94, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084e96, 0x0000e001, AL, B(0x10084e9a); /* 0x10084e99 + 0x002*/);

T(0x10084e98, 0x0000486a, AL, LDR(r0, PC, 0x01a8); /* [0x10085044]:0x10084cc1 */);
T(0x10084e9a, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084e9c, 0x00004867, AL, LDR(r0, PC, 0x019c); /* [0x1008503c]:0x10084cb9 */);
T(0x10084e9e, 0x00009903, AL, LDR(r1, SP, 0x000c);
T(0x10084ea0, 0x00005068, AL, STR(r0, r5, r1));
T(0x10084ea2, 0x00004867, AL, LDR(r0, PC, 0x019c); /* [0x10085040]:0x10084cbd */);
T(0x10084ea4, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x00000004] */);
T(0x10084ea6, 0x00004868, AL, LDR(r0, PC, 0x01a0); /* [0x10085048]:0x10084491 */);
T(0x10084ea8, 0x000060e0, AL, STR(r0, r4, 0x00c); /* [0x0000000c] */);
T(0x10084eaa, 0x00004868, AL, LDR(r0, PC, 0x01a0); /* [0x1008504c]:0x10084493 */);
T(0x10084eac, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x00000010] */);
T(0x10084eae, 0x0000e01d, AL, B(0x10084eea); /* 0x10084eb1 + 0x03a*/);

T(0x10084e9a, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084e9c, 0x00004867, AL, LDR(r0, PC, 0x019c); /* [0x1008503c]:0x10084cb9 */);
T(0x10084e9e, 0x00009903, AL, LDR(r1, SP, 0x000c);
T(0x10084ea0, 0x00005068, AL, STR(r0, r5, r1));
T(0x10084ea2, 0x00004867, AL, LDR(r0, PC, 0x019c); /* [0x10085040]:0x10084cbd */);
T(0x10084ea4, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x00000004] */);
T(0x10084ea6, 0x00004868, AL, LDR(r0, PC, 0x01a0); /* [0x10085048]:0x10084491 */);
T(0x10084ea8, 0x000060e0, AL, STR(r0, r4, 0x00c); /* [0x0000000c] */);
T(0x10084eaa, 0x00004868, AL, LDR(r0, PC, 0x01a0); /* [0x1008504c]:0x10084493 */);
T(0x10084eac, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x00000010] */);
T(0x10084eae, 0x0000e01d, AL, B(0x10084eea); /* 0x10084eb1 + 0x03a*/);

T(0x10084eb0, 0x00002904, AL, CMPS(r1, 0x04));
T(0x10084eb2, 0x0000d10b, NE, B(0x10084ecc); /* 0x10084eb6 + 0x016 */);
T(0x10084eb4, 0x00004861, AL, LDR(r0, PC, 0x0184); /* [0x1008503c]:0x10084cb9 */);
T(0x10084eb6, 0x00009903, AL, LDR(r1, SP, 0x000c);
T(0x10084eb8, 0x00005068, AL, STR(r0, r5, r1));
T(0x10084eba, 0x00004861, AL, LDR(r0, PC, 0x0184); /* [0x10085040]:0x10084cbd */);
T(0x10084ebc, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x00000004] */);
T(0x10084ebe, 0x00004861, AL, LDR(r0, PC, 0x0184); /* [0x10085044]:0x10084cc1 */);
T(0x10084ec0, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084ec2, 0x00004861, AL, LDR(r0, PC, 0x0184); /* [0x10085048]:0x10084491 */);
T(0x10084ec4, 0x000060e0, AL, STR(r0, r4, 0x00c); /* [0x0000000c] */);
T(0x10084ec6, 0x00004861, AL, LDR(r0, PC, 0x0184); /* [0x1008504c]:0x10084493 */);
T(0x10084ec8, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x00000010] */);
T(0x10084eca, 0x0000e00f, AL, B(0x10084eea); /* 0x10084ecd + 0x01e*/);

T(0x10084ecc, 0x00002906, AL, CMPS(r1, 0x06));
T(0x10084ece, 0x0000d10b, NE, B(0x10084ee8); /* 0x10084ed2 + 0x016 */);
T(0x10084ed0, 0x0000485a, AL, LDR(r0, PC, 0x0168); /* [0x1008503c]:0x10084cb9 */);
T(0x10084ed2, 0x00009903, AL, LDR(r1, SP, 0x000c);
T(0x10084ed4, 0x00005068, AL, STR(r0, r5, r1));
T(0x10084ed6, 0x0000485a, AL, LDR(r0, PC, 0x0168); /* [0x10085040]:0x10084cbd */);
T(0x10084ed8, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x00000004] */);
T(0x10084eda, 0x0000485a, AL, LDR(r0, PC, 0x0168); /* [0x10085044]:0x10084cc1 */);
T(0x10084edc, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084ede, 0x0000485a, AL, LDR(r0, PC, 0x0168); /* [0x10085048]:0x10084491 */);
T(0x10084ee0, 0x000060e0, AL, STR(r0, r4, 0x00c); /* [0x0000000c] */);
T(0x10084ee2, 0x0000485a, AL, LDR(r0, PC, 0x0168); /* [0x1008504c]:0x10084493 */);
T(0x10084ee4, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x00000010] */);
T(0x10084ee6, 0x0000e001, AL, B(0x10084eea); /* 0x10084ee9 + 0x002*/);

T(0x10084ee8, 0x00009806, AL, LDR(r0, SP, 0x0018);
T(0x10084eea, 0x00006160, AL, STR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084eec, 0x00006960, AL, LDR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084eee, 0x00004684, AL, MOV(r12, r0));
T(0x10084ef0, 0x00006800, AL, LDR(r0, r0));
T(0x10084ef2, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084ef4, 0x0000d042, EQ, B(0x10084f7c); /* 0x10084ef8 + 0x084 */);
T(0x10084ef6, 0x00004a4a, AL, LDR(r2, PC, 0x0128); /* [0x10085020]:0x102c7878 */);
T(0x10084ef8, 0x00009905, AL, LDR(r1, SP, 0x0014);
T(0x10084efa, 0x00002500, AL, MOVS(r5, 0x00));
T(0x10084efc, 0x00005852, AL, LDR(r2, r2, r1));
T(0x10084efe, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10084f00, 0x00006853, AL, LDR(r3, r2, 0x004));
T(0x10084f02, 0x00002b00, AL, CMPS(r3, 0x00));
T(0x10084f04, 0x0000d021, EQ, B(0x10084f4a); /* 0x10084f08 + 0x042 */);
T(0x10084f06, 0x00001c83, AL, SUBS(r3, r0, 0x2);
T(0x10084f08, 0x0000d009, EQ, B(0x10084f1e); /* 0x10084f0c + 0x012 */);
T(0x10084f0a, 0x00001d03, AL, SUBS(r3, r0, 0x4);
T(0x10084f0c, 0x0000d007, EQ, B(0x10084f1e); /* 0x10084f10 + 0x00e */);
T(0x10084f0e, 0x00001d43, AL, SUBS(r3, r0, 0x5);
T(0x10084f10, 0x0000d005, EQ, B(0x10084f1e); /* 0x10084f14 + 0x00a */);
T(0x10084f12, 0x000000cb, AL, LSL(r3, r1, 0x03));
T(0x10084f14, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x10084f16, 0x0000685b, AL, LDR(r3, r3, 0x004));
T(0x10084f18, 0x0000031b, AL, LSL(r3, r3, 0x0c));
T(0x10084f1a, 0x0000195d, AL, SUBS(r5, r3, r5);
T(0x10084f1c, 0x0000e00f, AL, B(0x10084f3c); /* 0x10084f1f + 0x01e*/);

T(0x10084eea, 0x00006160, AL, STR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084eec, 0x00006960, AL, LDR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084eee, 0x00004684, AL, MOV(r12, r0));
T(0x10084ef0, 0x00006800, AL, LDR(r0, r0));
T(0x10084ef2, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084ef4, 0x0000d042, EQ, B(0x10084f7c); /* 0x10084ef8 + 0x084 */);
T(0x10084ef6, 0x00004a4a, AL, LDR(r2, PC, 0x0128); /* [0x10085020]:0x102c7878 */);
T(0x10084ef8, 0x00009905, AL, LDR(r1, SP, 0x0014);
T(0x10084efa, 0x00002500, AL, MOVS(r5, 0x00));
T(0x10084efc, 0x00005852, AL, LDR(r2, r2, r1));
T(0x10084efe, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10084f00, 0x00006853, AL, LDR(r3, r2, 0x004));
T(0x10084f02, 0x00002b00, AL, CMPS(r3, 0x00));
T(0x10084f04, 0x0000d021, EQ, B(0x10084f4a); /* 0x10084f08 + 0x042 */);
T(0x10084f06, 0x00001c83, AL, SUBS(r3, r0, 0x2);
T(0x10084f08, 0x0000d009, EQ, B(0x10084f1e); /* 0x10084f0c + 0x012 */);
T(0x10084f0a, 0x00001d03, AL, SUBS(r3, r0, 0x4);
T(0x10084f0c, 0x0000d007, EQ, B(0x10084f1e); /* 0x10084f10 + 0x00e */);
T(0x10084f0e, 0x00001d43, AL, SUBS(r3, r0, 0x5);
T(0x10084f10, 0x0000d005, EQ, B(0x10084f1e); /* 0x10084f14 + 0x00a */);
T(0x10084f12, 0x000000cb, AL, LSL(r3, r1, 0x03));
T(0x10084f14, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x10084f16, 0x0000685b, AL, LDR(r3, r3, 0x004));
T(0x10084f18, 0x0000031b, AL, LSL(r3, r3, 0x0c));
T(0x10084f1a, 0x0000195d, AL, SUBS(r5, r3, r5);
T(0x10084f1c, 0x0000e00f, AL, B(0x10084f3c); /* 0x10084f1f + 0x01e*/);

T(0x10084f1e, 0x00009b04, AL, LDR(r3, SP, 0x0010);
T(0x10084f20, 0x00007a1b, AL, LDRB(r3, r3, 0x008));
T(0x10084f22, 0x00002b05, AL, CMPS(r3, 0x05));
T(0x10084f24, 0x0000d001, EQ, B(0x10084f2a); /* 0x10084f28 + 0x002 */);
T(0x10084f26, 0x00002b06, AL, CMPS(r3, 0x06));
T(0x10084f28, 0x0000d104, NE, B(0x10084f34); /* 0x10084f2c + 0x008 */);

T(0x10084f2a, 0x000000cb, AL, LSL(r3, r1, 0x03));
T(0x10084f2c, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x10084f2e, 0x0000685b, AL, LDR(r3, r3, 0x004));
T(0x10084f30, 0x0000195d, AL, SUBS(r5, r3, r5);
T(0x10084f32, 0x0000e004, AL, B(0x10084f3c); /* 0x10084f35 + 0x008*/);

T(0x10084f34, 0x000000cb, AL, LSL(r3, r1, 0x03));
T(0x10084f36, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x10084f38, 0x0000685b, AL, LDR(r3, r3, 0x004));
T(0x10084f3a, 0x0000029b, AL, LSL(r3, r3, 0x0a));
T(0x10084f3c, 0x0000195d, AL, SUBS(r5, r3, r5);
T(0x10084f3e, 0x00003101, AL, ADDS(r1, 0x01));
T(0x10084f40, 0x000000cb, AL, LSL(r3, r1, 0x03));
T(0x10084f42, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x10084f44, 0x0000685b, AL, LDR(r3, r3, 0x004));
T(0x10084f46, 0x00002b00, AL, CMPS(r3, 0x00));
T(0x10084f48, 0x0000d1dd, NE, B(0x10084f06); /* 0x10084f4c + 0xffffffba */);

T(0x10084f3c, 0x0000195d, AL, SUBS(r5, r3, r5); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084f3e, 0x00003101, AL, ADDS(r1, 0x01));
T(0x10084f40, 0x000000cb, AL, LSL(r3, r1, 0x03));
T(0x10084f42, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x10084f44, 0x0000685b, AL, LDR(r3, r3, 0x004));
T(0x10084f46, 0x00002b00, AL, CMPS(r3, 0x00));
T(0x10084f48, 0x0000d1dd, NE, B(0x10084f06); /* 0x10084f4c + 0xffffffba */);

T(0x10084f4a, 0x00009b04, AL, LDR(r3, SP, 0x0010);
T(0x10084f4c, 0x00007a18, AL, LDRB(r0, r3, 0x008));
T(0x10084f4e, 0x00002805, AL, CMPS(r0, 0x05));
T(0x10084f50, 0x0000d103, NE, B(0x10084f5a); /* 0x10084f54 + 0x006 */);
T(0x10084f52, 0x00004660, AL, MOV(r0, r12));
T(0x10084f54, 0x00006840, AL, LDR(r0, r0, 0x004));
T(0x10084f56, 0x00006800, AL, LDR(r0, r0));
T(0x10084f58, 0x0000e00c, AL, B(0x10084f72); /* 0x10084f5b + 0x018*/);

T(0x10084f5a, 0x00002806, AL, CMPS(r0, 0x06));
T(0x10084f5c, 0x0000d103, NE, B(0x10084f66); /* 0x10084f60 + 0x006 */);
T(0x10084f5e, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084f60, 0xf002feaa, AL, BL(0x10087cb8); /* 0x10084f65 + 0x00000d54, LR = 0x10084f64 */);
T(0x10084f64, 0x0000e006, AL, B(0x10084f72); /* 0x10084f67 + 0x00c*/);

T(0x10084f66, 0x00004661, AL, MOV(r1, r12));
T(0x10084f68, 0x00006849, AL, LDR(r1, r1, 0x004));
T(0x10084f6a, 0x000069e0, AL, LDR(r0, r4, 0x01c); /* [0x0000001c] */);
T(0x10084f6c, 0x0000880a, AL, LDRH(r2, r1));
T(0x10084f6e, 0x00002101, AL, MOVS(r1, 0x01));
T(0x10084f70, 0x00004091, AL, LSL(r1, r2));
T(0x10084f72, 0x00004348, AL, MUL(r0, r1));
T(0x10084f74, 0x000042a8, AL, CMP(r0, r5));
T(0x10084f76, 0x0000d201, CS, B(0x10084f7c); /* 0x10084f7a + 0x002 */);
T(0x10084f78, 0x00009806, AL, LDR(r0, SP, 0x0018);
T(0x10084f7a, 0x00006160, AL, STR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084f7c, 0x00006960, AL, LDR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084f7e, 0x00004a2d, AL, LDR(r2, PC, 0x00b4); /* [0x10085034]:0x1085d0ec */);
T(0x10084f80, 0x00006800, AL, LDR(r0, r0));
T(0x10084f82, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084f84, 0x0000d113, NE, B(0x10084fae); /* 0x10084f88 + 0x026 */);
T(0x10084f86, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10084f88, 0x000061e1, AL, STR(r1, r4, 0x01c); /* [0x0000001c] */);
T(0x10084f8a, 0x00009903, AL, LDR(r1, SP, 0x000c);
T(0x10084f8c, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x1008503c]:0x10084cb9 */);
T(0x10084f8e, 0x00005050, AL, STR(r0, r2, r1));
T(0x10084f90, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085040]:0x10084cbd */);
T(0x10084f92, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x00000004] */);
T(0x10084f94, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085044]:0x10084cc1 */);
T(0x10084f96, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084f98, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085048]:0x10084491 */);
T(0x10084f9a, 0x000060e0, AL, STR(r0, r4, 0x00c); /* [0x0000000c] */);
T(0x10084f9c, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x1008504c]:0x10084493 */);
T(0x10084f9e, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x00000010] */);
T(0x10084fa0, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084fa2, 0xf7fffeab, AL, BL(0x10084cfc); /* 0x10084fa7 + 0x00000d56, LR = 0x10084fa6 */);
T(0x10084fa6, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084fa8, 0x0000d001, EQ, B(0x10084fae); /* 0x10084fac + 0x002 */);
T(0x10084faa, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085058]:0x102c7ae8 */);
T(0x10084fac, 0x00006160, AL, STR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084fae, 0x00003601, AL, ADDS(r6, 0x01));
T(0x10084fb0, 0x00002e07, AL, CMPS(r6, 0x07));
T(0x10084fb2, 0x0000da00, GE, B(0x10084fb6); /* 0x10084fb6 + 0x000 */);
T(0x10084fb4, 0x0000e6d5, AL, B(0x10084d60); /* 0x10084fb7 + 0xfffffdaa*/);

T(0x10084cfc, 0x00000043, AL, LSL(r3, r0, 0x01));
T(0x10084cfe, 0x00001818, AL, SUBS(r0, r3, r0);
T(0x10084d00, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10084d02, 0x000049c7, AL, LDR(r1, PC, 0x031c); /* [0x10085020]:0x102c7878 */);
T(0x10084d04, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10084d06, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x10084d08, 0x00006841, AL, LDR(r1, r0, 0x004));
T(0x10084d0a, 0x0000b082, AL, SUB(SP, 0x008));
T(0x10084d0c, 0x00003110, AL, ADDS(r1, 0x10));
T(0x10084d0e, 0x00002206, AL, MOVS(r2, 0x06));
T(0x10084d10, 0x0000466c, AL, MOV(r4, SP));
T(0x10084d12, 0x00004668, AL, MOV(r0, SP));
T(0x10084d14, 0xf0d6ebf6, AL, BLX(0x1015b504); /* 0x10084d19 + 0x000007ec, LR = 0x10084d18 */);
T(0x10084d18, 0x00002206, AL, MOVS(r2, 0x06));
T(0x10084d1a, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x10084d1c, 0x0000a1c1, AL, ADD(r1, PC, 0x304); /* 0x10085024 */));
T(0x10084d1e, 0xf0d6f9ab, AL, BL(0x1015b078); /* 0x10084d23 + 0x00000356, LR = 0x10084d22 */);
T(0x10084d22, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084d24, 0x0000d102, NE, B(0x10084d2c); /* 0x10084d28 + 0x004 */);
T(0x10084d26, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10084d28, 0x0000b002, AL, ADD(SP, 0x008));
T(0x10084d2a, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x10084d2c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10084d2e, 0x0000e7fb, AL, B(0x10084d26); /* 0x10084d31 + 0xfffffff6*/);

T(0x10084d60, 0x00009006, AL, STR(r0, SP, 0x0018);
T(0x10084d62, 0x00000071, AL, LSL(r1, r6, 0x01));
T(0x10084d64, 0x00001989, AL, SUBS(r1, r1, r6);
T(0x10084d66, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x10084d68, 0x00004aad, AL, LDR(r2, PC, 0x02b4); /* [0x10085020]:0x102c7878 */);
T(0x10084d6a, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10084d6c, 0x0000188b, AL, SUBS(r3, r1, r2);
T(0x10084d6e, 0x00009304, AL, STR(r3, SP, 0x0010);
T(0x10084d70, 0x00009000, AL, STR(r0, SP, 0x0000);
T(0x10084d72, 0x00009105, AL, STR(r1, SP, 0x0014);
T(0x10084d74, 0x00007a58, AL, LDRB(r0, r3, 0x009));
T(0x10084d76, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084d78, 0x0000d105, NE, B(0x10084d86); /* 0x10084d7c + 0x00a */);
T(0x10084d7a, 0x00004dae, AL, LDR(r5, PC, 0x02b8); /* [0x10085034]:0x1085d0ec */);
T(0x10084d7c, 0x00002002, AL, MOVS(r0, 0x02));
T(0x10084d7e, 0x00000171, AL, LSL(r1, r6, 0x05));
T(0x10084d80, 0x00001949, AL, SUBS(r1, r1, r5);
T(0x10084d82, 0x00007608, AL, STRB(r0, r1, 0x018));
T(0x10084d84, 0x0000e006, AL, B(0x10084d92); /* 0x10084d87 + 0x00c*/);

T(0x10084f72, 0x00004348, AL, MUL(r0, r1));
T(0x10084f74, 0x000042a8, AL, CMP(r0, r5));
T(0x10084f76, 0x0000d201, CS, B(0x10084f7c); /* 0x10084f7a + 0x002 */);
T(0x10084f78, 0x00009806, AL, LDR(r0, SP, 0x0018);
T(0x10084f7a, 0x00006160, AL, STR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084f7c, 0x00006960, AL, LDR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084f7e, 0x00004a2d, AL, LDR(r2, PC, 0x00b4); /* [0x10085034]:0x1085d0ec */);
T(0x10084f80, 0x00006800, AL, LDR(r0, r0));
T(0x10084f82, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084f84, 0x0000d113, NE, B(0x10084fae); /* 0x10084f88 + 0x026 */);
T(0x10084f86, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10084f88, 0x000061e1, AL, STR(r1, r4, 0x01c); /* [0x0000001c] */);
T(0x10084f8a, 0x00009903, AL, LDR(r1, SP, 0x000c);
T(0x10084f8c, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x1008503c]:0x10084cb9 */);
T(0x10084f8e, 0x00005050, AL, STR(r0, r2, r1));
T(0x10084f90, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085040]:0x10084cbd */);
T(0x10084f92, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x00000004] */);
T(0x10084f94, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085044]:0x10084cc1 */);
T(0x10084f96, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084f98, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085048]:0x10084491 */);
T(0x10084f9a, 0x000060e0, AL, STR(r0, r4, 0x00c); /* [0x0000000c] */);
T(0x10084f9c, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x1008504c]:0x10084493 */);
T(0x10084f9e, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x00000010] */);
T(0x10084fa0, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084fa2, 0xf7fffeab, AL, BL(0x10084cfc); /* 0x10084fa7 + 0x00000d56, LR = 0x10084fa6 */);
T(0x10084fa6, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084fa8, 0x0000d001, EQ, B(0x10084fae); /* 0x10084fac + 0x002 */);
T(0x10084faa, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085058]:0x102c7ae8 */);
T(0x10084fac, 0x00006160, AL, STR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084fae, 0x00003601, AL, ADDS(r6, 0x01));
T(0x10084fb0, 0x00002e07, AL, CMPS(r6, 0x07));
T(0x10084fb2, 0x0000da00, GE, B(0x10084fb6); /* 0x10084fb6 + 0x000 */);
T(0x10084fb4, 0x0000e6d5, AL, B(0x10084d60); /* 0x10084fb7 + 0xfffffdaa*/);

T(0x10084f7c, 0x00006960, AL, LDR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084f7e, 0x00004a2d, AL, LDR(r2, PC, 0x00b4); /* [0x10085034]:0x1085d0ec */);
T(0x10084f80, 0x00006800, AL, LDR(r0, r0));
T(0x10084f82, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084f84, 0x0000d113, NE, B(0x10084fae); /* 0x10084f88 + 0x026 */);
T(0x10084f86, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10084f88, 0x000061e1, AL, STR(r1, r4, 0x01c); /* [0x0000001c] */);
T(0x10084f8a, 0x00009903, AL, LDR(r1, SP, 0x000c);
T(0x10084f8c, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x1008503c]:0x10084cb9 */);
T(0x10084f8e, 0x00005050, AL, STR(r0, r2, r1));
T(0x10084f90, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085040]:0x10084cbd */);
T(0x10084f92, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x00000004] */);
T(0x10084f94, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085044]:0x10084cc1 */);
T(0x10084f96, 0x000060a0, AL, STR(r0, r4, 0x008); /* [0x00000008] */);
T(0x10084f98, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085048]:0x10084491 */);
T(0x10084f9a, 0x000060e0, AL, STR(r0, r4, 0x00c); /* [0x0000000c] */);
T(0x10084f9c, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x1008504c]:0x10084493 */);
T(0x10084f9e, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x00000010] */);
T(0x10084fa0, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10084fa2, 0xf7fffeab, AL, BL(0x10084cfc); /* 0x10084fa7 + 0x00000d56, LR = 0x10084fa6 */);
T(0x10084fa6, 0x00002800, AL, CMPS(r0, 0x00));
T(0x10084fa8, 0x0000d001, EQ, B(0x10084fae); /* 0x10084fac + 0x002 */);
T(0x10084faa, 0x0000482b, AL, LDR(r0, PC, 0x00ac); /* [0x10085058]:0x102c7ae8 */);
T(0x10084fac, 0x00006160, AL, STR(r0, r4, 0x014); /* [0x00000014] */);
T(0x10084fae, 0x00003601, AL, ADDS(r6, 0x01));
T(0x10084fb0, 0x00002e07, AL, CMPS(r6, 0x07));
T(0x10084fb2, 0x0000da00, GE, B(0x10084fb6); /* 0x10084fb6 + 0x000 */);
T(0x10084fb4, 0x0000e6d5, AL, B(0x10084d60); /* 0x10084fb7 + 0xfffffdaa*/);

T(0x10084fae, 0x00003601, AL, ADDS(r6, 0x01));
T(0x10084fb0, 0x00002e07, AL, CMPS(r6, 0x07));
T(0x10084fb2, 0x0000da00, GE, B(0x10084fb6); /* 0x10084fb6 + 0x000 */);
T(0x10084fb4, 0x0000e6d5, AL, B(0x10084d60); /* 0x10084fb7 + 0xfffffdaa*/);

T(0x10084fb6, 0x00004a1f, AL, LDR(r2, PC, 0x007c); /* [0x10085034]:0x1085d0ec */);
T(0x10084fb8, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10084fba, 0x000043c1, AL, MVN(r1, r0));
T(0x10084fbc, 0x000032e0, AL, ADDS(r2, 0xe0));
T(0x10084fbe, 0x00002500, AL, MOVS(r5, 0x00));
T(0x10084fc0, 0x00000043, AL, LSL(r3, r0, 0x01));
T(0x10084fc2, 0x0000181b, AL, SUBS(r3, r3, r0);
T(0x10084fc4, 0x000000db, AL, LSL(r3, r3, 0x03));
T(0x10084fc6, 0x000050d1, AL, STR(r1, r2, r3));
T(0x10084fc8, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x10084fca, 0x0000605d, AL, STR(r5, r3, 0x004));
T(0x10084fcc, 0x0000609d, AL, STR(r5, r3, 0x008));
T(0x10084fce, 0x000060dd, AL, STR(r5, r3, 0x00c));
T(0x10084fd0, 0x0000741d, AL, STRB(r5, r3, 0x010));
T(0x10084fd2, 0x00003001, AL, ADDS(r0, 0x01));
T(0x10084fd4, 0x00002803, AL, CMPS(r0, 0x03));
T(0x10084fd6, 0x0000615d, AL, STR(r5, r3, 0x014));
T(0x10084fd8, 0x0000dbf2, LT, B(0x10084fc0); /* 0x10084fdc + 0xffffffe4 */);
T(0x10084fda, 0x00004c16, AL, LDR(r4, PC, 0x0058); /* [0x10085034]:0x1085d0ec */);
T(0x10084fdc, 0x00004e1f, AL, LDR(r6, PC, 0x007c); /* [0x1008505c]:0x1085d214 */);
T(0x10084fde, 0x00003c10, AL, SUBS(r4, 0x10));
T(0x10084fe0, 0x00007025, AL, STRB(r5, r4));
T(0x10084fe2, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x1085d214 - 0x00000000 = 0x1085d214 */ XXX);
T(0x10084fe4, 0xf0e2fc36, AL, BL(0x10167854); /* 0x10084fe9 + 0x0000086c, LR = 0x10084fe8 */);
T(0x10084fe8, 0x0000a01d, AL, ADD(r0, PC, 0x074); /* 0x10085060 */));
T(0x10084fea, 0x00006130, AL, STR(r0, r6, 0x010); /* [0x1085d224] */);
T(0x10084fec, 0x00004820, AL, LDR(r0, PC, 0x0080); /* [0x10085070]:0x102c78ce */);
T(0x10084fee, 0x0000aa02, AL, ADD(r2, SP, 0x008)));
T(0x10084ff0, 0x0000a901, AL, ADD(r1, SP, 0x004)));
T(0x10084ff2, 0x00007800, AL, LDRB(r0, r0));
T(0x10084ff4, 0xf7fffc1a, AL, BL(0x1008482c); /* 0x10084ff9 + 0x00000834, LR = 0x10084ff8 */);
T(0x10084ff8, 0x000060a0, AL, STR(r0, r4, 0x008));
T(0x10084ffa, 0x00001c43, AL, SUBS(r3, r0, 0x1);
T(0x10084ffc, 0x0000d00d, EQ, B(0x1008501a); /* 0x10085000 + 0x01a */);
T(0x10084ffe, 0x00000043, AL, LSL(r3, r0, 0x01));
T(0x10085000, 0x00001818, AL, SUBS(r0, r3, r0);
T(0x10085002, 0x00004a07, AL, LDR(r2, PC, 0x001c); /* [0x10085020]:0x102c7878 */);
T(0x10085004, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x10085006, 0x00001880, AL, SUBS(r0, r0, r2);
T(0x10085008, 0x00006841, AL, LDR(r1, r0, 0x004));
T(0x1008500a, 0x00009801, AL, LDR(r0, SP, 0x0004);
T(0x1008500c, 0x00001809, AL, SUBS(r1, r1, r0);
T(0x1008500e, 0x00006061, AL, STR(r1, r4, 0x004));
T(0x10085010, 0x00009902, AL, LDR(r1, SP, 0x0008);
T(0x10085012, 0x00001a08, AL, ADDS(r0, r1, r0);
T(0x10085014, 0x000060e0, AL, STR(r0, r4, 0x00c));
T(0x10085016, 0x0000b007, AL, ADD(SP, 0x01c));
T(0x10085018, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x1008501a, 0x000060e5, AL, STR(r5, r4, 0x00c); /* [0x0000000c] */);
T(0x1008501c, 0x0000e7fb, AL, B(0x10085014); /* 0x1008501f + 0xfffffff6*/);

T(0x10085014, 0x000060e0, AL, STR(r0, r4, 0x00c); /* [0x0000000c] */);
T(0x10085016, 0x0000b007, AL, ADD(SP, 0x01c));
T(0x10085018, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x100855b6, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x100855b8, 0x00004c06, AL, LDR(r4, PC, 0x0018); /* [0x100855d4]:0x1085d228 */);
T(0x100855ba, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x1085d228 - 0x00000000 = 0x1085d228 */ XXX);
T(0x100855bc, 0xf0e2f94a, AL, BL(0x10167854); /* 0x100855c1 + 0x00000294, LR = 0x100855c0 */);
T(0x100855c0, 0x0000a009, AL, ADD(r0, PC, 0x024); /* 0x100855e8 */));
T(0x100855c2, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x1085d238] */);
T(0x100855c4, 0xf000fa81, AL, BL(0x10085aca); /* 0x100855c9 + 0x00000502, LR = 0x100855c8 */);
T(0x100855c8, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x10085aca, 0x00004918, AL, LDR(r1, PC, 0x0060); /* [0x10085b2c]:0x1085d246 */);
T(0x10085acc, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x10085ace, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10085ad0, 0x00007008, AL, STRB(r0, r1); /* [0x1085d246] */);
T(0x10085ad2, 0xf7fffd90, AL, BL(0x100855f6); /* 0x10085ad7 + 0x00000b20, LR = 0x10085ad6 */);
T(0x10085ad6, 0xf7fffebc, AL, BL(0x10085852); /* 0x10085adb + 0x00000d78, LR = 0x10085ada */);
T(0x10085ada, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x100855f6, 0x0000488b, AL, LDR(r0, PC, 0x022c); /* [0x10085824]:0xfffb4840 */);
T(0x100855f8, 0x00002181, AL, MOVS(r1, 0x81));
T(0x100855fa, 0x00007001, AL, STRB(r1, r0); /* [0xfffb4840] */);
T(0x100855fc, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100855fe, 0x00007201, AL, STRB(r1, r0, 0x008); /* [0xfffb4848] */);
T(0x10085600, 0x000021ff, AL, MOVS(r1, 0xff));
T(0x10085602, 0x00007101, AL, STRB(r1, r0, 0x004); /* [0xfffb4844] */);
T(0x10085604, 0x00004770, AL, BX(LR); /* 0xfffb4840 */);

T(0x10085852, 0x00004990, AL, LDR(r1, PC, 0x0240); /* [0x10085a94]:0x1085d23c */);
T(0x10085854, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10085856, 0x00007008, AL, STRB(r0, r1); /* [0x1085d23c] */);
T(0x10085858, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1008631c, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x1008631e, 0x00004ec9, AL, LDR(r6, PC, 0x0324); /* [0x10086644]:0x1085d24c */);
T(0x10086320, 0x00002400, AL, MOVS(r4, 0x00));
T(0x10086322, 0x00002700, AL, MOVS(r7, 0x00));
T(0x10086324, 0x00000120, AL, LSL(r0, r4, 0x04));
T(0x10086326, 0x00001b00, AL, ADDS(r0, r0, r4);
T(0x10086328, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x1008632a, 0x00005437, AL, STRB(r7, r6, r0));
T(0x1008632c, 0x00001985, AL, SUBS(r5, r0, r6);
T(0x1008632e, 0x00001c28, AL, SUBS(r0, r5, 0x0);
T(0x10086330, 0x00003028, AL, ADDS(r0, 0x28));
T(0x10086332, 0xf0e1fa8f, AL, BL(0x10167854); /* 0x10086337 + 0x0000051e, LR = 0x10086336 */);
T(0x10086336, 0x0000a0c4, AL, ADD(r0, PC, 0x310); /* 0x1008664a */));
T(0x10086338, 0x00003401, AL, ADDS(r4, 0x01));
T(0x1008633a, 0x00002c01, AL, CMPS(r4, 0x01));
T(0x1008633c, 0x000063a8, AL, STR(r0, r5, 0x038));
T(0x1008633e, 0x0000d3f1, CC, B(0x10086324); /* 0x10086342 + 0xffffffe2 */);
T(0x10086340, 0xf7fffc58, AL, BL(0x10085bf4); /* 0x10086345 + 0x000008b0, LR = 0x10086344 */);
T(0x10086344, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10085bf4, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10085bf6, 0x00004a8b, AL, LDR(r2, PC, 0x022c); /* [0x10085e24]:0x1085d248 */);
T(0x10085bf8, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10085bfa, 0x00005411, AL, STRB(r1, r2, r0));
T(0x10085bfc, 0x00003001, AL, ADDS(r0, 0x01));
T(0x10085bfe, 0x00002801, AL, CMPS(r0, 0x01));
T(0x10085c00, 0x0000d3fb, CC, B(0x10085bfa); /* 0x10085c04 + 0xfffffff6 */);
T(0x10085c02, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10086690, 0x0000486a, AL, LDR(r0, PC, 0x01a8); /* [0x1008683c]:0xfffb0c00 */);
T(0x10086692, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10086694, 0x00006901, AL, LDR(r1, r0, 0x010); /* [0xfffb0c10] */);
T(0x10086696, 0x00002202, AL, MOVS(r2, 0x02));
T(0x10086698, 0x00004311, AL, ORR(r1, r2));
T(0x1008669a, 0x00006101, AL, STR(r1, r0, 0x010); /* [0xfffb0c10] */);
T(0x1008669c, 0x00006941, AL, LDR(r1, r0, 0x014); /* [0xfffb0c14] */);
T(0x1008669e, 0x000007c9, AL, LSL(r1, r1, 0x1f));
T(0x100866a0, 0x0000d402, MI, B(0x100866a8); /* 0x100866a4 + 0x004 */);
T(0x100866a2, 0x00006941, AL, LDR(r1, r0, 0x014); /* [0xfffb0c14] */);
T(0x100866a4, 0x000007c9, AL, LSL(r1, r1, 0x1f));
T(0x100866a6, 0x0000d5fc, PL, B(0x100866a2); /* 0x100866aa + 0xfffffff8 */);

T(0x100866a8, 0x00006a81, AL, LDR(r1, r0, 0x028); /* [0x00000028] */);
T(0x100866aa, 0x00002201, AL, MOVS(r2, 0x01));
T(0x100866ac, 0x000003d2, AL, LSL(r2, r2, 0x0f));
T(0x100866ae, 0x00004311, AL, ORR(r1, r2));
T(0x100866b0, 0x0000221f, AL, MOVS(r2, 0x1f));
T(0x100866b2, 0x00000292, AL, LSL(r2, r2, 0x0a));
T(0x100866b4, 0x00004391, AL, BIC(r1, r2));
T(0x100866b6, 0x00002201, AL, MOVS(r2, 0x01));
T(0x100866b8, 0x00000292, AL, LSL(r2, r2, 0x0a));
T(0x100866ba, 0x00001889, AL, SUBS(r1, r1, r2);
T(0x100866bc, 0x00003a20, AL, SUBS(r2, 0x20));
T(0x100866be, 0x00004391, AL, BIC(r1, r2));
T(0x100866c0, 0x00000949, AL, LSR(r1, r1, 0x05));
T(0x100866c2, 0x00000149, AL, LSL(r1, r1, 0x05));
T(0x100866c4, 0x00003101, AL, ADDS(r1, 0x01));
T(0x100866c6, 0x00006281, AL, STR(r1, r0, 0x028); /* [0x00000028] */);
T(0x100866c8, 0x00006a41, AL, LDR(r1, r0, 0x024); /* [0x00000024] */);
T(0x100866ca, 0x00002220, AL, MOVS(r2, 0x20));
T(0x100866cc, 0x00004391, AL, BIC(r1, r2));
T(0x100866ce, 0x00002201, AL, MOVS(r2, 0x01));
T(0x100866d0, 0x00004311, AL, ORR(r1, r2));
T(0x100866d2, 0x00006241, AL, STR(r1, r0, 0x024); /* [0x00000024] */);
T(0x100866d4, 0x00004c5a, AL, LDR(r4, PC, 0x0168); /* [0x10086840]:0x1085d288 */);
T(0x100866d6, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x1085d288 - 0x00000000 = 0x1085d288 */ XXX);
T(0x100866d8, 0xf0e1f8bc, AL, BL(0x10167854); /* 0x100866dd + 0x00000178, LR = 0x100866dc */);
T(0x100866dc, 0x0000a059, AL, ADD(r0, PC, 0x164); /* 0x10086844 */));
T(0x100866de, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x1085d298] */);
T(0x100866e0, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x100867d0, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x100867d2, 0x00001c05, AL, SUBS(r5, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100867d4, 0x00001c0f, AL, SUBS(r7, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100867d6, 0x00001c16, AL, SUBS(r6, r2, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100867d8, 0x00002400, AL, MOVS(r4, 0x00));
T(0x100867da, 0x00004819, AL, LDR(r0, PC, 0x0064); /* [0x10086840]:0x1085d288 */);
T(0x100867dc, 0xf0e1f8a8, AL, BL(0x10167930); /* 0x100867e1 + 0x00000150, LR = 0x100867e0 */);
T(0x100867e0, 0x00004816, AL, LDR(r0, PC, 0x0058); /* [0x1008683c]:0xfffb0c00 */);
T(0x100867e2, 0x00006a41, AL, LDR(r1, r0, 0x024); /* [0xfffb0c24] */);
T(0x100867e4, 0x0000221e, AL, MOVS(r2, 0x1e));
T(0x100867e6, 0x00004391, AL, BIC(r1, r2));
T(0x100867e8, 0x00004a19, AL, LDR(r2, PC, 0x0064); /* [0x10086850]:0x102c7b0b */);
T(0x100867ea, 0x00005d52, AL, LDRB(r2, r2, r5));
T(0x100867ec, 0x00000712, AL, LSL(r2, r2, 0x1c));
T(0x100867ee, 0x00000ed2, AL, LSR(r2, r2, 0x1b));
T(0x100867f0, 0x00004311, AL, ORR(r1, r2));
T(0x100867f2, 0x00006241, AL, STR(r1, r0, 0x024); /* [0xfffb0c24] */);
T(0x100867f4, 0x00000769, AL, LSL(r1, r5, 0x1d));
T(0x100867f6, 0x00000d8a, AL, LSR(r2, r1, 0x16));
T(0x100867f8, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100867fa, 0x0000d103, NE, B(0x10086804); /* 0x100867fe + 0x006 */);
T(0x100867fc, 0x00008839, AL, LDRH(r1, r7));
T(0x100867fe, 0x00006341, AL, STR(r1, r0, 0x034); /* [0xfffb0c34] */);
T(0x10086800, 0x00002600, AL, MOVS(r6, 0x00));
T(0x10086802, 0x00002410, AL, MOVS(r4, 0x10));
T(0x10086804, 0x00006ac1, AL, LDR(r1, r0, 0x02c); /* [0xfffb0c2c] */);
T(0x10086806, 0x00002307, AL, MOVS(r3, 0x07));
T(0x10086808, 0x000001db, AL, LSL(r3, r3, 0x07));
T(0x1008680a, 0x00004399, AL, BIC(r1, r3));
T(0x1008680c, 0x00004311, AL, ORR(r1, r2));
T(0x1008680e, 0x0000237c, AL, MOVS(r3, 0x7c));
T(0x10086810, 0x00004399, AL, BIC(r1, r3));
T(0x10086812, 0x00001c23, AL, SUBS(r3, r4, 0x0);
T(0x10086814, 0x0000331f, AL, ADDS(r3, 0x1f));
T(0x10086816, 0x000006db, AL, LSL(r3, r3, 0x1b));
T(0x10086818, 0x00000e5b, AL, LSR(r3, r3, 0x19));
T(0x1008681a, 0x00004319, AL, ORR(r1, r3));
T(0x1008681c, 0x00002302, AL, MOVS(r3, 0x02));
T(0x1008681e, 0x00004319, AL, ORR(r1, r3));
T(0x10086820, 0x000062c1, AL, STR(r1, r0, 0x02c); /* [0xfffb0c2c] */);
T(0x10086822, 0x00006b01, AL, LDR(r1, r0, 0x030); /* [0xfffb0c30] */);
T(0x10086824, 0x00000789, AL, LSL(r1, r1, 0x1e));
T(0x10086826, 0x0000d402, MI, B(0x1008682e); /* 0x1008682a + 0x004 */);
T(0x10086828, 0x00006b01, AL, LDR(r1, r0, 0x030); /* [0xfffb0c30] */);
T(0x1008682a, 0x00000789, AL, LSL(r1, r1, 0x1e));
T(0x1008682c, 0x0000d5fc, PL, B(0x10086828); /* 0x10086830 + 0xfffffff8 */);

T(0x10086804, 0x00006ac1, AL, LDR(r1, r0, 0x02c); /* [0x0000002c] */);
T(0x10086806, 0x00002307, AL, MOVS(r3, 0x07));
T(0x10086808, 0x000001db, AL, LSL(r3, r3, 0x07));
T(0x1008680a, 0x00004399, AL, BIC(r1, r3));
T(0x1008680c, 0x00004311, AL, ORR(r1, r2));
T(0x1008680e, 0x0000237c, AL, MOVS(r3, 0x7c));
T(0x10086810, 0x00004399, AL, BIC(r1, r3));
T(0x10086812, 0x00001c23, AL, SUBS(r3, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10086814, 0x0000331f, AL, ADDS(r3, 0x1f));
T(0x10086816, 0x000006db, AL, LSL(r3, r3, 0x1b));
T(0x10086818, 0x00000e5b, AL, LSR(r3, r3, 0x19));
T(0x1008681a, 0x00004319, AL, ORR(r1, r3));
T(0x1008681c, 0x00002302, AL, MOVS(r3, 0x02));
T(0x1008681e, 0x00004319, AL, ORR(r1, r3));
T(0x10086820, 0x000062c1, AL, STR(r1, r0, 0x02c); /* [0x0000002c] */);
T(0x10086822, 0x00006b01, AL, LDR(r1, r0, 0x030); /* [0x00000030] */);
T(0x10086824, 0x00000789, AL, LSL(r1, r1, 0x1e));
T(0x10086826, 0x0000d402, MI, B(0x1008682e); /* 0x1008682a + 0x004 */);
T(0x10086828, 0x00006b01, AL, LDR(r1, r0, 0x030); /* [0x00000030] */);
T(0x1008682a, 0x00000789, AL, LSL(r1, r1, 0x1e));
T(0x1008682c, 0x0000d5fc, PL, B(0x10086828); /* 0x10086830 + 0xfffffff8 */);

T(0x1008682e, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x10086830, 0x0000d1e2, NE, B(0x100867f8); /* 0x10086834 + 0xffffffc4 */);
T(0x10086832, 0x00004803, AL, LDR(r0, PC, 0x000c); /* [0x10086840]:0x1085d288 */);
T(0x10086834, 0xf0e1f816, AL, BL(0x10167864); /* 0x10086839 + 0x0000002c, LR = 0x10086838 */);
T(0x10086838, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1008683a, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x100867f8, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100867fa, 0x0000d103, NE, B(0x10086804); /* 0x100867fe + 0x006 */);
T(0x100867fc, 0x00008839, AL, LDRH(r1, r7); /* [0x00000000] */);
T(0x100867fe, 0x00006341, AL, STR(r1, r0, 0x034); /* [0x00000034] */);
T(0x10086800, 0x00002600, AL, MOVS(r6, 0x00));
T(0x10086802, 0x00002410, AL, MOVS(r4, 0x10));
T(0x10086804, 0x00006ac1, AL, LDR(r1, r0, 0x02c); /* [0x0000002c] */);
T(0x10086806, 0x00002307, AL, MOVS(r3, 0x07));
T(0x10086808, 0x000001db, AL, LSL(r3, r3, 0x07));
T(0x1008680a, 0x00004399, AL, BIC(r1, r3));
T(0x1008680c, 0x00004311, AL, ORR(r1, r2));
T(0x1008680e, 0x0000237c, AL, MOVS(r3, 0x7c));
T(0x10086810, 0x00004399, AL, BIC(r1, r3));
T(0x10086812, 0x00001c23, AL, SUBS(r3, r4, 0x0);
T(0x10086814, 0x0000331f, AL, ADDS(r3, 0x1f));
T(0x10086816, 0x000006db, AL, LSL(r3, r3, 0x1b));
T(0x10086818, 0x00000e5b, AL, LSR(r3, r3, 0x19));
T(0x1008681a, 0x00004319, AL, ORR(r1, r3));
T(0x1008681c, 0x00002302, AL, MOVS(r3, 0x02));
T(0x1008681e, 0x00004319, AL, ORR(r1, r3));
T(0x10086820, 0x000062c1, AL, STR(r1, r0, 0x02c); /* [0x0000002c] */);
T(0x10086822, 0x00006b01, AL, LDR(r1, r0, 0x030); /* [0x00000030] */);
T(0x10086824, 0x00000789, AL, LSL(r1, r1, 0x1e));
T(0x10086826, 0x0000d402, MI, B(0x1008682e); /* 0x1008682a + 0x004 */);
T(0x10086828, 0x00006b01, AL, LDR(r1, r0, 0x030); /* [0x00000030] */);
T(0x1008682a, 0x00000789, AL, LSL(r1, r1, 0x1e));
T(0x1008682c, 0x0000d5fc, PL, B(0x10086828); /* 0x10086830 + 0xfffffff8 */);
T(0x1008682e, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x10086830, 0x0000d1e2, NE, B(0x100867f8); /* 0x10086834 + 0xffffffc4 */);
T(0x10086832, 0x00004803, AL, LDR(r0, PC, 0x000c); /* [0x10086840]:0x1085d288 */);
T(0x10086834, 0xf0e1f816, AL, BL(0x10167864); /* 0x10086839 + 0x0000002c, LR = 0x10086838 */);
T(0x10086838, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1008683a, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x10086988, 0x00004a38, AL, LDR(r2, PC, 0x00e0); /* [0x10086a6c]:0x1085d29c */);
T(0x1008698a, 0x00005c12, AL, LDRB(r2, r2, r0));
T(0x1008698c, 0x0000700a, AL, STRB(r2, r1); /* [0x00000000] */);
T(0x1008698e, 0x00004937, AL, LDR(r1, PC, 0x00dc); /* [0x10086a6c]:0x1085d29c */);
T(0x10086990, 0x00003102, AL, ADDS(r1, 0x02));
T(0x10086992, 0x00005c08, AL, LDRB(r0, r1, r0));
T(0x10086994, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10086a48, 0x00004b08, AL, LDR(r3, PC, 0x0020); /* [0x10086a6c]:0x1085d29c */);
T(0x10086a4a, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10086a4c, 0x00002419, AL, MOVS(r4, 0x19));
T(0x10086a4e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10086a50, 0x00001c9a, AL, SUBS(r2, r3, 0x2); /* 0x1085d29c - 0x00000002 = 0x1085d29a */ XXX);
T(0x10086a52, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10086a54, 0x00005411, AL, STRB(r1, r2, r0));
T(0x10086a56, 0x0000541c, AL, STRB(r4, r3, r0));
T(0x10086a58, 0x00003001, AL, ADDS(r0, 0x01));
T(0x10086a5a, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x10086a5c, 0x00000e00, AL, LSR(r0, r0, 0x18));
T(0x10086a5e, 0x00002802, AL, CMPS(r0, 0x02));
T(0x10086a60, 0x0000d3f8, CC, B(0x10086a54); /* 0x10086a64 + 0xfffffff0 */);
T(0x10086a62, 0xf000f9b5, AL, BL(0x10086dd0); /* 0x10086a67 + 0x0000036a, LR = 0x10086a66 */);
T(0x10086a66, 0xf000f80b, AL, BL(0x10086a80); /* 0x10086a6b + 0x00000016, LR = 0x10086a6a */);
T(0x10086a6a, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x10086a80, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10086dd0, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10087cb8, 0x00001c01, AL, SUBS(r1, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10087cba, 0x00004a29, AL, LDR(r2, PC, 0x00a4); /* [0x10087d60]:0x1085d0ec */);
T(0x10087cbc, 0x00000149, AL, LSL(r1, r1, 0x05));
T(0x10087cbe, 0x00001889, AL, SUBS(r1, r1, r2);
T(0x10087cc0, 0x00006949, AL, LDR(r1, r1, 0x014));
T(0x10087cc2, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10087cc4, 0x00006849, AL, LDR(r1, r1, 0x004));
T(0x10087cc6, 0x0000680a, AL, LDR(r2, r1));
T(0x10087cc8, 0x00002a07, AL, CMPS(r2, 0x07));
T(0x10087cca, 0x0000d005, EQ, B(0x10087cd8); /* 0x10087cce + 0x00a */);
T(0x10087ccc, 0x0000688a, AL, LDR(r2, r1, 0x008));
T(0x10087cce, 0x0000310c, AL, ADDS(r1, 0x0c));
T(0x10087cd0, 0x00001810, AL, SUBS(r0, r2, r0);
T(0x10087cd2, 0x0000680a, AL, LDR(r2, r1));
T(0x10087cd4, 0x00002a07, AL, CMPS(r2, 0x07));
T(0x10087cd6, 0x0000d1f9, NE, B(0x10087ccc); /* 0x10087cda + 0xfffffff2 */);

T(0x10087cd8, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100b46f4, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x100b46f6, 0x00004812, AL, LDR(r0, PC, 0x0048); /* [0x100b4740]:0x108ec144 */);
T(0x100b46f8, 0x00002101, AL, MOVS(r1, 0x01));
T(0x100b46fa, 0x00008101, AL, STRH(r1, r0, 0x008); /* [0x108ec14c] */);
T(0x100b46fc, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100b46fe, 0x00007002, AL, STRB(r2, r0); /* [0x108ec144] */);
T(0x100b4700, 0x00002309, AL, MOVS(r3, 0x09));
T(0x100b4702, 0x00007083, AL, STRB(r3, r0, 0x002); /* [0x108ec146] */);
T(0x100b4704, 0x000023f0, AL, MOVS(r3, 0xf0));
T(0x100b4706, 0x00008143, AL, STRH(r3, r0, 0x00a); /* [0x108ec14e] */);
T(0x100b4708, 0x000023ff, AL, MOVS(r3, 0xff));
T(0x100b470a, 0x00003341, AL, ADDS(r3, 0x41));
T(0x100b470c, 0x00008183, AL, STRH(r3, r0, 0x00c); /* [0x108ec150] */);
T(0x100b470e, 0x000070c1, AL, STRB(r1, r0, 0x003); /* [0x108ec147] */);
T(0x100b4710, 0x00004c0d, AL, LDR(r4, PC, 0x0034); /* [0x100b4748]:0x108ec135 */);
T(0x100b4712, 0x00007102, AL, STRB(r2, r0, 0x004); /* [0x108ec148] */);
T(0x100b4714, 0x00002303, AL, MOVS(r3, 0x03));
T(0x100b4716, 0x00007023, AL, STRB(r3, r4); /* [0x108ec135] */);
T(0x100b4718, 0x0000424b, AL, RSB(r3, r1));
T(0x100b471a, 0x00006103, AL, STR(r3, r0, 0x010); /* [0x108ec154] */);
T(0x100b471c, 0x00007141, AL, STRB(r1, r0, 0x005); /* [0x108ec149] */);
T(0x100b471e, 0x00007182, AL, STRB(r2, r0, 0x006); /* [0x108ec14a] */);
T(0x100b4720, 0xf7fff851, AL, BL(0x100b37c6); /* 0x100b4725 + 0x000000a2, LR = 0x100b4724 */);
T(0x100b4724, 0xf000ff08, AL, BL(0x100b5538); /* 0x100b4729 + 0x00000e10, LR = 0x100b4728 */);
T(0x100b4728, 0xf001fd0c, AL, BL(0x100b6144); /* 0x100b472d + 0x00000a18, LR = 0x100b472c */);
T(0x100b472c, 0xf000fbe7, AL, BL(0x100b4efe); /* 0x100b4731 + 0x000007ce, LR = 0x100b4730 */);
T(0x100b4730, 0x00004804, AL, LDR(r0, PC, 0x0010); /* [0x100b4744]:0x108ec15c */);
T(0x100b4732, 0x00006800, AL, LDR(r0, r0));
T(0x100b4734, 0xf0b2fc3a, AL, BL(0x10166fac); /* 0x100b4739 + 0x00000874, LR = 0x100b4738 */);
T(0x100b4738, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x100b37c6, 0x00004902, AL, LDR(r1, PC, 0x0008); /* [0x100b37d0]:0x108ec130 */);
T(0x100b37c8, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100b37ca, 0x00007008, AL, STRB(r0, r1); /* [0x108ec130] */);
T(0x100b37cc, 0x00007048, AL, STRB(r0, r1, 0x001); /* [0x108ec131] */);
T(0x100b37ce, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100b4efe, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x100b4f00, 0x00004c07, AL, LDR(r4, PC, 0x001c); /* [0x100b4f20]:0x102ca700 */);
T(0x100b4f02, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x102ca700 - 0x00000000 = 0x102ca700 */ XXX);
T(0x100b4f04, 0xf0b1ffd4, AL, BL(0x10166eb0); /* 0x100b4f09 + 0x00000fa8, LR = 0x100b4f08 */);
T(0x100b4f08, 0x00004904, AL, LDR(r1, PC, 0x0010); /* [0x100b4f1c]:0x108ec158 */);
T(0x100b4f0a, 0x00006048, AL, STR(r0, r1, 0x004); /* [0x108ec15c] */);
T(0x100b4f0c, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x102ca700 - 0x00000000 = 0x102ca700 */ XXX);
T(0x100b4f0e, 0xf002ff7f, AL, BL(0x100b7e10); /* 0x100b4f13 + 0x00000efe, LR = 0x100b4f12 */);
T(0x100b4f12, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x100b5538, 0x0000b4f0, AL, PUSH(rSP, r{....4567}););
T(0x100b553a, 0x00004812, AL, LDR(r0, PC, 0x0048); /* [0x100b5584]:0x108ee170 */);
T(0x100b553c, 0x00002400, AL, MOVS(r4, 0x00));
T(0x100b553e, 0x00007004, AL, STRB(r4, r0); /* [0x108ee170] */);
T(0x100b5540, 0x00004d11, AL, LDR(r5, PC, 0x0044); /* [0x100b5588]:0x102ca754 */);
T(0x100b5542, 0x00003004, AL, ADDS(r0, 0x04));
T(0x100b5544, 0x0000cd2e, AL, LDMIA(r5.WB, {.123.5..}));
T(0x100b5546, 0x0000c02e, AL, STMIA(r0.WB, {.123.5..}));
T(0x100b5548, 0x00004d0e, AL, LDR(r5, PC, 0x0038); /* [0x100b5584]:0x108ee170 */);
T(0x100b554a, 0x00003810, AL, SUBS(r0, 0x10));
T(0x100b554c, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100b554e, 0x00002606, AL, MOVS(r6, 0x06));
T(0x100b5550, 0x00003514, AL, ADDS(r5, 0x14));
T(0x100b5552, 0x00000091, AL, LSL(r1, r2, 0x02));
T(0x100b5554, 0x0000180b, AL, SUBS(r3, r1, r0);
T(0x100b5556, 0x0000789b, AL, LDRB(r3, r3, 0x002));
T(0x100b5558, 0x000006df, AL, LSL(r7, r3, 0x1b));
T(0x100b555a, 0x0000d406, MI, B(0x100b556a); /* 0x100b555e + 0x00c */);
T(0x100b555c, 0x00002708, AL, MOVS(r7, 0x08));
T(0x100b555e, 0x0000546f, AL, STRB(r7, r5, r1));
T(0x100b5560, 0x00001949, AL, SUBS(r1, r1, r5);
T(0x100b5562, 0x0000704c, AL, STRB(r4, r1, 0x001));
T(0x100b5564, 0x0000708b, AL, STRB(r3, r1, 0x002));
T(0x100b5566, 0x000070cc, AL, STRB(r4, r1, 0x003));
T(0x100b5568, 0x0000e005, AL, B(0x100b5574); /* 0x100b556b + 0x00a*/);

T(0x100b556a, 0x0000546e, AL, STRB(r6, r5, r1));
T(0x100b556c, 0x00002701, AL, MOVS(r7, 0x01));
T(0x100b556e, 0x00001949, AL, SUBS(r1, r1, r5);
T(0x100b5570, 0x0000704f, AL, STRB(r7, r1, 0x001));
T(0x100b5572, 0x0000708b, AL, STRB(r3, r1, 0x002));
T(0x100b5574, 0x000070cc, AL, STRB(r4, r1, 0x003));
T(0x100b5576, 0x00003201, AL, ADDS(r2, 0x01));
T(0x100b5578, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x100b557a, 0x00001412, AL, ASR(r2, r2, 0x10));
T(0x100b557c, 0x00002a04, AL, CMPS(r2, 0x04));
T(0x100b557e, 0x0000d3e8, CC, B(0x100b5552); /* 0x100b5582 + 0xffffffd0 */);
T(0x100b5580, 0x0000bcf0, AL, POP(rSP, r{....4567}););
T(0x100b5582, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100b5552, 0x00000091, AL, LSL(r1, r2, 0x02));
T(0x100b5554, 0x0000180b, AL, SUBS(r3, r1, r0);
T(0x100b5556, 0x0000789b, AL, LDRB(r3, r3, 0x002));
T(0x100b5558, 0x000006df, AL, LSL(r7, r3, 0x1b));
T(0x100b555a, 0x0000d406, MI, B(0x100b556a); /* 0x100b555e + 0x00c */);
T(0x100b555c, 0x00002708, AL, MOVS(r7, 0x08));
T(0x100b555e, 0x0000546f, AL, STRB(r7, r5, r1));
T(0x100b5560, 0x00001949, AL, SUBS(r1, r1, r5);
T(0x100b5562, 0x0000704c, AL, STRB(r4, r1, 0x001));
T(0x100b5564, 0x0000708b, AL, STRB(r3, r1, 0x002));
T(0x100b5566, 0x000070cc, AL, STRB(r4, r1, 0x003));
T(0x100b5568, 0x0000e005, AL, B(0x100b5574); /* 0x100b556b + 0x00a*/);

T(0x100b5574, 0x000070cc, AL, STRB(r4, r1, 0x003); /* [0x00000003] */);
T(0x100b5576, 0x00003201, AL, ADDS(r2, 0x01));
T(0x100b5578, 0x00000412, AL, LSL(r2, r2, 0x10));
T(0x100b557a, 0x00001412, AL, ASR(r2, r2, 0x10));
T(0x100b557c, 0x00002a04, AL, CMPS(r2, 0x04));
T(0x100b557e, 0x0000d3e8, CC, B(0x100b5552); /* 0x100b5582 + 0xffffffd0 */);
T(0x100b5580, 0x0000bcf0, AL, POP(rSP, r{....4567}););
T(0x100b5582, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100b6144, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100b6146, 0x00004a68, AL, LDR(r2, PC, 0x01a0); /* [0x100b62e8]:0x108ee198 */);
T(0x100b6148, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100b614a, 0x00005411, AL, STRB(r1, r2, r0));
T(0x100b614c, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100b614e, 0x00002805, AL, CMPS(r0, 0x05));
T(0x100b6150, 0x0000d3fb, CC, B(0x100b614a); /* 0x100b6154 + 0xfffffff6 */);
T(0x100b6152, 0x00004967, AL, LDR(r1, PC, 0x019c); /* [0x100b62f0]:0x1085d090 */);
T(0x100b6154, 0x00004865, AL, LDR(r0, PC, 0x0194); /* [0x100b62ec]:0x102ca814 */);
T(0x100b6156, 0x00007809, AL, LDRB(r1, r1));
T(0x100b6158, 0x00002901, AL, CMPS(r1, 0x01));
T(0x100b615a, 0x0000d000, EQ, B(0x100b615e); /* 0x100b615e + 0x000 */);
T(0x100b615c, 0x00003864, AL, SUBS(r0, 0x64));
T(0x100b615e, 0x00004962, AL, LDR(r1, PC, 0x0188); /* [0x100b62e8]:0x108ee198 */);
T(0x100b6160, 0x00003904, AL, SUBS(r1, 0x04));
T(0x100b6162, 0x00006008, AL, STR(r0, r1));
T(0x100b6164, 0x00004770, AL, BX(LR); /* 0x102ca814 */);

T(0x100b615e, 0x00004962, AL, LDR(r1, PC, 0x0188); /* [0x100b62e8]:0x108ee198 */);
T(0x100b6160, 0x00003904, AL, SUBS(r1, 0x04));
T(0x100b6162, 0x00006008, AL, STR(r0, r1));
T(0x100b6164, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100b7d96, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x100b7d98, 0xf045fa2d, AL, BL(0x100fd1f6); /* 0x100b7d9d + 0x0000045a, LR = 0x100b7d9c */);
T(0x100b7d9c, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x100b7d9e, 0xf7ddfc2d, AL, BL(0x100955fc); /* 0x100b7da3 + 0x0000085a, LR = 0x100b7da2 */);
T(0x100b7da2, 0xf045fdf0, AL, BL(0x100fd986); /* 0x100b7da7 + 0x00000be0, LR = 0x100b7da6 */);
T(0x100b7da6, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x100b7da8, 0xf7ddfc28, AL, BL(0x100955fc); /* 0x100b7dad + 0x00000850, LR = 0x100b7dac */);
T(0x100b7dac, 0xf0affffe, AL, BL(0x10167dac); /* 0x100b7db1 + 0x00000ffc, LR = 0x100b7db0 */);
T(0x100b7db0, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x100b7db2, 0xf7ddfc23, AL, BL(0x100955fc); /* 0x100b7db7 + 0x00000846, LR = 0x100b7db6 */);
T(0x100b7db6, 0xf045fa3f, AL, BL(0x100fd238); /* 0x100b7dbb + 0x0000047e, LR = 0x100b7dba */);
T(0x100b7dba, 0x0000480c, AL, LDR(r0, PC, 0x0030); /* [0x100b7dec]:0x108eef1c */);
T(0x100b7dbc, 0x00002104, AL, MOVS(r1, 0x04));
T(0x100b7dbe, 0x00003830, AL, SUBS(r0, 0x30));
T(0x100b7dc0, 0xf045fa7a, AL, BL(0x100fd2b8); /* 0x100b7dc5 + 0x000004f4, LR = 0x100b7dc4 */);
T(0x100b7dc4, 0x00001c04, AL, SUBS(r4, r0, 0x0);
T(0x100b7dc6, 0x0000480a, AL, LDR(r0, PC, 0x0028); /* [0x100b7df0]:0x102cabbc */);
T(0x100b7dc8, 0x00002101, AL, MOVS(r1, 0x01));
T(0x100b7dca, 0xf046f850, AL, BL(0x100fde6e); /* 0x100b7dcf + 0x000000a0, LR = 0x100b7dce */);
T(0x100b7dce, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100b7dd0, 0x00006560, AL, STR(r0, r4, 0x054));
T(0x100b7dd2, 0x00007060, AL, STRB(r0, r4, 0x001));
T(0x100b7dd4, 0xf000f80e, AL, BL(0x100b7df4); /* 0x100b7dd9 + 0x0000001c, LR = 0x100b7dd8 */);
T(0x100b7dd8, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x100955fc, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x100955fe, 0x00001c0a, AL, SUBS(r2, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10095600, 0x000021ff, AL, MOVS(r1, 0xff));
T(0x10095602, 0xf0c6e866, AL, BLX(0x1015b6d0); /* 0x10095607 + 0x000000cc, LR = 0x10095606 */);
T(0x10095606, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x100b7df4, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100b7df6, 0x00004b15, AL, LDR(r3, PC, 0x0054); /* [0x100b7e4c]:0x10aeef24 */);
T(0x100b7df8, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100b7dfa, 0x00000082, AL, LSL(r2, r0, 0x02));
T(0x100b7dfc, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100b7dfe, 0x0000281e, AL, CMPS(r0, 0x1e));
T(0x100b7e00, 0x00005099, AL, STR(r1, r3, r2));
T(0x100b7e02, 0x0000d3fa, CC, B(0x100b7dfa); /* 0x100b7e06 + 0xfffffff4 */);
T(0x100b7e04, 0x00004811, AL, LDR(r0, PC, 0x0044); /* [0x100b7e4c]:0x10aeef24 */);
T(0x100b7e06, 0x00003808, AL, SUBS(r0, 0x08));
T(0x100b7e08, 0x00006041, AL, STR(r1, r0, 0x004));
T(0x100b7e0a, 0x00002101, AL, MOVS(r1, 0x01));
T(0x100b7e0c, 0x00007001, AL, STRB(r1, r0));
T(0x100b7e0e, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100b7e10, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x100b7e12, 0x00004e0e, AL, LDR(r6, PC, 0x0038); /* [0x100b7e4c]:0x10aeef24 */);
T(0x100b7e14, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100b7e16, 0x00003e08, AL, SUBS(r6, 0x08));
T(0x100b7e18, 0x00007830, AL, LDRB(r0, r6));
T(0x100b7e1a, 0x00002500, AL, MOVS(r5, 0x00));
T(0x100b7e1c, 0x00002801, AL, CMPS(r0, 0x01));
T(0x100b7e1e, 0x0000d001, EQ, B(0x100b7e24); /* 0x100b7e22 + 0x002 */);
T(0x100b7e20, 0xf7ffffe8, AL, BL(0x100b7df4); /* 0x100b7e25 + 0x00000fd0, LR = 0x100b7e24 */);

T(0x100b7e24, 0x00006871, AL, LDR(r1, r6, 0x004); /* [0x00000004] */);
T(0x100b7e26, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100b7e28, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100b7e2a, 0x00004b08, AL, LDR(r3, PC, 0x0020); /* [0x100b7e4c]:0x10aeef24 */);
T(0x100b7e2c, 0x0000d908, LS, B(0x100b7e40); /* 0x100b7e30 + 0x010 */);
T(0x100b7e2e, 0x00000082, AL, LSL(r2, r0, 0x02));
T(0x100b7e30, 0x0000589a, AL, LDR(r2, r3, r2));
T(0x100b7e32, 0x000042a2, AL, CMP(r2, r4));
T(0x100b7e34, 0x0000d008, EQ, B(0x100b7e48); /* 0x100b7e38 + 0x010 */);
T(0x100b7e36, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100b7e38, 0x00004288, AL, CMP(r0, r1));
T(0x100b7e3a, 0x0000d3f8, CC, B(0x100b7e2e); /* 0x100b7e3e + 0xfffffff0 */);
T(0x100b7e3c, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100b7e3e, 0x0000d103, NE, B(0x100b7e48); /* 0x100b7e42 + 0x006 */);

T(0x100b7e40, 0x00000088, AL, LSL(r0, r1, 0x02));
T(0x100b7e42, 0x0000501c, AL, STR(r4, r3, r0));
T(0x100b7e44, 0x00003101, AL, ADDS(r1, 0x01));
T(0x100b7e46, 0x00006071, AL, STR(r1, r6, 0x004); /* [0x00000004] */);
T(0x100b7e48, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x100b7e48, 0x0000bd70, AL, POP(rSP, r{....456., PC}););

T(0x100d7e10, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x100d7e12, 0x00004f23, AL, LDR(r7, PC, 0x008c); /* [0x100d7ea0]:0x10af290c */);
T(0x100d7e14, 0x00002400, AL, MOVS(r4, 0x00));
T(0x100d7e16, 0x00002564, AL, MOVS(r5, 0x64));
T(0x100d7e18, 0x00004365, AL, MUL(r5, r4));
T(0x100d7e1a, 0x000019ee, AL, SUBS(r6, r5, r7);
T(0x100d7e1c, 0x00001d30, AL, SUBS(r0, r6, 0x4);
T(0x100d7e1e, 0xf08ffd19, AL, BL(0x10167854); /* 0x100d7e23 + 0x00000a32, LR = 0x100d7e22 */);
T(0x100d7e22, 0x0000a027, AL, ADD(r0, PC, 0x09c); /* 0x100d7ec2 */));
T(0x100d7e24, 0x00006170, AL, STR(r0, r6, 0x014));
T(0x100d7e26, 0x00000620, AL, LSL(r0, r4, 0x18));
T(0x100d7e28, 0x00000e00, AL, LSR(r0, r0, 0x18));
T(0x100d7e2a, 0xf000fbf9, AL, BL(0x100d8620); /* 0x100d7e2f + 0x000007f2, LR = 0x100d7e2e */);
T(0x100d7e2e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100d7e30, 0x00003401, AL, ADDS(r4, 0x01));
T(0x100d7e32, 0x00002c01, AL, CMPS(r4, 0x01));
T(0x100d7e34, 0x00005578, AL, STRB(r0, r7, r5));
T(0x100d7e36, 0x0000dbee, LT, B(0x100d7e16); /* 0x100d7e3a + 0xffffffdc */);
T(0x100d7e38, 0xf000fc01, AL, BL(0x100d863e); /* 0x100d7e3d + 0x00000802, LR = 0x100d7e3c */);
T(0x100d7e3c, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x100d8620, 0x00004978, AL, LDR(r1, PC, 0x01e0); /* [0x100d8804]:0xfffbecc0 */);
T(0x100d8622, 0x00002002, AL, MOVS(r0, 0x02));
T(0x100d8624, 0x00006308, AL, STR(r0, r1, 0x030); /* [0xfffbecf0] */);
T(0x100d8626, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100d863e, 0x00002101, AL, MOVS(r1, 0x01));
T(0x100d8640, 0x00004872, AL, LDR(r0, PC, 0x01c8); /* [0x100d880c]:0xfffbec00 */);
T(0x100d8642, 0x00000349, AL, LSL(r1, r1, 0x0d));
T(0x100d8644, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x100d8646, 0x000061c1, AL, STR(r1, r0, 0x01c); /* [0xfffbec1c] */);
T(0x100d8648, 0x000008c9, AL, LSR(r1, r1, 0x03));
T(0x100d864a, 0x000063c1, AL, STR(r1, r0, 0x03c); /* [0xfffbec3c] */);
T(0x100d864c, 0x00004c70, AL, LDR(r4, PC, 0x01c0); /* [0x100d8810]:0xfffe0100 */);
T(0x100d864e, 0x00002002, AL, MOVS(r0, 0x02));
T(0x100d8650, 0x000063e0, AL, STR(r0, r4, 0x03c); /* [0xfffe013c] */);
T(0x100d8652, 0xf08aec52, AL, BLX(0x10162ef8); /* 0x100d8657 + 0x000008a4, LR = 0x100d8656 */);
T(0x100d8656, 0x0000496f, AL, LDR(r1, PC, 0x01bc); /* [0x100d8814]:0xfffffeff */);
T(0x100d8658, 0x00006021, AL, STR(r1, r4); /* [0xfffe0100] */);
T(0x100d865a, 0x00006861, AL, LDR(r1, r4, 0x004); /* [0xfffe0104] */);
T(0x100d865c, 0x000022ff, AL, MOVS(r2, 0xff));
T(0x100d865e, 0x00003201, AL, ADDS(r2, 0x01));
T(0x100d8660, 0x00004391, AL, BIC(r1, r2));
T(0x100d8662, 0x00006061, AL, STR(r1, r4, 0x004); /* [0xfffe0104] */);
T(0x100d8664, 0xf08aec50, AL, BLX(0x10162f08); /* 0x100d8669 + 0x000008a0, LR = 0x100d8668 */);
T(0x100d8668, 0x0000bd10, AL, POP(rSP, r{....4..., PC}););

T(0x100df236, 0x0000b5f3, AL, PUSH(rSP, r{01..4567, LR}););
T(0x100df238, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df23a, 0x00000043, AL, LSL(r3, r0, 0x01));
T(0x100df23c, 0x00001818, AL, SUBS(r0, r3, r0);
T(0x100df23e, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x100df240, 0x0000b08d, AL, SUB(SP, 0x034));
T(0x100df242, 0x0000496d, AL, LDR(r1, PC, 0x01b4); /* [0x100df3f8]:0x102c7878 */);
T(0x100df244, 0x0000900c, AL, STR(r0, SP, 0x0030);
T(0x100df246, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x100df248, 0x00006843, AL, LDR(r3, r0, 0x004));
T(0x100df24a, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df24c, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x100df24e, 0x00009008, AL, STR(r0, SP, 0x0020);
T(0x100df250, 0x000043c0, AL, MVN(r0, r0));
T(0x100df252, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x100df254, 0x00002600, AL, MOVS(r6, 0x00));
T(0x100df256, 0x00002500, AL, MOVS(r5, 0x00));
T(0x100df258, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df25a, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x100df25c, 0x00009309, AL, STR(r3, SP, 0x0024);
T(0x100df25e, 0xf01dffc7, AL, BL(0x100fd1f0); /* 0x100df263 + 0x00000f8e, LR = 0x100df262 */);
T(0x100df262, 0x0000900b, AL, STR(r0, SP, 0x002c);
T(0x100df264, 0xf087fe98, AL, BL(0x10166f98); /* 0x100df269 + 0x00000d30, LR = 0x100df268 */);
T(0x100df268, 0x0000900a, AL, STR(r0, SP, 0x0028);
T(0x100df26a, 0x0000980a, AL, LDR(r0, SP, 0x0028);
T(0x100df26c, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df26e, 0x0000d006, EQ, B(0x100df27e); /* 0x100df272 + 0x00c */);
T(0x100df270, 0x0000980b, AL, LDR(r0, SP, 0x002c);
T(0x100df272, 0x0000990a, AL, LDR(r1, SP, 0x0028);
T(0x100df274, 0x00004281, AL, CMP(r1, r0));
T(0x100df276, 0x0000d002, EQ, B(0x100df27e); /* 0x100df27a + 0x004 */);
T(0x100df278, 0x0000485e, AL, LDR(r0, PC, 0x0178); /* [0x100df3f4]:0x10af8f24 */);
T(0x100df27a, 0xf088fb59, AL, BL(0x10167930); /* 0x100df27f + 0x000006b2, LR = 0x100df27e */);

T(0x100df27e, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df280, 0xf001fe98, AL, BL(0x100e0fb4); /* 0x100df285 + 0x00000d30, LR = 0x100df284 */);
T(0x100df284, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df286, 0x00009908, AL, LDR(r1, SP, 0x0020);
T(0x100df288, 0xf001fe1a, AL, BL(0x100e0ec0); /* 0x100df28d + 0x00000c34, LR = 0x100df28c */);
T(0x100df28c, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df28e, 0x000020ff, AL, MOVS(r0, 0xff));
T(0x100df290, 0x00009909, AL, LDR(r1, SP, 0x0024);
T(0x100df292, 0xf7fffa8a, AL, BL(0x100de7aa); /* 0x100df297 + 0x00000514, LR = 0x100df296 */);
T(0x100df296, 0x00001c21, AL, SUBS(r1, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df298, 0x00009809, AL, LDR(r0, SP, 0x0024);
T(0x100df29a, 0xf001fe14, AL, BL(0x100e0ec6); /* 0x100df29f + 0x00000c28, LR = 0x100df29e */);
T(0x100df29e, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df2a0, 0x00002090, AL, MOVS(r0, 0x90));
T(0x100df2a2, 0x00009909, AL, LDR(r1, SP, 0x0024);
T(0x100df2a4, 0xf7fffa81, AL, BL(0x100de7aa); /* 0x100df2a9 + 0x00000502, LR = 0x100df2a8 */);
T(0x100df2a8, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100df2aa, 0x00009100, AL, STR(r1, SP, 0x0000);
T(0x100df2ac, 0x00002101, AL, MOVS(r1, 0x01));
T(0x100df2ae, 0x00009401, AL, STR(r4, SP, 0x0004);
T(0x100df2b0, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100df2b2, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df2b4, 0x00009b09, AL, LDR(r3, SP, 0x0024);
T(0x100df2b6, 0xf7fffa8b, AL, BL(0x100de7d0); /* 0x100df2bb + 0x00000516, LR = 0x100df2ba */);
T(0x100df2ba, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100df2bc, 0x0000d108, NE, B(0x100df2d0); /* 0x100df2c0 + 0x010 */);
T(0x100df2be, 0x00004949, AL, LDR(r1, PC, 0x0124); /* [0x100df3e4]:0x10af8f38 */);
T(0x100df2c0, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100df2c2, 0x00007809, AL, LDRB(r1, r1));
T(0x100df2c4, 0x00000680, AL, LSL(r0, r0, 0x1a));
T(0x100df2c6, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100df2c8, 0x0000d009, EQ, B(0x100df2de); /* 0x100df2cc + 0x012 */);
T(0x100df2ca, 0x00002005, AL, MOVS(r0, 0x05));
T(0x100df2cc, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100df2ce, 0x0000e006, AL, B(0x100df2dc); /* 0x100df2d1 + 0x00c*/);

T(0x100de7aa, 0x00001c01, AL, SUBS(r1, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100de7ac, 0x00001c10, AL, SUBS(r0, r2, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100de7ae, 0x00004a53, AL, LDR(r2, PC, 0x014c); /* [0x100de8fc]:0x10af8f38 */);
T(0x100de7b0, 0x00007812, AL, LDRB(r2, r2));
T(0x100de7b2, 0x0000d106, NE, B(0x100de7c2); /* 0x100de7b6 + 0x00c */);
T(0x100de7b4, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100de7b6, 0x00000680, AL, LSL(r0, r0, 0x1a));
T(0x100de7b8, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x100de7ba, 0x0000d007, EQ, B(0x100de7cc); /* 0x100de7be + 0x00e */);
T(0x100de7bc, 0x00002005, AL, MOVS(r0, 0x05));
T(0x100de7be, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100de7c0, 0x0000e004, AL, B(0x100de7ca); /* 0x100de7c3 + 0x008*/);

T(0x100de7c2, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100de7c4, 0x000006c0, AL, LSL(r0, r0, 0x1b));
T(0x100de7c6, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x100de7c8, 0x0000d000, EQ, B(0x100de7cc); /* 0x100de7cc + 0x000 */);

T(0x100de7ca, 0x00000840, AL, LSR(r0, r0, 0x01));
T(0x100de7cc, 0x00007081, AL, STRB(r1, r0, 0x002));
T(0x100de7ce, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100de7cc, 0x00007081, AL, STRB(r1, r0, 0x002); /* [0x00000002] */);
T(0x100de7ce, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100de7d0, 0x0000b4f0, AL, PUSH(rSP, r{....4567}););
T(0x100de7d2, 0x0000b082, AL, SUB(SP, 0x008));
T(0x100de7d4, 0x00001c16, AL, SUBS(r6, r2, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100de7d6, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de7d8, 0x0000466f, AL, MOV(r7, SP));
T(0x100de7da, 0x00009c06, AL, LDR(r4, SP, 0x0018);
T(0x100de7dc, 0x00009d07, AL, LDR(r5, SP, 0x001c);
T(0x100de7de, 0x0000c704, AL, STMIA(r7.WB, {..2.....}));
T(0x100de7e0, 0x0000c704, AL, STMIA(r7.WB, {..2.....}));
T(0x100de7e2, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de7e4, 0x0000781a, AL, LDRB(r2, r3));
T(0x100de7e6, 0x00003f08, AL, SUBS(r7, 0x08));
T(0x100de7e8, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de7ea, 0x00004302, AL, ORR(r2, r0));
T(0x100de7ec, 0x0000701a, AL, STRB(r2, r3));
T(0x100de7ee, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100de7f0, 0x0000d017, EQ, B(0x100de822); /* 0x100de7f4 + 0x02e */);
T(0x100de7f2, 0x000078e2, AL, LDRB(r2, r4, 0x003));
T(0x100de7f4, 0x00002a09, AL, CMPS(r2, 0x09));
T(0x100de7f6, 0x0000d114, NE, B(0x100de822); /* 0x100de7fa + 0x028 */);
T(0x100de7f8, 0x0000785a, AL, LDRB(r2, r3, 0x001));
T(0x100de7fa, 0x000003c3, AL, LSL(r3, r0, 0x0f));
T(0x100de7fc, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100de7fe, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de800, 0x0000431a, AL, ORR(r2, r3));
T(0x100de802, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de804, 0x0000705a, AL, STRB(r2, r3, 0x001));
T(0x100de806, 0x0000789a, AL, LDRB(r2, r3, 0x002));
T(0x100de808, 0x000001c3, AL, LSL(r3, r0, 0x07));
T(0x100de80a, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100de80c, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de80e, 0x0000431a, AL, ORR(r2, r3));
T(0x100de810, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de812, 0x0000709a, AL, STRB(r2, r3, 0x002));
T(0x100de814, 0x000078da, AL, LDRB(r2, r3, 0x003));
T(0x100de816, 0x000009d2, AL, LSR(r2, r2, 0x07));
T(0x100de818, 0x000001d2, AL, LSL(r2, r2, 0x07));
T(0x100de81a, 0x00000e40, AL, LSR(r0, r0, 0x19));
T(0x100de81c, 0x00004310, AL, ORR(r0, r2));
T(0x100de81e, 0x000070d8, AL, STRB(r0, r3, 0x003));
T(0x100de820, 0x0000e040, AL, B(0x100de8a2); /* 0x100de823 + 0x080*/);

T(0x100de822, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100de824, 0x0000d02a, EQ, B(0x100de87c); /* 0x100de828 + 0x054 */);
T(0x100de826, 0x000078e2, AL, LDRB(r2, r4, 0x003));
T(0x100de828, 0x00002a0b, AL, CMPS(r2, 0x0b));
T(0x100de82a, 0x0000d127, NE, B(0x100de87c); /* 0x100de82e + 0x04e */);
T(0x100de82c, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de82e, 0x0000785a, AL, LDRB(r2, r3, 0x001));
T(0x100de830, 0x00000503, AL, LSL(r3, r0, 0x14));
T(0x100de832, 0x00000f1b, AL, LSR(r3, r3, 0x1c));
T(0x100de834, 0x00000912, AL, LSR(r2, r2, 0x04));
T(0x100de836, 0x00000112, AL, LSL(r2, r2, 0x04));
T(0x100de838, 0x0000431a, AL, ORR(r2, r3));
T(0x100de83a, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de83c, 0x0000705a, AL, STRB(r2, r3, 0x001));
T(0x100de83e, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100de840, 0x0000d104, NE, B(0x100de84c); /* 0x100de844 + 0x008 */);
T(0x100de842, 0x0000785a, AL, LDRB(r2, r3, 0x001));
T(0x100de844, 0x00002308, AL, MOVS(r3, 0x08));
T(0x100de846, 0x0000439a, AL, BIC(r2, r3));
T(0x100de848, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de84a, 0x0000705a, AL, STRB(r2, r3, 0x001));
T(0x100de84c, 0x00004a2c, AL, LDR(r2, PC, 0x00b0); /* [0x100de900]:0x102c7950 */);
T(0x100de84e, 0x00004b2d, AL, LDR(r3, PC, 0x00b4); /* [0x100de904]:0x10af72e8 */);
T(0x100de850, 0x00005d52, AL, LDRB(r2, r2, r5));
T(0x100de852, 0x00005c9a, AL, LDRB(r2, r3, r2));
T(0x100de854, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de856, 0x000040d0, AL, LSR(r0, r2));
T(0x100de858, 0x0000789a, AL, LDRB(r2, r3, 0x002));
T(0x100de85a, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de85c, 0x00004302, AL, ORR(r2, r0));
T(0x100de85e, 0x0000709a, AL, STRB(r2, r3, 0x002));
T(0x100de860, 0x000078da, AL, LDRB(r2, r3, 0x003));
T(0x100de862, 0x00000403, AL, LSL(r3, r0, 0x10));
T(0x100de864, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100de866, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de868, 0x0000431a, AL, ORR(r2, r3));
T(0x100de86a, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de86c, 0x000070da, AL, STRB(r2, r3, 0x003));
T(0x100de86e, 0x0000791a, AL, LDRB(r2, r3, 0x004));
T(0x100de870, 0x00000200, AL, LSL(r0, r0, 0x08));
T(0x100de872, 0x00000e00, AL, LSR(r0, r0, 0x18));
T(0x100de874, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de876, 0x00004310, AL, ORR(r0, r2));
T(0x100de878, 0x00007118, AL, STRB(r0, r3, 0x004));
T(0x100de87a, 0x0000e013, AL, B(0x100de8a2); /* 0x100de87d + 0x026*/);

T(0x100de84c, 0x00004a2c, AL, LDR(r2, PC, 0x00b0); /* [0x100de900]:0x102c7950 */);
T(0x100de84e, 0x00004b2d, AL, LDR(r3, PC, 0x00b4); /* [0x100de904]:0x10af72e8 */);
T(0x100de850, 0x00005d52, AL, LDRB(r2, r2, r5));
T(0x100de852, 0x00005c9a, AL, LDRB(r2, r3, r2));
T(0x100de854, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de856, 0x000040d0, AL, LSR(r0, r2));
T(0x100de858, 0x0000789a, AL, LDRB(r2, r3, 0x002));
T(0x100de85a, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de85c, 0x00004302, AL, ORR(r2, r0));
T(0x100de85e, 0x0000709a, AL, STRB(r2, r3, 0x002));
T(0x100de860, 0x000078da, AL, LDRB(r2, r3, 0x003));
T(0x100de862, 0x00000403, AL, LSL(r3, r0, 0x10));
T(0x100de864, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100de866, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de868, 0x0000431a, AL, ORR(r2, r3));
T(0x100de86a, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de86c, 0x000070da, AL, STRB(r2, r3, 0x003));
T(0x100de86e, 0x0000791a, AL, LDRB(r2, r3, 0x004));
T(0x100de870, 0x00000200, AL, LSL(r0, r0, 0x08));
T(0x100de872, 0x00000e00, AL, LSR(r0, r0, 0x18));
T(0x100de874, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de876, 0x00004310, AL, ORR(r0, r2));
T(0x100de878, 0x00007118, AL, STRB(r0, r3, 0x004));
T(0x100de87a, 0x0000e013, AL, B(0x100de8a2); /* 0x100de87d + 0x026*/);

T(0x100de87c, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de87e, 0x0000785a, AL, LDRB(r2, r3, 0x001));
T(0x100de880, 0x00000403, AL, LSL(r3, r0, 0x10));
T(0x100de882, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100de884, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de886, 0x0000431a, AL, ORR(r2, r3));
T(0x100de888, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de88a, 0x0000705a, AL, STRB(r2, r3, 0x001));
T(0x100de88c, 0x0000789a, AL, LDRB(r2, r3, 0x002));
T(0x100de88e, 0x00000203, AL, LSL(r3, r0, 0x08));
T(0x100de890, 0x00000e1b, AL, LSR(r3, r3, 0x18));
T(0x100de892, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de894, 0x0000431a, AL, ORR(r2, r3));
T(0x100de896, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100de898, 0x0000709a, AL, STRB(r2, r3, 0x002));
T(0x100de89a, 0x000078da, AL, LDRB(r2, r3, 0x003));
T(0x100de89c, 0x00000e00, AL, LSR(r0, r0, 0x18));
T(0x100de89e, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100de8a0, 0x00004310, AL, ORR(r0, r2));
T(0x100de8a2, 0x000070d8, AL, STRB(r0, r3, 0x003));
T(0x100de8a4, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100de8a6, 0x0000d008, EQ, B(0x100de8ba); /* 0x100de8aa + 0x010 */);
T(0x100de8a8, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100de8aa, 0x0000d004, EQ, B(0x100de8b6); /* 0x100de8ae + 0x008 */);
T(0x100de8ac, 0x000078e0, AL, LDRB(r0, r4, 0x003));
T(0x100de8ae, 0x0000280b, AL, CMPS(r0, 0x0b));
T(0x100de8b0, 0x0000d101, NE, B(0x100de8b6); /* 0x100de8b4 + 0x002 */);
T(0x100de8b2, 0x00007a20, AL, LDRB(r0, r4, 0x008));
T(0x100de8b4, 0x0000e002, AL, B(0x100de8ba); /* 0x100de8b7 + 0x004*/);

T(0x100de8a2, 0x000070d8, AL, STRB(r0, r3, 0x003); /* [0x00000003] */);
T(0x100de8a4, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100de8a6, 0x0000d008, EQ, B(0x100de8ba); /* 0x100de8aa + 0x010 */);
T(0x100de8a8, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100de8aa, 0x0000d004, EQ, B(0x100de8b6); /* 0x100de8ae + 0x008 */);
T(0x100de8ac, 0x000078e0, AL, LDRB(r0, r4, 0x003));
T(0x100de8ae, 0x0000280b, AL, CMPS(r0, 0x0b));
T(0x100de8b0, 0x0000d101, NE, B(0x100de8b6); /* 0x100de8b4 + 0x002 */);
T(0x100de8b2, 0x00007a20, AL, LDRB(r0, r4, 0x008));
T(0x100de8b4, 0x0000e002, AL, B(0x100de8ba); /* 0x100de8b7 + 0x004*/);

T(0x100de8b6, 0x000079e0, AL, LDRB(r0, r4, 0x007); /* [0x00000007] */);
T(0x100de8b8, 0x0000e000, AL, B(0x100de8ba); /* 0x100de8bb + 0x000*/);

T(0x100de8ba, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100de8bc, 0x00001a40, AL, ADDS(r0, r0, r1);
T(0x100de8be, 0x00004a0f, AL, LDR(r2, PC, 0x003c); /* [0x100de8fc]:0x10af8f38 */);
T(0x100de8c0, 0x000019c0, AL, SUBS(r0, r0, r7);
T(0x100de8c2, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100de8c4, 0x00007812, AL, LDRB(r2, r2));
T(0x100de8c6, 0x0000d106, NE, B(0x100de8d6); /* 0x100de8ca + 0x00c */);
T(0x100de8c8, 0x00002303, AL, MOVS(r3, 0x03));
T(0x100de8ca, 0x0000069b, AL, LSL(r3, r3, 0x1a));
T(0x100de8cc, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x100de8ce, 0x0000d007, EQ, B(0x100de8e0); /* 0x100de8d2 + 0x00e */);
T(0x100de8d0, 0x00002305, AL, MOVS(r3, 0x05));
T(0x100de8d2, 0x0000065b, AL, LSL(r3, r3, 0x19));
T(0x100de8d4, 0x0000e004, AL, B(0x100de8de); /* 0x100de8d7 + 0x008*/);

T(0x100de8d6, 0x00002301, AL, MOVS(r3, 0x01));
T(0x100de8d8, 0x000006db, AL, LSL(r3, r3, 0x1b));
T(0x100de8da, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x100de8dc, 0x0000d000, EQ, B(0x100de8e0); /* 0x100de8e0 + 0x000 */);

T(0x100de8de, 0x0000085b, AL, LSR(r3, r3, 0x01));
T(0x100de8e0, 0x00003304, AL, ADDS(r3, 0x04));
T(0x100de8e2, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100de8e4, 0x0000d005, EQ, B(0x100de8f2); /* 0x100de8e8 + 0x00a */);
T(0x100de8e6, 0x00007802, AL, LDRB(r2, r0); /* [0x00000000] */);
T(0x100de8e8, 0x0000701a, AL, STRB(r2, r3));
T(0x100de8ea, 0x00003901, AL, SUBS(r1, 0x01));
T(0x100de8ec, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100de8ee, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100de8f0, 0x0000d1f9, NE, B(0x100de8e6); /* 0x100de8f4 + 0xfffffff2 */);

T(0x100de8e0, 0x00003304, AL, ADDS(r3, 0x04));
T(0x100de8e2, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100de8e4, 0x0000d005, EQ, B(0x100de8f2); /* 0x100de8e8 + 0x00a */);
T(0x100de8e6, 0x00007802, AL, LDRB(r2, r0); /* [0x00000000] */);
T(0x100de8e8, 0x0000701a, AL, STRB(r2, r3));
T(0x100de8ea, 0x00003901, AL, SUBS(r1, 0x01));
T(0x100de8ec, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100de8ee, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100de8f0, 0x0000d1f9, NE, B(0x100de8e6); /* 0x100de8f4 + 0xfffffff2 */);

T(0x100de8f2, 0x0000b002, AL, ADD(SP, 0x008));
T(0x100de8f4, 0x0000bcf0, AL, POP(rSP, r{....4567}););
T(0x100de8f6, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100df2d0, 0x00004944, AL, LDR(r1, PC, 0x0110); /* [0x100df3e4]:0x10af8f38 */);
T(0x100df2d2, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100df2d4, 0x00007809, AL, LDRB(r1, r1));
T(0x100df2d6, 0x000006c0, AL, LSL(r0, r0, 0x1b));
T(0x100df2d8, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100df2da, 0x0000d000, EQ, B(0x100df2de); /* 0x100df2de + 0x000 */);

T(0x100df2dc, 0x00000840, AL, LSR(r0, r0, 0x01));
T(0x100df2de, 0x00007800, AL, LDRB(r0, r0));
T(0x100df2e0, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100df2e2, 0x00009007, AL, STR(r0, SP, 0x001c);
T(0x100df2e4, 0x0000d108, NE, B(0x100df2f8); /* 0x100df2e8 + 0x010 */);
T(0x100df2e6, 0x0000493f, AL, LDR(r1, PC, 0x00fc); /* [0x100df3e4]:0x10af8f38 */);
T(0x100df2e8, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100df2ea, 0x00007809, AL, LDRB(r1, r1));
T(0x100df2ec, 0x00000680, AL, LSL(r0, r0, 0x1a));
T(0x100df2ee, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100df2f0, 0x0000d009, EQ, B(0x100df306); /* 0x100df2f4 + 0x012 */);
T(0x100df2f2, 0x00002005, AL, MOVS(r0, 0x05));
T(0x100df2f4, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100df2f6, 0x0000e006, AL, B(0x100df304); /* 0x100df2f9 + 0x00c*/);

T(0x100df2de, 0x00007800, AL, LDRB(r0, r0));
T(0x100df2e0, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100df2e2, 0x00009007, AL, STR(r0, SP, 0x001c);
T(0x100df2e4, 0x0000d108, NE, B(0x100df2f8); /* 0x100df2e8 + 0x010 */);
T(0x100df2e6, 0x0000493f, AL, LDR(r1, PC, 0x00fc); /* [0x100df3e4]:0x10af8f38 */);
T(0x100df2e8, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100df2ea, 0x00007809, AL, LDRB(r1, r1));
T(0x100df2ec, 0x00000680, AL, LSL(r0, r0, 0x1a));
T(0x100df2ee, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100df2f0, 0x0000d009, EQ, B(0x100df306); /* 0x100df2f4 + 0x012 */);
T(0x100df2f2, 0x00002005, AL, MOVS(r0, 0x05));
T(0x100df2f4, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100df2f6, 0x0000e006, AL, B(0x100df304); /* 0x100df2f9 + 0x00c*/);

T(0x100df2f8, 0x0000493a, AL, LDR(r1, PC, 0x00e8); /* [0x100df3e4]:0x10af8f38 */);
T(0x100df2fa, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100df2fc, 0x00007809, AL, LDRB(r1, r1));
T(0x100df2fe, 0x000006c0, AL, LSL(r0, r0, 0x1b));
T(0x100df300, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100df302, 0x0000d000, EQ, B(0x100df306); /* 0x100df306 + 0x000 */);

T(0x100df304, 0x00000840, AL, LSR(r0, r0, 0x01));
T(0x100df306, 0x00007807, AL, LDRB(r7, r0));
T(0x100df308, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df30a, 0xf001fe53, AL, BL(0x100e0fb4); /* 0x100df30f + 0x00000ca6, LR = 0x100df30e */);
T(0x100df30e, 0x0000980a, AL, LDR(r0, SP, 0x0028);
T(0x100df310, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df312, 0x0000d006, EQ, B(0x100df322); /* 0x100df316 + 0x00c */);
T(0x100df314, 0x0000980b, AL, LDR(r0, SP, 0x002c);
T(0x100df316, 0x0000990a, AL, LDR(r1, SP, 0x0028);
T(0x100df318, 0x00004281, AL, CMP(r1, r0));
T(0x100df31a, 0x0000d002, EQ, B(0x100df322); /* 0x100df31e + 0x004 */);
T(0x100df31c, 0x00004835, AL, LDR(r0, PC, 0x00d4); /* [0x100df3f4]:0x10af8f24 */);
T(0x100df31e, 0xf088faa1, AL, BL(0x10167864); /* 0x100df323 + 0x00000542, LR = 0x100df322 */);

T(0x100df306, 0x00007807, AL, LDRB(r7, r0); /* [0x00000000] */);
T(0x100df308, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df30a, 0xf001fe53, AL, BL(0x100e0fb4); /* 0x100df30f + 0x00000ca6, LR = 0x100df30e */);
T(0x100df30e, 0x0000980a, AL, LDR(r0, SP, 0x0028);
T(0x100df310, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df312, 0x0000d006, EQ, B(0x100df322); /* 0x100df316 + 0x00c */);
T(0x100df314, 0x0000980b, AL, LDR(r0, SP, 0x002c);
T(0x100df316, 0x0000990a, AL, LDR(r1, SP, 0x0028);
T(0x100df318, 0x00004281, AL, CMP(r1, r0));
T(0x100df31a, 0x0000d002, EQ, B(0x100df322); /* 0x100df31e + 0x004 */);
T(0x100df31c, 0x00004835, AL, LDR(r0, PC, 0x00d4); /* [0x100df3f4]:0x10af8f24 */);
T(0x100df31e, 0xf088faa1, AL, BL(0x10167864); /* 0x100df323 + 0x00000542, LR = 0x100df322 */);

T(0x100df322, 0x00002f00, AL, CMPS(r7, 0x00));
T(0x100df324, 0x0000d10e, NE, B(0x100df344); /* 0x100df328 + 0x01c */);
T(0x100df326, 0x00004835, AL, LDR(r0, PC, 0x00d4); /* [0x100df3fc]:0x108ec146 */);
T(0x100df328, 0x00007800, AL, LDRB(r0, r0));
T(0x100df32a, 0x00002803, AL, CMPS(r0, 0x03));
T(0x100df32c, 0x0000d111, NE, B(0x100df352); /* 0x100df330 + 0x022 */);
T(0x100df32e, 0x00004932, AL, LDR(r1, PC, 0x00c8); /* [0x100df3f8]:0x102c7878 */);
T(0x100df330, 0x0000980c, AL, LDR(r0, SP, 0x0030);
T(0x100df332, 0x00005808, AL, LDR(r0, r1, r0));
T(0x100df334, 0x00007800, AL, LDRB(r0, r0));
T(0x100df336, 0x0000280a, AL, CMPS(r0, 0x0a));
T(0x100df338, 0x0000d004, EQ, B(0x100df344); /* 0x100df33c + 0x008 */);
T(0x100df33a, 0x00002815, AL, CMPS(r0, 0x15));
T(0x100df33c, 0x0000d002, EQ, B(0x100df344); /* 0x100df340 + 0x004 */);
T(0x100df33e, 0x000043f8, AL, MVN(r0, r7));
T(0x100df340, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x100df342, 0x00002601, AL, MOVS(r6, 0x01));
T(0x100df344, 0x00009808, AL, LDR(r0, SP, 0x0020);
T(0x100df346, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df348, 0x0000d10d, NE, B(0x100df366); /* 0x100df34c + 0x01a */);
T(0x100df34a, 0x00009807, AL, LDR(r0, SP, 0x001c);
T(0x100df34c, 0x00009705, AL, STR(r7, SP, 0x0014);
T(0x100df34e, 0x00009006, AL, STR(r0, SP, 0x0018);
T(0x100df350, 0x0000e023, AL, B(0x100df398); /* 0x100df353 + 0x046*/);

T(0x100df344, 0x00009808, AL, LDR(r0, SP, 0x0020);
T(0x100df346, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df348, 0x0000d10d, NE, B(0x100df366); /* 0x100df34c + 0x01a */);
T(0x100df34a, 0x00009807, AL, LDR(r0, SP, 0x001c);
T(0x100df34c, 0x00009705, AL, STR(r7, SP, 0x0014);
T(0x100df34e, 0x00009006, AL, STR(r0, SP, 0x0018);
T(0x100df350, 0x0000e023, AL, B(0x100df398); /* 0x100df353 + 0x046*/);

T(0x100df352, 0x00009808, AL, LDR(r0, SP, 0x0020);
T(0x100df354, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df356, 0x0000d106, NE, B(0x100df366); /* 0x100df35a + 0x00c */);
T(0x100df358, 0x000043c0, AL, MVN(r0, r0));
T(0x100df35a, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x100df35c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df35e, 0x00002601, AL, MOVS(r6, 0x01));
T(0x100df360, 0x00002501, AL, MOVS(r5, 0x01));
T(0x100df362, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x100df364, 0x0000e7f1, AL, B(0x100df348); /* 0x100df367 + 0xffffffe2*/);

T(0x100df348, 0x0000d10d, NE, B(0x100df366); /* 0x100df34c + 0x01a */);
T(0x100df34a, 0x00009807, AL, LDR(r0, SP, 0x001c);
T(0x100df34c, 0x00009705, AL, STR(r7, SP, 0x0014);
T(0x100df34e, 0x00009006, AL, STR(r0, SP, 0x0018);
T(0x100df350, 0x0000e023, AL, B(0x100df398); /* 0x100df353 + 0x046*/);

T(0x100df366, 0x00009805, AL, LDR(r0, SP, 0x0014);
T(0x100df368, 0x00004287, AL, CMP(r7, r0));
T(0x100df36a, 0x0000d008, EQ, B(0x100df37e); /* 0x100df36e + 0x010 */);
T(0x100df36c, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df36e, 0x0000d106, NE, B(0x100df37e); /* 0x100df372 + 0x00c */);
T(0x100df370, 0x00009805, AL, LDR(r0, SP, 0x0014);
T(0x100df372, 0x00002601, AL, MOVS(r6, 0x01));
T(0x100df374, 0x00009003, AL, STR(r0, SP, 0x000c);
T(0x100df376, 0x00009806, AL, LDR(r0, SP, 0x0018);
T(0x100df378, 0x00002501, AL, MOVS(r5, 0x01));
T(0x100df37a, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x100df37c, 0x0000e016, AL, B(0x100df3aa); /* 0x100df37f + 0x02c*/);

T(0x100df37e, 0x00009807, AL, LDR(r0, SP, 0x001c);
T(0x100df380, 0x00009906, AL, LDR(r1, SP, 0x0018);
T(0x100df382, 0x00004288, AL, CMP(r0, r1));
T(0x100df384, 0x0000d006, EQ, B(0x100df394); /* 0x100df388 + 0x00c */);
T(0x100df386, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100df388, 0x0000d104, NE, B(0x100df394); /* 0x100df38c + 0x008 */);
T(0x100df38a, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df38c, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x100df38e, 0x00002501, AL, MOVS(r5, 0x01));
T(0x100df390, 0x00009705, AL, STR(r7, SP, 0x0014);
T(0x100df392, 0x0000e004, AL, B(0x100df39c); /* 0x100df395 + 0x008*/);

T(0x100df394, 0x00009807, AL, LDR(r0, SP, 0x001c);
T(0x100df396, 0x00009705, AL, STR(r7, SP, 0x0014);
T(0x100df398, 0x00009006, AL, STR(r0, SP, 0x0018);
T(0x100df39a, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100df39c, 0x0000d001, EQ, B(0x100df3a2); /* 0x100df3a0 + 0x002 */);
T(0x100df39e, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df3a0, 0x0000d104, NE, B(0x100df3ac); /* 0x100df3a4 + 0x008 */);

T(0x100df398, 0x00009006, AL, STR(r0, SP, 0x0018);
T(0x100df39a, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100df39c, 0x0000d001, EQ, B(0x100df3a2); /* 0x100df3a0 + 0x002 */);
T(0x100df39e, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df3a0, 0x0000d104, NE, B(0x100df3ac); /* 0x100df3a4 + 0x008 */);

T(0x100df39c, 0x0000d001, EQ, B(0x100df3a2); /* 0x100df3a0 + 0x002 */);
T(0x100df39e, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df3a0, 0x0000d104, NE, B(0x100df3ac); /* 0x100df3a4 + 0x008 */);

T(0x100df3a2, 0x00009802, AL, LDR(r0, SP, 0x0008);
T(0x100df3a4, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100df3a6, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x100df3a8, 0x00000e00, AL, LSR(r0, r0, 0x18));
T(0x100df3aa, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x100df3ac, 0x00009808, AL, LDR(r0, SP, 0x0020);
T(0x100df3ae, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100df3b0, 0x00009008, AL, STR(r0, SP, 0x0020);
T(0x100df3b2, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100df3b4, 0x0000da05, GE, B(0x100df3c2); /* 0x100df3b8 + 0x00a */);
T(0x100df3b6, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100df3b8, 0x0000d107, NE, B(0x100df3ca); /* 0x100df3bc + 0x00e */);
T(0x100df3ba, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df3bc, 0x0000d100, NE, B(0x100df3c0); /* 0x100df3c0 + 0x000 */);
T(0x100df3be, 0x0000e754, AL, B(0x100df268); /* 0x100df3c1 + 0xfffffea8*/);

T(0x100df3aa, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x100df3ac, 0x00009808, AL, LDR(r0, SP, 0x0020);
T(0x100df3ae, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100df3b0, 0x00009008, AL, STR(r0, SP, 0x0020);
T(0x100df3b2, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100df3b4, 0x0000da05, GE, B(0x100df3c2); /* 0x100df3b8 + 0x00a */);
T(0x100df3b6, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100df3b8, 0x0000d107, NE, B(0x100df3ca); /* 0x100df3bc + 0x00e */);
T(0x100df3ba, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df3bc, 0x0000d100, NE, B(0x100df3c0); /* 0x100df3c0 + 0x000 */);
T(0x100df3be, 0x0000e754, AL, B(0x100df268); /* 0x100df3c1 + 0xfffffea8*/);

T(0x100df3ac, 0x00009808, AL, LDR(r0, SP, 0x0020);
T(0x100df3ae, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100df3b0, 0x00009008, AL, STR(r0, SP, 0x0020);
T(0x100df3b2, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100df3b4, 0x0000da05, GE, B(0x100df3c2); /* 0x100df3b8 + 0x00a */);
T(0x100df3b6, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100df3b8, 0x0000d107, NE, B(0x100df3ca); /* 0x100df3bc + 0x00e */);
T(0x100df3ba, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df3bc, 0x0000d100, NE, B(0x100df3c0); /* 0x100df3c0 + 0x000 */);
T(0x100df3be, 0x0000e754, AL, B(0x100df268); /* 0x100df3c1 + 0xfffffea8*/);

T(0x100df3c0, 0x0000e001, AL, B(0x100df3c4); /* 0x100df3c3 + 0x002*/);

T(0x100df3c2, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100df3c4, 0x0000d101, NE, B(0x100df3ca); /* 0x100df3c8 + 0x002 */);
T(0x100df3c6, 0x00009807, AL, LDR(r0, SP, 0x001c);
T(0x100df3c8, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x100df3ca, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df3cc, 0x0000d100, NE, B(0x100df3d0); /* 0x100df3d0 + 0x000 */);
T(0x100df3ce, 0x00009703, AL, STR(r7, SP, 0x000c);
T(0x100df3d0, 0x00009802, AL, LDR(r0, SP, 0x0008);
T(0x100df3d2, 0x0000990e, AL, LDR(r1, SP, 0x0038);
T(0x100df3d4, 0x00006008, AL, STR(r0, r1));
T(0x100df3d6, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x100df3d8, 0x00009f03, AL, LDR(r7, SP, 0x000c);
T(0x100df3da, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x100df3dc, 0x00004338, AL, ORR(r0, r7));
T(0x100df3de, 0x0000b00f, AL, ADD(SP, 0x03c));
T(0x100df3e0, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x100df3c4, 0x0000d101, NE, B(0x100df3ca); /* 0x100df3c8 + 0x002 */);
T(0x100df3c6, 0x00009807, AL, LDR(r0, SP, 0x001c);
T(0x100df3c8, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x100df3ca, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df3cc, 0x0000d100, NE, B(0x100df3d0); /* 0x100df3d0 + 0x000 */);
T(0x100df3ce, 0x00009703, AL, STR(r7, SP, 0x000c);
T(0x100df3d0, 0x00009802, AL, LDR(r0, SP, 0x0008);
T(0x100df3d2, 0x0000990e, AL, LDR(r1, SP, 0x0038);
T(0x100df3d4, 0x00006008, AL, STR(r0, r1));
T(0x100df3d6, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x100df3d8, 0x00009f03, AL, LDR(r7, SP, 0x000c);
T(0x100df3da, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x100df3dc, 0x00004338, AL, ORR(r0, r7));
T(0x100df3de, 0x0000b00f, AL, ADD(SP, 0x03c));
T(0x100df3e0, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x100df3ca, 0x00002e00, AL, CMPS(r6, 0x00));
T(0x100df3cc, 0x0000d100, NE, B(0x100df3d0); /* 0x100df3d0 + 0x000 */);
T(0x100df3ce, 0x00009703, AL, STR(r7, SP, 0x000c);
T(0x100df3d0, 0x00009802, AL, LDR(r0, SP, 0x0008);
T(0x100df3d2, 0x0000990e, AL, LDR(r1, SP, 0x0038);
T(0x100df3d4, 0x00006008, AL, STR(r0, r1));
T(0x100df3d6, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x100df3d8, 0x00009f03, AL, LDR(r7, SP, 0x000c);
T(0x100df3da, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x100df3dc, 0x00004338, AL, ORR(r0, r7));
T(0x100df3de, 0x0000b00f, AL, ADD(SP, 0x03c));
T(0x100df3e0, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x100df3d0, 0x00009802, AL, LDR(r0, SP, 0x0008);
T(0x100df3d2, 0x0000990e, AL, LDR(r1, SP, 0x0038);
T(0x100df3d4, 0x00006008, AL, STR(r0, r1));
T(0x100df3d6, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x100df3d8, 0x00009f03, AL, LDR(r7, SP, 0x000c);
T(0x100df3da, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x100df3dc, 0x00004338, AL, ORR(r0, r7));
T(0x100df3de, 0x0000b00f, AL, ADD(SP, 0x03c));
T(0x100df3e0, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x100df55a, 0x0000b5f0, AL, PUSH(rSP, r{....4567, LR}););
T(0x100df55c, 0x00004d5c, AL, LDR(r5, PC, 0x0170); /* [0x100df6d0]:0x10af7308 */);
T(0x100df55e, 0x0000b085, AL, SUB(SP, 0x014));
T(0x100df560, 0x00002600, AL, MOVS(r6, 0x00));
T(0x100df562, 0x0000542e, AL, STRB(r6, r5, r0));
T(0x100df564, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df566, 0x00004959, AL, LDR(r1, PC, 0x0164); /* [0x100df6cc]:0x1085d0ec */);
T(0x100df568, 0x00000140, AL, LSL(r0, r0, 0x05));
T(0x100df56a, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x100df56c, 0x00006940, AL, LDR(r0, r0, 0x014));
T(0x100df56e, 0x00006801, AL, LDR(r1, r0));
T(0x100df570, 0x00001c4b, AL, SUBS(r3, r1, 0x1);
T(0x100df572, 0x0000d103, NE, B(0x100df57c); /* 0x100df576 + 0x006 */);
T(0x100df574, 0x00002002, AL, MOVS(r0, 0x02));
T(0x100df576, 0x00005528, AL, STRB(r0, r5, r4));
T(0x100df578, 0x0000b005, AL, ADD(SP, 0x014));
T(0x100df57a, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x100df57c, 0x00006846, AL, LDR(r6, r0, 0x004); /* [0x00000004] */);
T(0x100df57e, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100df580, 0x000078f1, AL, LDRB(r1, r6, 0x003));
T(0x100df582, 0x00004088, AL, LSL(r0, r1));
T(0x100df584, 0x00000407, AL, LSL(r7, r0, 0x10));
T(0x100df586, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100df588, 0x00000240, AL, LSL(r0, r0, 0x09));
T(0x100df58a, 0x00000c3f, AL, LSR(r7, r7, 0x10));
T(0x100df58c, 0x00004287, AL, CMP(r7, r0));
T(0x100df58e, 0x0000d903, LS, B(0x100df598); /* 0x100df592 + 0x006 */);
T(0x100df590, 0x00004d4f, AL, LDR(r5, PC, 0x013c); /* [0x100df6d0]:0x10af7308 */);
T(0x100df592, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100df594, 0x00005528, AL, STRB(r0, r5, r4));
T(0x100df596, 0x0000e7ef, AL, B(0x100df576); /* 0x100df599 + 0xffffffde*/);

T(0x100df576, 0x00005528, AL, STRB(r0, r5, r4));
T(0x100df578, 0x0000b005, AL, ADD(SP, 0x014));
T(0x100df57a, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x100df598, 0x00000060, AL, LSL(r0, r4, 0x01));
T(0x100df59a, 0x00001900, AL, SUBS(r0, r0, r4);
T(0x100df59c, 0x0000494a, AL, LDR(r1, PC, 0x0128); /* [0x100df6c8]:0x102c7878 */);
T(0x100df59e, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x100df5a0, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x100df5a2, 0x00006845, AL, LDR(r5, r0, 0x004));
T(0x100df5a4, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df5a6, 0x00009004, AL, STR(r0, SP, 0x0010);
T(0x100df5a8, 0x0000484e, AL, LDR(r0, PC, 0x0138); /* [0x100df6e4]:0x10af8f24 */);
T(0x100df5aa, 0xf088f9c1, AL, BL(0x10167930); /* 0x100df5af + 0x00000382, LR = 0x100df5ae */);
T(0x100df5ae, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df5b0, 0xf001fd00, AL, BL(0x100e0fb4); /* 0x100df5b5 + 0x00000a00, LR = 0x100df5b4 */);
T(0x100df5b4, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100df5b6, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df5b8, 0xf001fc82, AL, BL(0x100e0ec0); /* 0x100df5bd + 0x00000904, LR = 0x100df5bc */);
T(0x100df5bc, 0x000078f0, AL, LDRB(r0, r6, 0x003); /* [0x00000003] */);
T(0x100df5be, 0x0000280b, AL, CMPS(r0, 0x0b));
T(0x100df5c0, 0x0000d133, NE, B(0x100df62a); /* 0x100df5c4 + 0x066 */);
T(0x100df5c2, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df5c4, 0x00001c29, AL, SUBS(r1, r5, 0x0);
T(0x100df5c6, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df5c8, 0xf7fff8ef, AL, BL(0x100de7aa); /* 0x100df5cd + 0x000001de, LR = 0x100df5cc */);
T(0x100df5cc, 0x00009600, AL, STR(r6, SP, 0x0000);
T(0x100df5ce, 0x00009401, AL, STR(r4, SP, 0x0004);
T(0x100df5d0, 0x000079f1, AL, LDRB(r1, r6, 0x007); /* [0x00000007] */);
T(0x100df5d2, 0x00001c2b, AL, SUBS(r3, r5, 0x0);
T(0x100df5d4, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100df5d6, 0x00009804, AL, LDR(r0, SP, 0x0010);
T(0x100df5d8, 0xf7fff8fa, AL, BL(0x100de7d0); /* 0x100df5dd + 0x000001f4, LR = 0x100df5dc */);
T(0x100df5dc, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df5de, 0x00001c29, AL, SUBS(r1, r5, 0x0);
T(0x100df5e0, 0x00002030, AL, MOVS(r0, 0x30));
T(0x100df5e2, 0xf7fff8e2, AL, BL(0x100de7aa); /* 0x100df5e7 + 0x000001c4, LR = 0x100df5e6 */);
T(0x100df5e6, 0x00001c21, AL, SUBS(r1, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df5e8, 0x00001c28, AL, SUBS(r0, r5, 0x0);
T(0x100df5ea, 0xf001fc6c, AL, BL(0x100e0ec6); /* 0x100df5ef + 0x000008d8, LR = 0x100df5ee */);
T(0x100df5ee, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df5f0, 0x0000d003, EQ, B(0x100df5fa); /* 0x100df5f4 + 0x006 */);
T(0x100df5f2, 0x00004d37, AL, LDR(r5, PC, 0x00dc); /* [0x100df6d0]:0x10af7308 */);
T(0x100df5f4, 0x00002002, AL, MOVS(r0, 0x02));
T(0x100df5f6, 0x00005528, AL, STRB(r0, r5, r4));
T(0x100df5f8, 0x0000e055, AL, B(0x100df6a4); /* 0x100df5fb + 0x0aa*/);

T(0x100df5fa, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df5fc, 0x00001c29, AL, SUBS(r1, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df5fe, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df600, 0xf7fff8d3, AL, BL(0x100de7aa); /* 0x100df605 + 0x000001a6, LR = 0x100df604 */);
T(0x100df604, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df606, 0x00001c29, AL, SUBS(r1, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df608, 0x00002005, AL, MOVS(r0, 0x05));
T(0x100df60a, 0xf7fff8ce, AL, BL(0x100de7aa); /* 0x100df60f + 0x0000019c, LR = 0x100df60e */);
T(0x100df60e, 0x00009600, AL, STR(r6, SP, 0x0000);
T(0x100df610, 0x00009401, AL, STR(r4, SP, 0x0004);
T(0x100df612, 0x00001c2b, AL, SUBS(r3, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df614, 0x00002201, AL, MOVS(r2, 0x01));
T(0x100df616, 0x00001c38, AL, SUBS(r0, r7, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df618, 0x00007a31, AL, LDRB(r1, r6, 0x008); /* [0x00000008] */);
T(0x100df61a, 0xf7fff8d9, AL, BL(0x100de7d0); /* 0x100df61f + 0x000001b2, LR = 0x100df61e */);
T(0x100df61e, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df620, 0x00001c29, AL, SUBS(r1, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df622, 0x000020e0, AL, MOVS(r0, 0xe0));
T(0x100df624, 0xf7fff8c1, AL, BL(0x100de7aa); /* 0x100df629 + 0x00000182, LR = 0x100df628 */);
T(0x100df628, 0x0000e01b, AL, B(0x100df660); /* 0x100df62b + 0x036*/);

T(0x100df62a, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df62c, 0x00001c29, AL, SUBS(r1, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df62e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df630, 0xf7fff8bb, AL, BL(0x100de7aa); /* 0x100df635 + 0x00000176, LR = 0x100df634 */);
T(0x100df634, 0x00001c38, AL, SUBS(r0, r7, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df636, 0x00001c2b, AL, SUBS(r3, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df638, 0x00009600, AL, STR(r6, SP, 0x0000);
T(0x100df63a, 0x00009401, AL, STR(r4, SP, 0x0004);
T(0x100df63c, 0x000079f1, AL, LDRB(r1, r6, 0x007); /* [0x00000007] */);
T(0x100df63e, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100df640, 0xf7fff8c6, AL, BL(0x100de7d0); /* 0x100df645 + 0x0000018c, LR = 0x100df644 */);
T(0x100df644, 0x00001c21, AL, SUBS(r1, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df646, 0x00001c28, AL, SUBS(r0, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df648, 0xf001fc3d, AL, BL(0x100e0ec6); /* 0x100df64d + 0x0000087a, LR = 0x100df64c */);
T(0x100df64c, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df64e, 0x0000d003, EQ, B(0x100df658); /* 0x100df652 + 0x006 */);
T(0x100df650, 0x00004d1f, AL, LDR(r5, PC, 0x007c); /* [0x100df6d0]:0x10af7308 */);
T(0x100df652, 0x00002002, AL, MOVS(r0, 0x02));
T(0x100df654, 0x00005528, AL, STRB(r0, r5, r4));
T(0x100df656, 0x0000e026, AL, B(0x100df6a4); /* 0x100df659 + 0x04c*/);

T(0x100df658, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df65a, 0x00001c29, AL, SUBS(r1, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df65c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100df65e, 0xf7fff8a4, AL, BL(0x100de7aa); /* 0x100df663 + 0x00000148, LR = 0x100df662 */);
T(0x100df662, 0x00004d1b, AL, LDR(r5, PC, 0x006c); /* [0x100df6d0]:0x10af7308 */);
T(0x100df664, 0x00005d28, AL, LDRB(r0, r5, r4));
T(0x100df666, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100df668, 0x0000d01d, EQ, B(0x100df6a6); /* 0x100df66c + 0x03a */);
T(0x100df66a, 0x0000481f, AL, LDR(r0, PC, 0x007c); /* [0x100df6e8]:0x10af8f38 */);
T(0x100df66c, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100df66e, 0x0000d107, NE, B(0x100df680); /* 0x100df672 + 0x00e */);
T(0x100df670, 0x00007800, AL, LDRB(r0, r0));
T(0x100df672, 0x00002103, AL, MOVS(r1, 0x03));
T(0x100df674, 0x00000689, AL, LSL(r1, r1, 0x1a));
T(0x100df676, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df678, 0x0000d008, EQ, B(0x100df68c); /* 0x100df67c + 0x010 */);
T(0x100df67a, 0x00002105, AL, MOVS(r1, 0x05));
T(0x100df67c, 0x00000649, AL, LSL(r1, r1, 0x19));
T(0x100df67e, 0x0000e005, AL, B(0x100df68a); /* 0x100df681 + 0x00a*/);

T(0x100df660, 0x0000f8a4, AL, BL(0x00000148); /* 0x100df663 + 0x00000148, LR = 0x100df662 */);
T(0x100df662, 0x00004d1b, AL, LDR(r5, PC, 0x006c); /* [0x100df6d0]:0x10af7308 */);
T(0x100df664, 0x00005d28, AL, LDRB(r0, r5, r4));
T(0x100df666, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100df668, 0x0000d01d, EQ, B(0x100df6a6); /* 0x100df66c + 0x03a */);
T(0x100df66a, 0x0000481f, AL, LDR(r0, PC, 0x007c); /* [0x100df6e8]:0x10af8f38 */);
T(0x100df66c, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100df66e, 0x0000d107, NE, B(0x100df680); /* 0x100df672 + 0x00e */);
T(0x100df670, 0x00007800, AL, LDRB(r0, r0));
T(0x100df672, 0x00002103, AL, MOVS(r1, 0x03));
T(0x100df674, 0x00000689, AL, LSL(r1, r1, 0x1a));
T(0x100df676, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df678, 0x0000d008, EQ, B(0x100df68c); /* 0x100df67c + 0x010 */);
T(0x100df67a, 0x00002105, AL, MOVS(r1, 0x05));
T(0x100df67c, 0x00000649, AL, LSL(r1, r1, 0x19));
T(0x100df67e, 0x0000e005, AL, B(0x100df68a); /* 0x100df681 + 0x00a*/);

T(0x100df680, 0x00007800, AL, LDRB(r0, r0));
T(0x100df682, 0x00002101, AL, MOVS(r1, 0x01));
T(0x100df684, 0x000006c9, AL, LSL(r1, r1, 0x1b));
T(0x100df686, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100df688, 0x0000d000, EQ, B(0x100df68c); /* 0x100df68c + 0x000 */);

T(0x100df68a, 0x00000849, AL, LSR(r1, r1, 0x01));
T(0x100df68c, 0x00002600, AL, MOVS(r6, 0x00));
T(0x100df68e, 0x00001c33, AL, SUBS(r3, r6, 0x0);
T(0x100df690, 0x00002204, AL, MOVS(r2, 0x04));
T(0x100df692, 0x0000a803, AL, ADD(r0, SP, 0x00c)));
T(0x100df694, 0xf086ecd0, AL, BLX(0x10166038); /* 0x100df699 + 0x000009a0, LR = 0x100df698 */);
T(0x100df698, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100df69a, 0x00007bd8, AL, LDRB(r0, r3, 0x00f));
T(0x100df69c, 0x00002801, AL, CMPS(r0, 0x01));
T(0x100df69e, 0x0000d101, NE, B(0x100df6a4); /* 0x100df6a2 + 0x002 */);
T(0x100df6a0, 0x00005528, AL, STRB(r0, r5, r4));
T(0x100df6a2, 0x0000e000, AL, B(0x100df6a4); /* 0x100df6a5 + 0x000*/);

T(0x100df68c, 0x00002600, AL, MOVS(r6, 0x00));
T(0x100df68e, 0x00001c33, AL, SUBS(r3, r6, 0x0);
T(0x100df690, 0x00002204, AL, MOVS(r2, 0x04));
T(0x100df692, 0x0000a803, AL, ADD(r0, SP, 0x00c)));
T(0x100df694, 0xf086ecd0, AL, BLX(0x10166038); /* 0x100df699 + 0x000009a0, LR = 0x100df698 */);
T(0x100df698, 0x0000ab00, AL, ADD(r3, SP, 0x000)));
T(0x100df69a, 0x00007bd8, AL, LDRB(r0, r3, 0x00f));
T(0x100df69c, 0x00002801, AL, CMPS(r0, 0x01));
T(0x100df69e, 0x0000d101, NE, B(0x100df6a4); /* 0x100df6a2 + 0x002 */);
T(0x100df6a0, 0x00005528, AL, STRB(r0, r5, r4));
T(0x100df6a2, 0x0000e000, AL, B(0x100df6a4); /* 0x100df6a5 + 0x000*/);

T(0x100df6a4, 0x0000552e, AL, STRB(r6, r5, r4));
T(0x100df6a6, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df6a8, 0xf001fc84, AL, BL(0x100e0fb4); /* 0x100df6ad + 0x00000908, LR = 0x100df6ac */);
T(0x100df6ac, 0x0000480d, AL, LDR(r0, PC, 0x0034); /* [0x100df6e4]:0x10af8f24 */);
T(0x100df6ae, 0xf088f8d9, AL, BL(0x10167864); /* 0x100df6b3 + 0x000001b2, LR = 0x100df6b2 */);
T(0x100df6b2, 0x00004d07, AL, LDR(r5, PC, 0x001c); /* [0x100df6d0]:0x10af7308 */);
T(0x100df6b4, 0x00005d28, AL, LDRB(r0, r5, r4));
T(0x100df6b6, 0x0000e75f, AL, B(0x100df576); /* 0x100df6b9 + 0xfffffebe*/);

T(0x100df6a6, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100df6a8, 0xf001fc84, AL, BL(0x100e0fb4); /* 0x100df6ad + 0x00000908, LR = 0x100df6ac */);
T(0x100df6ac, 0x0000480d, AL, LDR(r0, PC, 0x0034); /* [0x100df6e4]:0x10af8f24 */);
T(0x100df6ae, 0xf088f8d9, AL, BL(0x10167864); /* 0x100df6b3 + 0x000001b2, LR = 0x100df6b2 */);
T(0x100df6b2, 0x00004d07, AL, LDR(r5, PC, 0x001c); /* [0x100df6d0]:0x10af7308 */);
T(0x100df6b4, 0x00005d28, AL, LDRB(r0, r5, r4));
T(0x100df6b6, 0x0000e75f, AL, B(0x100df576); /* 0x100df6b9 + 0xfffffebe*/);

T(0x100e0e0e, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x100e0e10, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100e0e12, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100e0e14, 0x00002807, AL, CMPS(r0, 0x07));
T(0x100e0e16, 0x0000dbfc, LT, B(0x100e0e12); /* 0x100e0e1a + 0xfffffff8 */);
T(0x100e0e18, 0x00004c1b, AL, LDR(r4, PC, 0x006c); /* [0x100e0e88]:0x10af8f24 */);
T(0x100e0e1a, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x10af8f24 - 0x00000000 = 0x10af8f24 */ XXX);
T(0x100e0e1c, 0xf086fd1a, AL, BL(0x10167854); /* 0x100e0e21 + 0x00000a34, LR = 0x100e0e20 */);
T(0x100e0e20, 0x0000a01c, AL, ADD(r0, PC, 0x070); /* 0x100e0e94 */));
T(0x100e0e22, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x10af8f34] */);
T(0x100e0e24, 0x00004c1f, AL, LDR(r4, PC, 0x007c); /* [0x100e0ea4]:0x10af7710 */);
T(0x100e0e26, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x10af7710 - 0x00000000 = 0x10af7710 */ XXX);
T(0x100e0e28, 0xf086fd14, AL, BL(0x10167854); /* 0x100e0e2d + 0x00000a28, LR = 0x100e0e2c */);
T(0x100e0e2c, 0x0000a01e, AL, ADD(r0, PC, 0x078); /* 0x100e0ea8 */));
T(0x100e0e2e, 0x000021ff, AL, MOVS(r1, 0xff));
T(0x100e0e30, 0x0000314d, AL, ADDS(r1, 0x4d));
T(0x100e0e32, 0x00006120, AL, STR(r0, r4, 0x010); /* [0x10af7720] */);
T(0x100e0e34, 0x00001a60, AL, ADDS(r0, r4, r1); /* 0x10af7710 + 0x00000000 = 0x10af7710 */ XXX);
T(0x100e0e36, 0xf07aeb38, AL, BLX(0x1015b4a8); /* 0x100e0e3b + 0x00000670, LR = 0x100e0e3a */);
T(0x100e0e3a, 0x00002301, AL, MOVS(r3, 0x01));
T(0x100e0e3c, 0x00004c1e, AL, LDR(r4, PC, 0x0078); /* [0x100e0eb8]:0x10af72e4 */);
T(0x100e0e3e, 0x0000025b, AL, LSL(r3, r3, 0x09));
T(0x100e0e40, 0x0000491d, AL, LDR(r1, PC, 0x0074); /* [0x100e0eb8]:0x10af72e4 */);
T(0x100e0e42, 0x0000340a, AL, ADDS(r4, 0x0a));
T(0x100e0e44, 0x00001fa5, AL, ADDS(r5, r4, 0x6);
T(0x100e0e46, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100e0e48, 0x00002609, AL, MOVS(r6, 0x09));
T(0x100e0e4a, 0x0000804b, AL, STRH(r3, r1, 0x002); /* [0x10af72e6] */);
T(0x100e0e4c, 0x00004f1a, AL, LDR(r7, PC, 0x0068); /* [0x100e0eb8]:0x10af72e4 */);
T(0x100e0e4e, 0x00002210, AL, MOVS(r2, 0x10));
T(0x100e0e50, 0x00000041, AL, LSL(r1, r0, 0x01));
T(0x100e0e52, 0x00003706, AL, ADDS(r7, 0x06));
T(0x100e0e54, 0x0000527a, AL, STRH(r2, r7, r1));
T(0x100e0e56, 0x0000542e, AL, STRB(r6, r5, r0));
T(0x100e0e58, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100e0e5a, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100e0e5c, 0x00005263, AL, STRH(r3, r4, r1));
T(0x100e0e5e, 0x0000dbf5, LT, B(0x100e0e4c); /* 0x100e0e62 + 0xffffffea */);
T(0x100e0e60, 0xf000f9d8, AL, BL(0x100e1214); /* 0x100e0e65 + 0x000003b0, LR = 0x100e0e64 */);
T(0x100e0e64, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100e0e66, 0x000043c0, AL, MVN(r0, r0));
T(0x100e0e68, 0x00001fb9, AL, ADDS(r1, r7, 0x6);
T(0x100e0e6a, 0x00006108, AL, STR(r0, r1, 0x010));
T(0x100e0e6c, 0x00006148, AL, STR(r0, r1, 0x014));
T(0x100e0e6e, 0x00002201, AL, MOVS(r2, 0x01));
T(0x100e0e70, 0x0000700a, AL, STRB(r2, r1));
T(0x100e0e72, 0x00006188, AL, STR(r0, r1, 0x018));
T(0x100e0e74, 0x00006208, AL, STR(r0, r1, 0x020));
T(0x100e0e76, 0x000061c8, AL, STR(r0, r1, 0x01c));
T(0x100e0e78, 0x000002d2, AL, LSL(r2, r2, 0x0b));
T(0x100e0e7a, 0x000021ff, AL, MOVS(r1, 0xff));
T(0x100e0e7c, 0x0000480f, AL, LDR(r0, PC, 0x003c); /* [0x100e0ebc]:0x10af7f24 */);
T(0x100e0e7e, 0xf07aec28, AL, BLX(0x1015b6d0); /* 0x100e0e83 + 0x00000850, LR = 0x100e0e82 */);
T(0x100e0e82, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x100e0ec0, 0x000048ce, AL, LDR(r0, PC, 0x0338); /* [0x100e11fc]:0x10af8f38 */);
T(0x100e0ec2, 0x00007001, AL, STRB(r1, r0); /* [0x10af8f38] */);
T(0x100e0ec4, 0x00004770, AL, BX(LR); /* 0x10af8f38 */);

T(0x100e0ec6, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x100e0ec8, 0x00001c05, AL, SUBS(r5, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0eca, 0x00001c0c, AL, SUBS(r4, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0ecc, 0xf086f864, AL, BL(0x10166f98); /* 0x100e0ed1 + 0x000000c8, LR = 0x100e0ed0 */);
T(0x100e0ed0, 0x00002701, AL, MOVS(r7, 0x01));
T(0x100e0ed2, 0x000006bf, AL, LSL(r7, r7, 0x1a));
T(0x100e0ed4, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100e0ed6, 0x0000d02d, EQ, B(0x100e0f34); /* 0x100e0eda + 0x05a */);
T(0x100e0ed8, 0x000049c9, AL, LDR(r1, PC, 0x0324); /* [0x100e1200]:0x10ce794c */);
T(0x100e0eda, 0x00006809, AL, LDR(r1, r1));
T(0x100e0edc, 0x00004288, AL, CMP(r0, r1));
T(0x100e0ede, 0x0000d029, EQ, B(0x100e0f34); /* 0x100e0ee2 + 0x052 */);
T(0x100e0ee0, 0xf086ff54, AL, BL(0x10167d8c); /* 0x100e0ee5 + 0x00000ea8, LR = 0x100e0ee4 */);
T(0x100e0ee4, 0x00001c06, AL, SUBS(r6, r0, 0x0);
T(0x100e0ee6, 0xf086ff51, AL, BL(0x10167d8c); /* 0x100e0eeb + 0x00000ea2, LR = 0x100e0eea */);
T(0x100e0eea, 0x00001b80, AL, ADDS(r0, r0, r6);
T(0x100e0eec, 0x00002864, AL, CMPS(r0, 0x64));
T(0x100e0eee, 0x0000d843, HI, B(0x100e0f78); /* 0x100e0ef2 + 0x086 */);
T(0x100e0ef0, 0x00001c22, AL, SUBS(r2, r4, 0x0);
T(0x100e0ef2, 0x00001c29, AL, SUBS(r1, r5, 0x0);
T(0x100e0ef4, 0x00002070, AL, MOVS(r0, 0x70));
T(0x100e0ef6, 0xf7fdfc58, AL, BL(0x100de7aa); /* 0x100e0efb + 0x000008b0, LR = 0x100e0efa */);
T(0x100e0efa, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100e0efc, 0x0000d108, NE, B(0x100e0f10); /* 0x100e0f00 + 0x010 */);
T(0x100e0efe, 0x000049bf, AL, LDR(r1, PC, 0x02fc); /* [0x100e11fc]:0x10af8f38 */);
T(0x100e0f00, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100e0f02, 0x00007809, AL, LDRB(r1, r1));
T(0x100e0f04, 0x00000680, AL, LSL(r0, r0, 0x1a));
T(0x100e0f06, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100e0f08, 0x0000d009, EQ, B(0x100e0f1e); /* 0x100e0f0c + 0x012 */);
T(0x100e0f0a, 0x00002005, AL, MOVS(r0, 0x05));
T(0x100e0f0c, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0f0e, 0x0000e006, AL, B(0x100e0f1c); /* 0x100e0f11 + 0x00c*/);

T(0x100e0f10, 0x000049ba, AL, LDR(r1, PC, 0x02e8); /* [0x100e11fc]:0x10af8f38 */);
T(0x100e0f12, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100e0f14, 0x00007809, AL, LDRB(r1, r1));
T(0x100e0f16, 0x000006c0, AL, LSL(r0, r0, 0x1b));
T(0x100e0f18, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100e0f1a, 0x0000d000, EQ, B(0x100e0f1e); /* 0x100e0f1e + 0x000 */);

T(0x100e0f1c, 0x00001c38, AL, SUBS(r0, r7, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0f1e, 0x00008800, AL, LDRH(r0, r0));
T(0x100e0f20, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0f22, 0x0000d501, PL, B(0x100e0f28); /* 0x100e0f26 + 0x002 */);
T(0x100e0f24, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100e0f26, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x100e0f1e, 0x00008800, AL, LDRH(r0, r0));
T(0x100e0f20, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0f22, 0x0000d501, PL, B(0x100e0f28); /* 0x100e0f26 + 0x002 */);
T(0x100e0f24, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100e0f26, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x100e0f28, 0xf086ff30, AL, BL(0x10167d8c); /* 0x100e0f2d + 0x00000e60, LR = 0x100e0f2c */);
T(0x100e0f2c, 0x00001b80, AL, ADDS(r0, r0, r6);
T(0x100e0f2e, 0x00002864, AL, CMPS(r0, 0x64));
T(0x100e0f30, 0x0000d9de, LS, B(0x100e0ef0); /* 0x100e0f34 + 0xffffffbc */);
T(0x100e0f32, 0x0000e021, AL, B(0x100e0f76); /* 0x100e0f35 + 0x042*/);

T(0x100e0f34, 0x00002601, AL, MOVS(r6, 0x01));
T(0x100e0f36, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0f38, 0x00001c29, AL, SUBS(r1, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0f3a, 0x00002070, AL, MOVS(r0, 0x70));
T(0x100e0f3c, 0xf7fdfc35, AL, BL(0x100de7aa); /* 0x100e0f41 + 0x0000086a, LR = 0x100e0f40 */);
T(0x100e0f40, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100e0f42, 0x0000d108, NE, B(0x100e0f56); /* 0x100e0f46 + 0x010 */);
T(0x100e0f44, 0x000049ad, AL, LDR(r1, PC, 0x02b4); /* [0x100e11fc]:0x10af8f38 */);
T(0x100e0f46, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100e0f48, 0x00007809, AL, LDRB(r1, r1));
T(0x100e0f4a, 0x00000680, AL, LSL(r0, r0, 0x1a));
T(0x100e0f4c, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100e0f4e, 0x0000d009, EQ, B(0x100e0f64); /* 0x100e0f52 + 0x012 */);
T(0x100e0f50, 0x00002005, AL, MOVS(r0, 0x05));
T(0x100e0f52, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0f54, 0x0000e006, AL, B(0x100e0f62); /* 0x100e0f57 + 0x00c*/);

T(0x100e0f56, 0x000049a9, AL, LDR(r1, PC, 0x02a4); /* [0x100e11fc]:0x10af8f38 */);
T(0x100e0f58, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100e0f5a, 0x00007809, AL, LDRB(r1, r1));
T(0x100e0f5c, 0x000006c0, AL, LSL(r0, r0, 0x1b));
T(0x100e0f5e, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100e0f60, 0x0000d000, EQ, B(0x100e0f64); /* 0x100e0f64 + 0x000 */);

T(0x100e0f62, 0x00001c38, AL, SUBS(r0, r7, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0f64, 0x00008800, AL, LDRH(r0, r0));
T(0x100e0f66, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0f68, 0x0000d501, PL, B(0x100e0f6e); /* 0x100e0f6c + 0x002 */);
T(0x100e0f6a, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100e0f6c, 0x0000e7db, AL, B(0x100e0f24); /* 0x100e0f6f + 0xffffffb6*/);

T(0x100e0f64, 0x00008800, AL, LDRH(r0, r0));
T(0x100e0f66, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0f68, 0x0000d501, PL, B(0x100e0f6e); /* 0x100e0f6c + 0x002 */);
T(0x100e0f6a, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100e0f6c, 0x0000e7db, AL, B(0x100e0f24); /* 0x100e0f6f + 0xffffffb6*/);

T(0x100e0f6e, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0f70, 0x000049a4, AL, LDR(r1, PC, 0x0290); /* [0x100e1204]:0x00001388 */);
T(0x100e0f72, 0x00003601, AL, ADDS(r6, 0x01));
T(0x100e0f74, 0x00004288, AL, CMP(r0, r1));
T(0x100e0f76, 0x0000d3de, CC, B(0x100e0f36); /* 0x100e0f7a + 0xffffffbc */);

T(0x100e0f36, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0f38, 0x00001c29, AL, SUBS(r1, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0f3a, 0x00002070, AL, MOVS(r0, 0x70));
T(0x100e0f3c, 0xf7fdfc35, AL, BL(0x100de7aa); /* 0x100e0f41 + 0x0000086a, LR = 0x100e0f40 */);
T(0x100e0f40, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100e0f42, 0x0000d108, NE, B(0x100e0f56); /* 0x100e0f46 + 0x010 */);
T(0x100e0f44, 0x000049ad, AL, LDR(r1, PC, 0x02b4); /* [0x100e11fc]:0x10af8f38 */);
T(0x100e0f46, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100e0f48, 0x00007809, AL, LDRB(r1, r1));
T(0x100e0f4a, 0x00000680, AL, LSL(r0, r0, 0x1a));
T(0x100e0f4c, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100e0f4e, 0x0000d009, EQ, B(0x100e0f64); /* 0x100e0f52 + 0x012 */);
T(0x100e0f50, 0x00002005, AL, MOVS(r0, 0x05));
T(0x100e0f52, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0f54, 0x0000e006, AL, B(0x100e0f62); /* 0x100e0f57 + 0x00c*/);

T(0x100e0f76, 0x0000d3de, CC, B(0x100e0f36); /* 0x100e0f7a + 0xffffffbc */);

T(0x100e0f78, 0x00001c22, AL, SUBS(r2, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0f7a, 0x00001c29, AL, SUBS(r1, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0f7c, 0x00002070, AL, MOVS(r0, 0x70));
T(0x100e0f7e, 0xf7fdfc14, AL, BL(0x100de7aa); /* 0x100e0f83 + 0x00000828, LR = 0x100e0f82 */);
T(0x100e0f82, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100e0f84, 0x0000d108, NE, B(0x100e0f98); /* 0x100e0f88 + 0x010 */);
T(0x100e0f86, 0x0000499d, AL, LDR(r1, PC, 0x0274); /* [0x100e11fc]:0x10af8f38 */);
T(0x100e0f88, 0x00002003, AL, MOVS(r0, 0x03));
T(0x100e0f8a, 0x00007809, AL, LDRB(r1, r1));
T(0x100e0f8c, 0x00000680, AL, LSL(r0, r0, 0x1a));
T(0x100e0f8e, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100e0f90, 0x0000d009, EQ, B(0x100e0fa6); /* 0x100e0f94 + 0x012 */);
T(0x100e0f92, 0x00002005, AL, MOVS(r0, 0x05));
T(0x100e0f94, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0f96, 0x0000e006, AL, B(0x100e0fa4); /* 0x100e0f99 + 0x00c*/);

T(0x100e0f98, 0x00004998, AL, LDR(r1, PC, 0x0260); /* [0x100e11fc]:0x10af8f38 */);
T(0x100e0f9a, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100e0f9c, 0x00007809, AL, LDRB(r1, r1));
T(0x100e0f9e, 0x000006c0, AL, LSL(r0, r0, 0x1b));
T(0x100e0fa0, 0x00002900, AL, CMPS(r1, 0x00));
T(0x100e0fa2, 0x0000d000, EQ, B(0x100e0fa6); /* 0x100e0fa6 + 0x000 */);

T(0x100e0fa4, 0x00001c38, AL, SUBS(r0, r7, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e0fa6, 0x00008800, AL, LDRH(r0, r0));
T(0x100e0fa8, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0faa, 0x0000d501, PL, B(0x100e0fb0); /* 0x100e0fae + 0x002 */);
T(0x100e0fac, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100e0fae, 0x0000e7ba, AL, B(0x100e0f24); /* 0x100e0fb1 + 0xffffff74*/);

T(0x100e0fa6, 0x00008800, AL, LDRH(r0, r0));
T(0x100e0fa8, 0x00000640, AL, LSL(r0, r0, 0x19));
T(0x100e0faa, 0x0000d501, PL, B(0x100e0fb0); /* 0x100e0fae + 0x002 */);
T(0x100e0fac, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100e0fae, 0x0000e7ba, AL, B(0x100e0f24); /* 0x100e0fb1 + 0xffffff74*/);

T(0x100e0fb0, 0x00002001, AL, MOVS(r0, 0x01));
T(0x100e0fb2, 0x0000e7b8, AL, B(0x100e0f24); /* 0x100e0fb5 + 0xffffff70*/);

T(0x100e0fb4, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100e1214, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x100e1216, 0x00004e1c, AL, LDR(r6, PC, 0x0070); /* [0x100e1288]:0x102c7ae4 */);
T(0x100e1218, 0x00004d1a, AL, LDR(r5, PC, 0x0068); /* [0x100e1284]:0x102c79a4 */);
T(0x100e121a, 0x00002400, AL, MOVS(r4, 0x00));
T(0x100e121c, 0x00000060, AL, LSL(r0, r4, 0x01));
T(0x100e121e, 0x00001900, AL, SUBS(r0, r0, r4);
T(0x100e1220, 0x0000491a, AL, LDR(r1, PC, 0x0068); /* [0x100e128c]:0x102c7878 */);
T(0x100e1222, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x100e1224, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x100e1226, 0x00007a00, AL, LDRB(r0, r0, 0x008));
T(0x100e1228, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100e122a, 0x0000d127, NE, B(0x100e127c); /* 0x100e122e + 0x04e */);
T(0x100e122c, 0x00004669, AL, MOV(r1, SP));
T(0x100e122e, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x100e1230, 0xf7fef801, AL, BL(0x100df236); /* 0x100e1235 + 0x00000002, LR = 0x100e1234 */);
T(0x100e1234, 0x00008832, AL, LDRH(r2, r6); /* [0x102c7ae4] */);
T(0x100e1236, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100e1238, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x100e123a, 0x0000dd1f, LE, B(0x100e127c); /* 0x100e123e + 0x03e */);
T(0x100e123c, 0x0000008a, AL, LSL(r2, r1, 0x02));
T(0x100e123e, 0x00001852, AL, SUBS(r2, r2, r1);
T(0x100e1240, 0x00000092, AL, LSL(r2, r2, 0x02));
T(0x100e1242, 0x000058aa, AL, LDR(r2, r5, r2));
T(0x100e1244, 0x00004282, AL, CMP(r2, r0));
T(0x100e1246, 0x0000d115, NE, B(0x100e1274); /* 0x100e124a + 0x02a */);
T(0x100e1248, 0x00000088, AL, LSL(r0, r1, 0x02));
T(0x100e124a, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x100e124c, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x100e124e, 0x00001940, AL, SUBS(r0, r0, r5);
T(0x100e1250, 0x00006842, AL, LDR(r2, r0, 0x004));
T(0x100e1252, 0x0000480f, AL, LDR(r0, PC, 0x003c); /* [0x100e1290]:0x102c7950 */);
T(0x100e1254, 0x000078d1, AL, LDRB(r1, r2, 0x003));
T(0x100e1256, 0x00005d00, AL, LDRB(r0, r0, r4));
T(0x100e1258, 0x00004b0e, AL, LDR(r3, PC, 0x0038); /* [0x100e1294]:0x10af72e8 */);
T(0x100e125a, 0x00005419, AL, STRB(r1, r3, r0));
T(0x100e125c, 0x00002304, AL, MOVS(r3, 0x04));
T(0x100e125e, 0x000056d7, AL, STRBS(r7, r2, r3));
T(0x100e1260, 0x00002301, AL, MOVS(r3, 0x01));
T(0x100e1262, 0x00001c1a, AL, SUBS(r2, r3, 0x0);
T(0x100e1264, 0x000040ba, AL, LSL(r2, r7));
T(0x100e1266, 0x00000040, AL, LSL(r0, r0, 0x01));
T(0x100e1268, 0x0000408b, AL, LSL(r3, r1));
T(0x100e126a, 0x00004f0b, AL, LDR(r7, PC, 0x002c); /* [0x100e1298]:0x10af72ea */);
T(0x100e126c, 0x0000490b, AL, LDR(r1, PC, 0x002c); /* [0x100e129c]:0x10af72ee */);
T(0x100e126e, 0x0000523a, AL, STRH(r2, r7, r0));
T(0x100e1270, 0x0000520b, AL, STRH(r3, r1, r0));
T(0x100e1272, 0x0000e003, AL, B(0x100e127a); /* 0x100e1275 + 0x006*/);

T(0x100e1274, 0x00008832, AL, LDRH(r2, r6); /* [0x00000000] */);
T(0x100e1276, 0x00003101, AL, ADDS(r1, 0x01));
T(0x100e1278, 0x00004291, AL, CMP(r1, r2));
T(0x100e127a, 0x0000dbdf, LT, B(0x100e123c); /* 0x100e127e + 0xffffffbe */);

T(0x100e127a, 0x0000dbdf, LT, B(0x100e123c); /* 0x100e127e + 0xffffffbe */);

T(0x100e127c, 0x00003401, AL, ADDS(r4, 0x01));
T(0x100e127e, 0x00002c07, AL, CMPS(r4, 0x07));
T(0x100e1280, 0x0000dbcc, LT, B(0x100e121c); /* 0x100e1284 + 0xffffff98 */);
T(0x100e1282, 0x0000bdf8, AL, POP(rSP, r{...34567, PC}););

T(0x100e121c, 0x00000060, AL, LSL(r0, r4, 0x01));
T(0x100e121e, 0x00001900, AL, SUBS(r0, r0, r4);
T(0x100e1220, 0x0000491a, AL, LDR(r1, PC, 0x0068); /* [0x100e128c]:0x102c7878 */);
T(0x100e1222, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x100e1224, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x100e1226, 0x00007a00, AL, LDRB(r0, r0, 0x008));
T(0x100e1228, 0x00002802, AL, CMPS(r0, 0x02));
T(0x100e122a, 0x0000d127, NE, B(0x100e127c); /* 0x100e122e + 0x04e */);
T(0x100e122c, 0x00004669, AL, MOV(r1, SP));
T(0x100e122e, 0x00001c20, AL, SUBS(r0, r4, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100e1230, 0xf7fef801, AL, BL(0x100df236); /* 0x100e1235 + 0x00000002, LR = 0x100e1234 */);
T(0x100e1234, 0x00008832, AL, LDRH(r2, r6); /* [0x00000000] */);
T(0x100e1236, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100e1238, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x100e123a, 0x0000dd1f, LE, B(0x100e127c); /* 0x100e123e + 0x03e */);
T(0x100e123c, 0x0000008a, AL, LSL(r2, r1, 0x02));
T(0x100e123e, 0x00001852, AL, SUBS(r2, r2, r1);
T(0x100e1240, 0x00000092, AL, LSL(r2, r2, 0x02));
T(0x100e1242, 0x000058aa, AL, LDR(r2, r5, r2));
T(0x100e1244, 0x00004282, AL, CMP(r2, r0));
T(0x100e1246, 0x0000d115, NE, B(0x100e1274); /* 0x100e124a + 0x02a */);
T(0x100e1248, 0x00000088, AL, LSL(r0, r1, 0x02));
T(0x100e124a, 0x00001840, AL, SUBS(r0, r0, r1);
T(0x100e124c, 0x00000080, AL, LSL(r0, r0, 0x02));
T(0x100e124e, 0x00001940, AL, SUBS(r0, r0, r5);
T(0x100e1250, 0x00006842, AL, LDR(r2, r0, 0x004));
T(0x100e1252, 0x0000480f, AL, LDR(r0, PC, 0x003c); /* [0x100e1290]:0x102c7950 */);
T(0x100e1254, 0x000078d1, AL, LDRB(r1, r2, 0x003));
T(0x100e1256, 0x00005d00, AL, LDRB(r0, r0, r4));
T(0x100e1258, 0x00004b0e, AL, LDR(r3, PC, 0x0038); /* [0x100e1294]:0x10af72e8 */);
T(0x100e125a, 0x00005419, AL, STRB(r1, r3, r0));
T(0x100e125c, 0x00002304, AL, MOVS(r3, 0x04));
T(0x100e125e, 0x000056d7, AL, STRBS(r7, r2, r3));
T(0x100e1260, 0x00002301, AL, MOVS(r3, 0x01));
T(0x100e1262, 0x00001c1a, AL, SUBS(r2, r3, 0x0);
T(0x100e1264, 0x000040ba, AL, LSL(r2, r7));
T(0x100e1266, 0x00000040, AL, LSL(r0, r0, 0x01));
T(0x100e1268, 0x0000408b, AL, LSL(r3, r1));
T(0x100e126a, 0x00004f0b, AL, LDR(r7, PC, 0x002c); /* [0x100e1298]:0x10af72ea */);
T(0x100e126c, 0x0000490b, AL, LDR(r1, PC, 0x002c); /* [0x100e129c]:0x10af72ee */);
T(0x100e126e, 0x0000523a, AL, STRH(r2, r7, r0));
T(0x100e1270, 0x0000520b, AL, STRH(r3, r1, r0));
T(0x100e1272, 0x0000e003, AL, B(0x100e127a); /* 0x100e1275 + 0x006*/);

T(0x100fd1f0, 0x0000480f, AL, LDR(r0, PC, 0x003c); /* [0x100fd230]:0x10ce794c */);
T(0x100fd1f2, 0x00006800, AL, LDR(r0, r0));
T(0x100fd1f4, 0x00004770, AL, BX(LR); /* 0x10ce794c */);

T(0x100fd1f6, 0x0000480e, AL, LDR(r0, PC, 0x0038); /* [0x100fd230]:0x10ce794c */);
T(0x100fd1f8, 0x00003018, AL, ADDS(r0, 0x18));
T(0x100fd1fa, 0x0000212d, AL, MOVS(r1, 0x2d));
T(0x100fd1fc, 0x00004770, AL, BX(LR); /* 0x10ce794c */);

T(0x100fd238, 0x0000b538, AL, PUSH(rSP, r{...345.., LR}););
T(0x100fd23a, 0x00004c1b, AL, LDR(r4, PC, 0x006c); /* [0x100fd2a8]:0x10ce7a18 */);
T(0x100fd23c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100fd23e, 0x00006020, AL, STR(r0, r4); /* [0x10ce7a18] */);
T(0x100fd240, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x10ce7a1c] */);
T(0x100fd242, 0x00004819, AL, LDR(r0, PC, 0x0064); /* [0x100fd2a8]:0x10ce7a18 */);
T(0x100fd244, 0x00002300, AL, MOVS(r3, 0x00));
T(0x100fd246, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100fd248, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100fd24a, 0x00003030, AL, ADDS(r0, 0x30));
T(0x100fd24c, 0x0000c00e, AL, STMIA(r0.WB, {.123....}));
T(0x100fd24e, 0x0000c00c, AL, STMIA(r0.WB, {..23....}));
T(0x100fd250, 0x00004916, AL, LDR(r1, PC, 0x0058); /* [0x100fd2ac]:0x10168055 */);
T(0x100fd252, 0x00003814, AL, SUBS(r0, 0x14));
T(0x100fd254, 0x00006001, AL, STR(r1, r0));
T(0x100fd256, 0x00004914, AL, LDR(r1, PC, 0x0050); /* [0x100fd2a8]:0x10ce7a18 */);
T(0x100fd258, 0x00002501, AL, MOVS(r5, 0x01));
T(0x100fd25a, 0x000031f8, AL, ADDS(r1, 0xf8));
T(0x100fd25c, 0x00006081, AL, STR(r1, r0, 0x008));
T(0x100fd25e, 0x00007385, AL, STRB(r5, r0, 0x00e));
T(0x100fd260, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100fd262, 0x000073c1, AL, STRB(r1, r0, 0x00f));
T(0x100fd264, 0xf7ffffcb, AL, BL(0x100fd1fe); /* 0x100fd269 + 0x00000f96, LR = 0x100fd268 */);
T(0x100fd268, 0x00004811, AL, LDR(r0, PC, 0x0044); /* [0x100fd2b0]:0x10ce794c */);
T(0x100fd26a, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100fd26c, 0x00006800, AL, LDR(r0, r0));
T(0x100fd26e, 0x00006060, AL, STR(r0, r4, 0x004); /* [0x10ce7a1c] */);
T(0x100fd270, 0x00007585, AL, STRB(r5, r0, 0x016));
T(0x100fd272, 0x00006001, AL, STR(r1, r0));
T(0x100fd274, 0x00006861, AL, LDR(r1, r4, 0x004); /* [0x10ce7a1c] */);
T(0x100fd276, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100fd278, 0x00007448, AL, STRB(r0, r1, 0x011));
T(0x100fd27a, 0x00007408, AL, STRB(r0, r1, 0x010));
T(0x100fd27c, 0xf06afec8, AL, BL(0x10168010); /* 0x100fd281 + 0x00000d90, LR = 0x100fd280 */);
T(0x100fd280, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100fd282, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100fd284, 0xf000f818, AL, BL(0x100fd2b8); /* 0x100fd289 + 0x00000030, LR = 0x100fd288 */);
T(0x100fd288, 0x00003408, AL, ADDS(r4, 0x08));
T(0x100fd28a, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x100fd28c, 0xf042fc20, AL, BL(0x1013fad0); /* 0x100fd291 + 0x00000840, LR = 0x100fd290 */);
T(0x100fd290, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100fd292, 0x00004905, AL, LDR(r1, PC, 0x0014); /* [0x100fd2a8]:0x10ce7a18 */);
T(0x100fd294, 0x00009200, AL, STR(r2, SP, 0x0000);
T(0x100fd296, 0x0000066a, AL, LSL(r2, r5, 0x19));
T(0x100fd298, 0x00003120, AL, ADDS(r1, 0x20));
T(0x100fd29a, 0x00001c20, AL, SUBS(r0, r4, 0x0);
T(0x100fd29c, 0x00004b05, AL, LDR(r3, PC, 0x0014); /* [0x100fd2b4]:0x10167b21 */);
T(0x100fd29e, 0xf042fc3b, AL, BL(0x1013fb18); /* 0x100fd2a3 + 0x00000876, LR = 0x100fd2a2 */);
T(0x100fd2a2, 0x0000bc38, AL, POP(rSP, r{...345..}););
T(0x100fd2a4, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x100fd2a6, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x100fd1fe, 0x0000480c, AL, LDR(r0, PC, 0x0030); /* [0x100fd230]:0x10ce794c */);
T(0x100fd200, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x100fd202, 0x00002300, AL, MOVS(r3, 0x00));
T(0x100fd204, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100fd206, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100fd208, 0x00003004, AL, ADDS(r0, 0x04));
T(0x100fd20a, 0x0000c00e, AL, STMIA(r0.WB, {.123....}));
T(0x100fd20c, 0x0000c00c, AL, STMIA(r0.WB, {..23....}));
T(0x100fd20e, 0x00004909, AL, LDR(r1, PC, 0x0024); /* [0x100fd234]:0x100fd1e9 */);
T(0x100fd210, 0x00003814, AL, SUBS(r0, 0x14));
T(0x100fd212, 0x00006001, AL, STR(r1, r0));
T(0x100fd214, 0x00004906, AL, LDR(r1, PC, 0x0018); /* [0x100fd230]:0x10ce794c */);
T(0x100fd216, 0x000031cc, AL, ADDS(r1, 0xcc));
T(0x100fd218, 0x00006081, AL, STR(r1, r0, 0x008));
T(0x100fd21a, 0x000021fe, AL, MOVS(r1, 0xfe));
T(0x100fd21c, 0x00007381, AL, STRB(r1, r0, 0x00e));
T(0x100fd21e, 0x00002100, AL, MOVS(r1, 0x00));
T(0x100fd220, 0x000073c1, AL, STRB(r1, r0, 0x00f));
T(0x100fd222, 0xf069fe45, AL, BL(0x10166eb0); /* 0x100fd227 + 0x00000c8a, LR = 0x100fd226 */);
T(0x100fd226, 0x00004902, AL, LDR(r1, PC, 0x0008); /* [0x100fd230]:0x10ce794c */);
T(0x100fd228, 0x00006008, AL, STR(r0, r1); /* [0x10ce794c] */);
T(0x100fd22a, 0x0000b001, AL, ADD(SP, 0x004));
T(0x100fd22c, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x100fd22e, 0x00004718, AL, BX(r3));

T(0x100fd2b8, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x100fd2ba, 0x00004e0b, AL, LDR(r6, PC, 0x002c); /* [0x100fd2e8]:0x10ce7b44 */);
T(0x100fd2bc, 0x00001c0c, AL, SUBS(r4, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100fd2be, 0x00002194, AL, MOVS(r1, 0x94));
T(0x100fd2c0, 0x00001c05, AL, SUBS(r5, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100fd2c2, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x10ce7b44 - 0x00000000 = 0x10ce7b44 */ XXX);
T(0x100fd2c4, 0xf05ee8f0, AL, BLX(0x1015b4a8); /* 0x100fd2c9 + 0x000001e0, LR = 0x100fd2c8 */);
T(0x100fd2c8, 0x00002c00, AL, CMPS(r4, 0x00));
T(0x100fd2ca, 0x0000d005, EQ, B(0x100fd2d8); /* 0x100fd2ce + 0x00a */);
T(0x100fd2cc, 0x00000061, AL, LSL(r1, r4, 0x01));
T(0x100fd2ce, 0x00001909, AL, SUBS(r1, r1, r4);
T(0x100fd2d0, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x100fd2d2, 0x00001c28, AL, SUBS(r0, r5, 0x0);
T(0x100fd2d4, 0xf05ee8e8, AL, BLX(0x1015b4a8); /* 0x100fd2d9 + 0x000001d0, LR = 0x100fd2d8 */);

T(0x100fd2d8, 0x00001c30, AL, SUBS(r0, r6, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100fd2da, 0x00003604, AL, ADDS(r6, 0x04));
T(0x100fd2dc, 0x0000c630, AL, STMIA(r6.WB, {....45..}));
T(0x100fd2de, 0x0000bc70, AL, POP(rSP, r{....456.}););
T(0x100fd2e0, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x100fd2e2, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x100fd986, 0x000049c3, AL, LDR(r1, PC, 0x030c); /* [0x100fdc94]:0x103212a8 */);
T(0x100fd988, 0x0000c903, AL, LDMIA(r1.WB, {01......}));
T(0x100fd98a, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x100fde6e, 0x0000b5f8, AL, PUSH(rSP, r{...34567, LR}););
T(0x100fde70, 0x00004e7c, AL, LDR(r6, PC, 0x01f0); /* [0x100fe064]:0x10ce7b6c */);
T(0x100fde72, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100fde74, 0x00003e28, AL, SUBS(r6, 0x28));
T(0x100fde76, 0x00001c30, AL, SUBS(r0, r6, 0x0);
T(0x100fde78, 0x00001c0d, AL, SUBS(r5, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100fde7a, 0x00003028, AL, ADDS(r0, 0x28));
T(0x100fde7c, 0xf069fcea, AL, BL(0x10167854); /* 0x100fde81 + 0x000009d4, LR = 0x100fde80 */);
T(0x100fde80, 0x0000a07b, AL, ADD(r0, PC, 0x1ec); /* 0x100fe070 */));
T(0x100fde82, 0x000063b0, AL, STR(r0, r6, 0x038));
T(0x100fde84, 0x00001c30, AL, SUBS(r0, r6, 0x0);
T(0x100fde86, 0x00003014, AL, ADDS(r0, 0x14));
T(0x100fde88, 0xf069fce4, AL, BL(0x10167854); /* 0x100fde8d + 0x000009c8, LR = 0x100fde8c */);
T(0x100fde8c, 0x0000a07e, AL, ADD(r0, PC, 0x1f8); /* 0x100fe088 */));
T(0x100fde8e, 0x00006270, AL, STR(r0, r6, 0x024));
T(0x100fde90, 0x00001c30, AL, SUBS(r0, r6, 0x0);
T(0x100fde92, 0x0000303c, AL, ADDS(r0, 0x3c));
T(0x100fde94, 0xf069fcde, AL, BL(0x10167854); /* 0x100fde99 + 0x000009bc, LR = 0x100fde98 */);
T(0x100fde98, 0x0000a082, AL, ADD(r0, PC, 0x208); /* 0x100fe0a4 */));
T(0x100fde9a, 0x000064f0, AL, STR(r0, r6, 0x04c));
T(0x100fde9c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100fde9e, 0x00006530, AL, STR(r0, r6, 0x050));
T(0x100fdea0, 0x00007030, AL, STRB(r0, r6));
T(0x100fdea2, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100fdea4, 0x00009200, AL, STR(r2, SP, 0x0000);
T(0x100fdea6, 0x0000496f, AL, LDR(r1, PC, 0x01bc); /* [0x100fe064]:0x10ce7b6c */);
T(0x100fdea8, 0x00002201, AL, MOVS(r2, 0x01));
T(0x100fdeaa, 0x00004f85, AL, LDR(r7, PC, 0x0214); /* [0x100fe0c0]:0x10ce7a20 */);
T(0x100fdeac, 0x00000612, AL, LSL(r2, r2, 0x18));
T(0x100fdeae, 0x00003948, AL, SUBS(r1, 0x48));
T(0x100fdeb0, 0x00001c38, AL, SUBS(r0, r7, 0x0); /* 0x10ce7a20 - 0x00000000 = 0x10ce7a20 */ XXX);
T(0x100fdeb2, 0x00004b82, AL, LDR(r3, PC, 0x0208); /* [0x100fe0bc]:0x100fe1c3 */);
T(0x100fdeb4, 0xf041fe30, AL, BL(0x1013fb18); /* 0x100fdeb9 + 0x00000c60, LR = 0x100fdeb8 */);
T(0x100fdeb8, 0x00002200, AL, MOVS(r2, 0x00));
T(0x100fdeba, 0x00009200, AL, STR(r2, SP, 0x0000);
T(0x100fdebc, 0x00004969, AL, LDR(r1, PC, 0x01a4); /* [0x100fe064]:0x10ce7b6c */);
T(0x100fdebe, 0x00002203, AL, MOVS(r2, 0x03));
T(0x100fdec0, 0x00000612, AL, LSL(r2, r2, 0x18));
T(0x100fdec2, 0x00003938, AL, SUBS(r1, 0x38));
T(0x100fdec4, 0x00001c38, AL, SUBS(r0, r7, 0x0); /* 0x10ce7a20 - 0x00000000 = 0x10ce7a20 */ XXX);
T(0x100fdec6, 0x00004b7f, AL, LDR(r3, PC, 0x01fc); /* [0x100fe0c4]:0x100fe1a1 */);
T(0x100fdec8, 0xf041fe26, AL, BL(0x1013fb18); /* 0x100fdecd + 0x00000c4c, LR = 0x100fdecc */);
T(0x100fdecc, 0x00002000, AL, MOVS(r0, 0x00));
T(0x100fdece, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x100fded0, 0x0000d91f, LS, B(0x100fdf12); /* 0x100fded4 + 0x03e */);
T(0x100fded2, 0x00002700, AL, MOVS(r7, 0x00));
T(0x100fded4, 0x000000c2, AL, LSL(r2, r0, 0x03));
T(0x100fded6, 0x000058a1, AL, LDR(r1, r4, r2));
T(0x100fded8, 0x00001912, AL, SUBS(r2, r2, r4);
T(0x100fdeda, 0x00006852, AL, LDR(r2, r2, 0x004));
T(0x100fdedc, 0x00006fb3, AL, LDR(r3, r6, 0x078));
T(0x100fdede, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x100fdee0, 0x000067b3, AL, STR(r3, r6, 0x078));
T(0x100fdee2, 0x00006ff3, AL, LDR(r3, r6, 0x07c));
T(0x100fdee4, 0x0000330c, AL, ADDS(r3, 0x0c));
T(0x100fdee6, 0x000067f3, AL, STR(r3, r6, 0x07c));
T(0x100fdee8, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100fdeea, 0x0000d102, NE, B(0x100fdef2); /* 0x100fdeee + 0x004 */);
T(0x100fdeec, 0x000060f1, AL, STR(r1, r6, 0x00c));
T(0x100fdeee, 0x0000600f, AL, STR(r7, r1));
T(0x100fdef0, 0x0000e002, AL, B(0x100fdef6); /* 0x100fdef3 + 0x004*/);

T(0x100fdef2, 0x00006933, AL, LDR(r3, r6, 0x010); /* [0x00000010] */);
T(0x100fdef4, 0x00006059, AL, STR(r1, r3, 0x004));
T(0x100fdef6, 0x0000600b, AL, STR(r3, r1); /* [0x00000000] */);
T(0x100fdef8, 0x0000188a, AL, SUBS(r2, r1, r2); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100fdefa, 0x00003a0c, AL, SUBS(r2, 0x0c));
T(0x100fdefc, 0x00006132, AL, STR(r2, r6, 0x010); /* [0x00000010] */);
T(0x100fdefe, 0x0000604a, AL, STR(r2, r1, 0x004); /* [0x00000004] */);
T(0x100fdf00, 0x0000810f, AL, STRH(r7, r1, 0x008); /* [0x00000008] */);
T(0x100fdf02, 0x00006932, AL, LDR(r2, r6, 0x010); /* [0x00000010] */);
T(0x100fdf04, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100fdf06, 0x0000c282, AL, STMIA(r2.WB, {.1.....7}));
T(0x100fdf08, 0x00003a08, AL, SUBS(r2, 0x08));
T(0x100fdf0a, 0x0000496f, AL, LDR(r1, PC, 0x01bc); /* [0x100fe0c8]:0x00005fff */);
T(0x100fdf0c, 0x000042a8, AL, CMP(r0, r5));
T(0x100fdf0e, 0x00008111, AL, STRH(r1, r2, 0x008));
T(0x100fdf10, 0x0000d3e0, CC, B(0x100fded4); /* 0x100fdf14 + 0xffffffc0 */);

T(0x100fded4, 0x000000c2, AL, LSL(r2, r0, 0x03));
T(0x100fded6, 0x000058a1, AL, LDR(r1, r4, r2));
T(0x100fded8, 0x00001912, AL, SUBS(r2, r2, r4);
T(0x100fdeda, 0x00006852, AL, LDR(r2, r2, 0x004));
T(0x100fdedc, 0x00006fb3, AL, LDR(r3, r6, 0x078); /* [0x00000078] */);
T(0x100fdede, 0x0000189b, AL, SUBS(r3, r3, r2);
T(0x100fdee0, 0x000067b3, AL, STR(r3, r6, 0x078); /* [0x00000078] */);
T(0x100fdee2, 0x00006ff3, AL, LDR(r3, r6, 0x07c); /* [0x0000007c] */);
T(0x100fdee4, 0x0000330c, AL, ADDS(r3, 0x0c));
T(0x100fdee6, 0x000067f3, AL, STR(r3, r6, 0x07c); /* [0x0000007c] */);
T(0x100fdee8, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100fdeea, 0x0000d102, NE, B(0x100fdef2); /* 0x100fdeee + 0x004 */);
T(0x100fdeec, 0x000060f1, AL, STR(r1, r6, 0x00c); /* [0x0000000c] */);
T(0x100fdeee, 0x0000600f, AL, STR(r7, r1));
T(0x100fdef0, 0x0000e002, AL, B(0x100fdef6); /* 0x100fdef3 + 0x004*/);

T(0x100fdef6, 0x0000600b, AL, STR(r3, r1); /* [0x00000000] */);
T(0x100fdef8, 0x0000188a, AL, SUBS(r2, r1, r2); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x100fdefa, 0x00003a0c, AL, SUBS(r2, 0x0c));
T(0x100fdefc, 0x00006132, AL, STR(r2, r6, 0x010); /* [0x00000010] */);
T(0x100fdefe, 0x0000604a, AL, STR(r2, r1, 0x004); /* [0x00000004] */);
T(0x100fdf00, 0x0000810f, AL, STRH(r7, r1, 0x008); /* [0x00000008] */);
T(0x100fdf02, 0x00006932, AL, LDR(r2, r6, 0x010); /* [0x00000010] */);
T(0x100fdf04, 0x00003001, AL, ADDS(r0, 0x01));
T(0x100fdf06, 0x0000c282, AL, STMIA(r2.WB, {.1.....7}));
T(0x100fdf08, 0x00003a08, AL, SUBS(r2, 0x08));
T(0x100fdf0a, 0x0000496f, AL, LDR(r1, PC, 0x01bc); /* [0x100fe0c8]:0x00005fff */);
T(0x100fdf0c, 0x000042a8, AL, CMP(r0, r5));
T(0x100fdf0e, 0x00008111, AL, STRH(r1, r2, 0x008));
T(0x100fdf10, 0x0000d3e0, CC, B(0x100fded4); /* 0x100fdf14 + 0xffffffc0 */);

T(0x100fdf12, 0x00006ff0, AL, LDR(r0, r6, 0x07c); /* [0x0000007c] */);
T(0x100fdf14, 0x00003680, AL, ADDS(r6, 0x80));
T(0x100fdf16, 0x00006030, AL, STR(r0, r6));
T(0x100fdf18, 0x0000486c, AL, LDR(r0, PC, 0x01b0); /* [0x100fe0cc]:0x103212b0 */);
T(0x100fdf1a, 0xf068ffc9, AL, BL(0x10166eb0); /* 0x100fdf1f + 0x00000f92, LR = 0x100fdf1e */);
T(0x100fdf1e, 0x00004951, AL, LDR(r1, PC, 0x0144); /* [0x100fe064]:0x10ce7b6c */);
T(0x100fdf20, 0x0000394c, AL, SUBS(r1, 0x4c));
T(0x100fdf22, 0x00006008, AL, STR(r0, r1));
T(0x100fdf24, 0x0000bcf8, AL, POP(rSP, r{...34567}););
T(0x100fdf26, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x100fdf28, 0x00004718, AL, BX(r3); /* 0x103212b0 */);

T(0x10101b9e, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1013fad0, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x1013fad2, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013fad4, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1013fad6, 0x00006020, AL, STR(r0, r4));
T(0x1013fad8, 0x00001d20, AL, SUBS(r0, r4, 0x4);
T(0x1013fada, 0xf027febb, AL, BL(0x10167854); /* 0x1013fadf + 0x00000d76, LR = 0x1013fade */);
T(0x1013fade, 0x0000a036, AL, ADD(r0, PC, 0x0d8); /* 0x1013fbba */));
T(0x1013fae0, 0x00006160, AL, STR(r0, r4, 0x014));
T(0x1013fae2, 0x0000bc10, AL, POP(rSP, r{....4...}););
T(0x1013fae4, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x1013fae6, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x1013fb18, 0x0000b5ff, AL, PUSH(rSP, r{01234567, LR}););
T(0x1013fb1a, 0x00001c07, AL, SUBS(r7, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013fb1c, 0x00001c16, AL, SUBS(r6, r2, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013fb1e, 0x00002500, AL, MOVS(r5, 0x00));
T(0x1013fb20, 0x00001c0c, AL, SUBS(r4, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013fb22, 0x00003004, AL, ADDS(r0, 0x04));
T(0x1013fb24, 0x0000b081, AL, SUB(SP, 0x004));
T(0x1013fb26, 0x00009000, AL, STR(r0, SP, 0x0000);
T(0x1013fb28, 0xf027ff02, AL, BL(0x10167930); /* 0x1013fb2d + 0x00000e04, LR = 0x1013fb2c */);
T(0x1013fb2c, 0x00006839, AL, LDR(r1, r7));
T(0x1013fb2e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1013fb30, 0x00002900, AL, CMPS(r1, 0x00));
T(0x1013fb32, 0x0000d010, EQ, B(0x1013fb56); /* 0x1013fb36 + 0x020 */);
T(0x1013fb34, 0x000043c3, AL, MVN(r3, r0));
T(0x1013fb36, 0x00006839, AL, LDR(r1, r7));
T(0x1013fb38, 0x000042a1, AL, CMP(r1, r4));
T(0x1013fb3a, 0x0000d100, NE, B(0x1013fb3e); /* 0x1013fb3e + 0x000 */);
T(0x1013fb3c, 0x00001c1d, AL, SUBS(r5, r3, 0x0);
T(0x1013fb3e, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1013fb40, 0x0000d103, NE, B(0x1013fb4a); /* 0x1013fb44 + 0x006 */);
T(0x1013fb42, 0x0000684a, AL, LDR(r2, r1, 0x004));
T(0x1013fb44, 0x000042b2, AL, CMP(r2, r6));
T(0x1013fb46, 0x0000dd00, LE, B(0x1013fb4a); /* 0x1013fb4a + 0x000 */);
T(0x1013fb48, 0x00001c38, AL, SUBS(r0, r7, 0x0);
T(0x1013fb4a, 0x00001c0f, AL, SUBS(r7, r1, 0x0);
T(0x1013fb4c, 0x00006809, AL, LDR(r1, r1));
T(0x1013fb4e, 0x00002900, AL, CMPS(r1, 0x00));
T(0x1013fb50, 0x0000d1f1, NE, B(0x1013fb36); /* 0x1013fb54 + 0xffffffe2 */);
T(0x1013fb52, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1013fb54, 0x0000d100, NE, B(0x1013fb58); /* 0x1013fb58 + 0x000 */);

T(0x1013fb3e, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1013fb40, 0x0000d103, NE, B(0x1013fb4a); /* 0x1013fb44 + 0x006 */);
T(0x1013fb42, 0x0000684a, AL, LDR(r2, r1, 0x004); /* [0x00000004] */);
T(0x1013fb44, 0x000042b2, AL, CMP(r2, r6));
T(0x1013fb46, 0x0000dd00, LE, B(0x1013fb4a); /* 0x1013fb4a + 0x000 */);
T(0x1013fb48, 0x00001c38, AL, SUBS(r0, r7, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013fb4a, 0x00001c0f, AL, SUBS(r7, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013fb4c, 0x00006809, AL, LDR(r1, r1));
T(0x1013fb4e, 0x00002900, AL, CMPS(r1, 0x00));
T(0x1013fb50, 0x0000d1f1, NE, B(0x1013fb36); /* 0x1013fb54 + 0xffffffe2 */);
T(0x1013fb52, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1013fb54, 0x0000d100, NE, B(0x1013fb58); /* 0x1013fb58 + 0x000 */);

T(0x1013fb4a, 0x00001c0f, AL, SUBS(r7, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013fb4c, 0x00006809, AL, LDR(r1, r1));
T(0x1013fb4e, 0x00002900, AL, CMPS(r1, 0x00));
T(0x1013fb50, 0x0000d1f1, NE, B(0x1013fb36); /* 0x1013fb54 + 0xffffffe2 */);
T(0x1013fb52, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1013fb54, 0x0000d100, NE, B(0x1013fb58); /* 0x1013fb58 + 0x000 */);

T(0x1013fb56, 0x00001c38, AL, SUBS(r0, r7, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013fb58, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x1013fb5a, 0x0000d107, NE, B(0x1013fb6c); /* 0x1013fb5e + 0x00e */);
T(0x1013fb5c, 0x00006801, AL, LDR(r1, r0));
T(0x1013fb5e, 0x0000c442, AL, STMIA(r4.WB, {.1....6.}));
T(0x1013fb60, 0x00009904, AL, LDR(r1, SP, 0x0010);
T(0x1013fb62, 0x00003c08, AL, SUBS(r4, 0x08));
T(0x1013fb64, 0x000060a1, AL, STR(r1, r4, 0x008));
T(0x1013fb66, 0x0000990a, AL, LDR(r1, SP, 0x0028);
T(0x1013fb68, 0x000060e1, AL, STR(r1, r4, 0x00c));
T(0x1013fb6a, 0x00006004, AL, STR(r4, r0));
T(0x1013fb6c, 0x00009800, AL, LDR(r0, SP, 0x0000);
T(0x1013fb6e, 0xf027fe79, AL, BL(0x10167864); /* 0x1013fb73 + 0x00000cf2, LR = 0x1013fb72 */);
T(0x1013fb72, 0x00001c28, AL, SUBS(r0, r5, 0x0);
T(0x1013fb74, 0x0000b005, AL, ADD(SP, 0x014));
T(0x1013fb76, 0x0000bcf0, AL, POP(rSP, r{....4567}););
T(0x1013fb78, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x1013fb7a, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x1013fb58, 0x00002d00, AL, CMPS(r5, 0x00));
T(0x1013fb5a, 0x0000d107, NE, B(0x1013fb6c); /* 0x1013fb5e + 0x00e */);
T(0x1013fb5c, 0x00006801, AL, LDR(r1, r0); /* [0x00000000] */);
T(0x1013fb5e, 0x0000c442, AL, STMIA(r4.WB, {.1....6.}));
T(0x1013fb60, 0x00009904, AL, LDR(r1, SP, 0x0010);
T(0x1013fb62, 0x00003c08, AL, SUBS(r4, 0x08));
T(0x1013fb64, 0x000060a1, AL, STR(r1, r4, 0x008));
T(0x1013fb66, 0x0000990a, AL, LDR(r1, SP, 0x0028);
T(0x1013fb68, 0x000060e1, AL, STR(r1, r4, 0x00c));
T(0x1013fb6a, 0x00006004, AL, STR(r4, r0); /* [0x00000000] */);
T(0x1013fb6c, 0x00009800, AL, LDR(r0, SP, 0x0000);
T(0x1013fb6e, 0xf027fe79, AL, BL(0x10167864); /* 0x1013fb73 + 0x00000cf2, LR = 0x1013fb72 */);
T(0x1013fb72, 0x00001c28, AL, SUBS(r0, r5, 0x0);
T(0x1013fb74, 0x0000b005, AL, ADD(SP, 0x014));
T(0x1013fb76, 0x0000bcf0, AL, POP(rSP, r{....4567}););
T(0x1013fb78, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x1013fb7a, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x1013fb6c, 0x00009800, AL, LDR(r0, SP, 0x0000);
T(0x1013fb6e, 0xf027fe79, AL, BL(0x10167864); /* 0x1013fb73 + 0x00000cf2, LR = 0x1013fb72 */);
T(0x1013fb72, 0x00001c28, AL, SUBS(r0, r5, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013fb74, 0x0000b005, AL, ADD(SP, 0x014));
T(0x1013fb76, 0x0000bcf0, AL, POP(rSP, r{....4567}););
T(0x1013fb78, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x1013fb7a, 0x00004718, AL, BX(r3); /* 0x00000000 */);

A(0x1015ab68, 0xe1510003, AL, CMP(r1, r3));
A(0x1015ab6c, 0x01500002, EQ, CMP(r0, r2));
A(0x1015ab70, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1015abc4, 0xe3a03000, AL, MOV(r3, 0));
A(0x1015abc8, 0xe1a02001, AL, MOV(r2, r1));
A(0x1015abcc, 0xe3a01000, AL, MOV(r1, 0));
A(0x1015abd0, 0xeaffffe8, AL, B(0x1015ab78));

A(0x1015ab78, 0xe92d4070, AL, PUSH({....456.......e.}));
A(0x1015ab7c, 0xe1a0e000, AL, MOV(LR, r0));
A(0x1015ab80, 0xe08c0e92, AL, UMULL(r0:r12, r2, LR);
A(0x1015ab84, 0xe021c192, AL, MLA(r12, r2, r1, r1); /* r12 = (r2 * r1) + r1 */);
A(0x1015ab88, 0xe0211e93, AL, MLA(r1, r3, LR, r1); /* r1 = (r3 * LR) + r1 */);
A(0x1015ab8c, 0xe8bd4070, AL, POP({....456.......e.}));
A(0x1015ab90, 0xe12fff1e, AL, BX(LR));

T(0x1015b078, 0x0000b410, AL, PUSH(rSP, r{....4...}););
T(0x1015b07a, 0x00002a04, AL, CMPS(r2, 0x04));
T(0x1015b07c, 0x0000d30e, CC, B(0x1015b09c); /* 0x1015b080 + 0x01c */);
T(0x1015b07e, 0x00001c03, AL, SUBS(r3, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1015b080, 0x0000430b, AL, ORR(r3, r1));
T(0x1015b082, 0x0000079b, AL, LSL(r3, r3, 0x1e));
T(0x1015b084, 0x0000d10a, NE, B(0x1015b09c); /* 0x1015b088 + 0x014 */);
T(0x1015b086, 0x0000c808, AL, LDMIA(r0.WB, {...3....}));
T(0x1015b088, 0x0000c910, AL, LDMIA(r1.WB, {....4...}));
T(0x1015b08a, 0x000042a3, AL, CMP(r3, r4));
T(0x1015b08c, 0x0000d102, NE, B(0x1015b094); /* 0x1015b090 + 0x004 */);
T(0x1015b08e, 0x00003a04, AL, SUBS(r2, 0x04));
T(0x1015b090, 0x00002a04, AL, CMPS(r2, 0x04));
T(0x1015b092, 0x0000d2f8, CS, B(0x1015b086); /* 0x1015b096 + 0xfffffff0 */);

T(0x1015b094, 0x000042a3, AL, CMP(r3, r4));
T(0x1015b096, 0x0000d001, EQ, B(0x1015b09c); /* 0x1015b09a + 0x002 */);
T(0x1015b098, 0x00003804, AL, SUBS(r0, 0x04));
T(0x1015b09a, 0x00003904, AL, SUBS(r1, 0x04));
T(0x1015b09c, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x1015b09e, 0x0000d102, NE, B(0x1015b0a6); /* 0x1015b0a2 + 0x004 */);
T(0x1015b0a0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015b0a2, 0x0000bc10, AL, POP(rSP, r{....4...}););
T(0x1015b0a4, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1015b09c, 0x00002a00, AL, CMPS(r2, 0x00));
T(0x1015b09e, 0x0000d102, NE, B(0x1015b0a6); /* 0x1015b0a2 + 0x004 */);
T(0x1015b0a0, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015b0a2, 0x0000bc10, AL, POP(rSP, r{....4...}););
T(0x1015b0a4, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1015b0a6, 0x000007d3, AL, LSL(r3, r2, 0x1f));
T(0x1015b0a8, 0x0000d501, PL, B(0x1015b0ae); /* 0x1015b0ac + 0x002 */);
T(0x1015b0aa, 0x00003201, AL, ADDS(r2, 0x01));
T(0x1015b0ac, 0x0000e005, AL, B(0x1015b0b8); /* 0x1015b0af + 0x00a*/);

T(0x1015b0ae, 0x00007803, AL, LDRB(r3, r0); /* [0x00000000] */);
T(0x1015b0b0, 0x0000780c, AL, LDRB(r4, r1); /* [0x00000000] */);
T(0x1015b0b2, 0x00003101, AL, ADDS(r1, 0x01));
T(0x1015b0b4, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1015b0b6, 0x000042a3, AL, CMP(r3, r4));
T(0x1015b0b8, 0x0000d107, NE, B(0x1015b0ca); /* 0x1015b0bc + 0x00e */);
T(0x1015b0ba, 0x00007803, AL, LDRB(r3, r0));
T(0x1015b0bc, 0x0000780c, AL, LDRB(r4, r1));
T(0x1015b0be, 0x00003101, AL, ADDS(r1, 0x01));
T(0x1015b0c0, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1015b0c2, 0x000042a3, AL, CMP(r3, r4));
T(0x1015b0c4, 0x0000d101, NE, B(0x1015b0ca); /* 0x1015b0c8 + 0x002 */);
T(0x1015b0c6, 0x00003a02, AL, SUBS(r2, 0x02));
T(0x1015b0c8, 0x0000d1f1, NE, B(0x1015b0ae); /* 0x1015b0cc + 0xffffffe2 */);

T(0x1015b0b8, 0x0000d107, NE, B(0x1015b0ca); /* 0x1015b0bc + 0x00e */);
T(0x1015b0ba, 0x00007803, AL, LDRB(r3, r0); /* [0x00000000] */);
T(0x1015b0bc, 0x0000780c, AL, LDRB(r4, r1); /* [0x00000000] */);
T(0x1015b0be, 0x00003101, AL, ADDS(r1, 0x01));
T(0x1015b0c0, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1015b0c2, 0x000042a3, AL, CMP(r3, r4));
T(0x1015b0c4, 0x0000d101, NE, B(0x1015b0ca); /* 0x1015b0c8 + 0x002 */);
T(0x1015b0c6, 0x00003a02, AL, SUBS(r2, 0x02));
T(0x1015b0c8, 0x0000d1f1, NE, B(0x1015b0ae); /* 0x1015b0cc + 0xffffffe2 */);

T(0x1015b0ca, 0x00001b18, AL, ADDS(r0, r3, r4); /* 0x00000000 + 0x00000000 = 0x00000000 */ XXX);
T(0x1015b0cc, 0x0000e7e9, AL, B(0x1015b0a0); /* 0x1015b0cf + 0xffffffd2*/);

A(0x1015b460, 0xe3a02000, AL, MOV(r2, 0));
A(0x1015b464, 0xe3510004, AL, CMP(r1, 4));
A(0x1015b468, 0x3a000008, CC, B(0x1015b490));
A(0x1015b46c, 0xe210c003, AL, ANDS(r12, r0, 3));
A(0x1015b470, 0x0a00000d, EQ, B(0x1015b4ac));
A(0x1015b474, 0xe26cc004, AL, RSB(r12, r12, 4));
A(0x1015b478, 0xe35c0002, AL, CMP(r12, 2));
A(0x1015b47c, 0xe4c02001, AL, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b480, 0xa4c02001, GE, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b484, 0xc4c02001, GT, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b488, 0xe041100c, AL, SUB(r1, r1, r12));
A(0x1015b48c, 0xea000006, AL, B(0x1015b4ac));

A(0x1015b490, 0xe1b0cf81, AL, MOVS(r12, LSL(r1, 0x1f)));
A(0x1015b494, 0x24c02001, CS, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b498, 0x24c02001, CS, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b49c, 0x44c02001, MI, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b4a0, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1015b4a8, 0xe3a02000, AL, MOV(r2, 0));
A(0x1015b4ac, 0xe92d4000, AL, PUSH({..............e.}));
A(0x1015b4b0, 0xe1a03002, AL, MOV(r3, r2));
A(0x1015b4b4, 0xe1a0c002, AL, MOV(r12, r2));
A(0x1015b4b8, 0xe1a0e002, AL, MOV(LR, r2));
A(0x1015b4bc, 0xe2511020, AL, SUBS(r1, r1, 32));
A(0x1015b4c0, 0x28a0500c, CS, STMIA(r0.WB , {..23........c.e.}));
A(0x1015b4c4, 0x28a0500c, CS, STMIA(r0.WB , {..23........c.e.}));
A(0x1015b4c8, 0x22511020, CS, SUBS(r1, r1, 32));
A(0x1015b4cc, 0x2afffffb, CS, B(0x1015b4c0));
A(0x1015b4d0, 0xe1b01e01, AL, MOVS(r1, LSL(r1, 0x1c)));
A(0x1015b4d4, 0x28a0500c, CS, STMIA(r0.WB , {..23........c.e.}));
A(0x1015b4d8, 0x48a0000c, MI, STMIA(r0.WB , {..23............}));
A(0x1015b4dc, 0xe8bd4000, AL, POP({..............e.}));
A(0x1015b4e0, 0xe1b01101, AL, MOVS(r1, LSL(r1, 0x02)));
A(0x1015b4e4, 0x24802004, CS, STR(r2, r0 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b4e8, 0x012fff1e, EQ, BX(LR));

A(0x1015b4ac, 0xe92d4000, AL, PUSH({..............e.}));
A(0x1015b4b0, 0xe1a03002, AL, MOV(r3, r2));
A(0x1015b4b4, 0xe1a0c002, AL, MOV(r12, r2));
A(0x1015b4b8, 0xe1a0e002, AL, MOV(LR, r2));
A(0x1015b4bc, 0xe2511020, AL, SUBS(r1, r1, 32));
A(0x1015b4c0, 0x28a0500c, CS, STMIA(r0.WB , {..23........c.e.}));
A(0x1015b4c4, 0x28a0500c, CS, STMIA(r0.WB , {..23........c.e.}));
A(0x1015b4c8, 0x22511020, CS, SUBS(r1, r1, 32));
A(0x1015b4cc, 0x2afffffb, CS, B(0x1015b4c0));
A(0x1015b4d0, 0xe1b01e01, AL, MOVS(r1, LSL(r1, 0x1c)));
A(0x1015b4d4, 0x28a0500c, CS, STMIA(r0.WB , {..23........c.e.}));
A(0x1015b4d8, 0x48a0000c, MI, STMIA(r0.WB , {..23............}));
A(0x1015b4dc, 0xe8bd4000, AL, POP({..............e.}));
A(0x1015b4e0, 0xe1b01101, AL, MOVS(r1, LSL(r1, 0x02)));
A(0x1015b4e4, 0x24802004, CS, STR(r2, r0 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b4e8, 0x012fff1e, EQ, BX(LR));

A(0x1015b504, 0xe3520003, AL, CMP(r2, 3));
A(0x1015b508, 0x9a00003e, LS, B(0x1015b608));
A(0x1015b50c, 0xe210c003, AL, ANDS(r12, r0, 3));
A(0x1015b510, 0x0a000008, EQ, B(0x1015b538));
A(0x1015b514, 0xe4d13001, AL, LDRB(r3, r1 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b518, 0xe35c0002, AL, CMP(r12, 2));
A(0x1015b51c, 0xe082200c, AL, ADD(r2, r2, r12));
A(0x1015b520, 0x94d1c001, LS, LDRB(r12, r1 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b524, 0xe4c03001, AL, STRB(r3, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b528, 0x34d13001, CC, LDRB(r3, r1 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b52c, 0xe2422004, AL, SUB(r2, r2, 4));
A(0x1015b530, 0x94c0c001, LS, STRB(r12, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b534, 0x34c03001, CC, STRB(r3, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b538, 0xe2113003, AL, ANDS(r3, r1, 3));
A(0x1015b53c, 0x0a00001e, EQ, B(0x1015b5bc));
A(0x1015b540, 0xe2522004, AL, SUBS(r2, r2, 4));
A(0x1015b544, 0x3a00002f, CC, B(0x1015b608));
A(0x1015b548, 0xe731c003, AL, LDR(r12, r1 | rWB, -r3));
A(0x1015b54c, 0xe3530002, AL, CMP(r3, 2));
A(0x1015b550, 0x0a000008, EQ, B(0x1015b578));
A(0x1015b554, 0x8a00000f, HI, B(0x1015b598));
A(0x1015b558, 0xe1a0342c, AL, MOV(r3, LSR(r12, 0x08)));
A(0x1015b55c, 0xe5b1c004, AL, LDR(r12, r1 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b560, 0xe2522004, AL, SUBS(r2, r2, 4));
A(0x1015b564, 0xe1833c0c, AL, ORR(r3, r3, LSL(r12, 0x18)));
A(0x1015b568, 0xe4803004, AL, STR(r3, r0 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b56c, 0x2afffff9, CS, B(0x1015b558));
A(0x1015b570, 0xe2811001, AL, ADD(r1, r1, 1));
A(0x1015b574, 0xea000023, AL, B(0x1015b608));

A(0x1015b538, 0xe2113003, AL, ANDS(r3, r1, 3));
A(0x1015b53c, 0x0a00001e, EQ, B(0x1015b5bc));
A(0x1015b540, 0xe2522004, AL, SUBS(r2, r2, 4));
A(0x1015b544, 0x3a00002f, CC, B(0x1015b608));
A(0x1015b548, 0xe731c003, AL, LDR(r12, r1 | rWB, -r3));
A(0x1015b54c, 0xe3530002, AL, CMP(r3, 2));
A(0x1015b550, 0x0a000008, EQ, B(0x1015b578));
A(0x1015b554, 0x8a00000f, HI, B(0x1015b598));
A(0x1015b558, 0xe1a0342c, AL, MOV(r3, LSR(r12, 0x08)));
A(0x1015b55c, 0xe5b1c004, AL, LDR(r12, r1 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b560, 0xe2522004, AL, SUBS(r2, r2, 4));
A(0x1015b564, 0xe1833c0c, AL, ORR(r3, r3, LSL(r12, 0x18)));
A(0x1015b568, 0xe4803004, AL, STR(r3, r0 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b56c, 0x2afffff9, CS, B(0x1015b558));
A(0x1015b570, 0xe2811001, AL, ADD(r1, r1, 1));
A(0x1015b574, 0xea000023, AL, B(0x1015b608));

A(0x1015b578, 0xe1a0382c, AL, MOV(r3, LSR(r12, 0x10)));
A(0x1015b57c, 0xe5b1c004, AL, LDR(r12, r1 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b580, 0xe2522004, AL, SUBS(r2, r2, 4));
A(0x1015b584, 0xe183380c, AL, ORR(r3, r3, LSL(r12, 0x10)));
A(0x1015b588, 0xe4803004, AL, STR(r3, r0 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b58c, 0x2afffff9, CS, B(0x1015b578));
A(0x1015b590, 0xe2811002, AL, ADD(r1, r1, 2));
A(0x1015b594, 0xea00001b, AL, B(0x1015b608));

A(0x1015b598, 0xe1a03c2c, AL, MOV(r3, LSR(r12, 0x18)));
A(0x1015b59c, 0xe5b1c004, AL, LDR(r12, r1 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b5a0, 0xe2522004, AL, SUBS(r2, r2, 4));
A(0x1015b5a4, 0xe183340c, AL, ORR(r3, r3, LSL(r12, 0x08)));
A(0x1015b5a8, 0xe4803004, AL, STR(r3, r0 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b5ac, 0x2afffff9, CS, B(0x1015b598));
A(0x1015b5b0, 0xe2811003, AL, ADD(r1, r1, 3));
A(0x1015b5b4, 0xea000013, AL, B(0x1015b608));

A(0x1015b5bc, 0xe92d4010, AL, PUSH({....4.........e.}));
A(0x1015b5c0, 0xe2522020, AL, SUBS(r2, r2, 32));
A(0x1015b5c4, 0x3a000005, CC, B(0x1015b5e0));
A(0x1015b5c8, 0x28b15018, CS, LDMIA(r1.WB , {...34.......c.e.}));
A(0x1015b5cc, 0x28a05018, CS, STMIA(r0.WB , {...34.......c.e.}));
A(0x1015b5d0, 0x28b15018, CS, LDMIA(r1.WB , {...34.......c.e.}));
A(0x1015b5d4, 0x28a05018, CS, STMIA(r0.WB , {...34.......c.e.}));
A(0x1015b5d8, 0x22522020, CS, SUBS(r2, r2, 32));
A(0x1015b5dc, 0x2afffff9, CS, B(0x1015b5c8));

A(0x1015b5e0, 0xe1b0ce02, AL, MOVS(r12, LSL(r2, 0x1c)));
A(0x1015b5e4, 0x28b15018, CS, LDMIA(r1.WB , {...34.......c.e.}));
A(0x1015b5e8, 0x28a05018, CS, STMIA(r0.WB , {...34.......c.e.}));
A(0x1015b5ec, 0x48b10018, MI, LDMIA(r1.WB , {...34...........}));
A(0x1015b5f0, 0x48a00018, MI, STMIA(r0.WB , {...34...........}));
A(0x1015b5f4, 0xe8bd4010, AL, POP({....4.........e.}));
A(0x1015b5f8, 0xe1b0cf02, AL, MOVS(r12, LSL(r2, 0x1e)));
A(0x1015b5fc, 0x24913004, CS, LDR(r3, r1 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b600, 0x24803004, CS, STR(r3, r0 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b604, 0x012fff1e, EQ, BX(LR); /* 0x00000000 */);

A(0x1015b608, 0xe1b02f82, AL, MOVS(r2, LSL(r2, 0x1f)));
A(0x1015b60c, 0x44d12001, MI, LDRB(r2, r1 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b610, 0x24d13001, CS, LDRB(r3, r1 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b614, 0x24d1c001, CS, LDRB(r12, r1 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b618, 0x44c02001, MI, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b61c, 0x24c03001, CS, STRB(r3, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b620, 0x24c0c001, CS, STRB(r12, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b624, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1015b6d0, 0xe20130ff, AL, AND(r3, r1, 255));
A(0x1015b6d4, 0xe1a01002, AL, MOV(r1, r2));
A(0x1015b6d8, 0xe1832403, AL, ORR(r2, r3, LSL(r3, 0x08)));
A(0x1015b6dc, 0xe1822802, AL, ORR(r2, r2, LSL(r2, 0x10)));
A(0x1015b6e0, 0xeaffff5f, AL, B(0x1015b464));

A(0x1015b464, 0xe3510004, AL, CMP(r1, 4));
A(0x1015b468, 0x3a000008, CC, B(0x1015b490));
A(0x1015b46c, 0xe210c003, AL, ANDS(r12, r0, 3));
A(0x1015b470, 0x0a00000d, EQ, B(0x1015b4ac));
A(0x1015b474, 0xe26cc004, AL, RSB(r12, r12, 4));
A(0x1015b478, 0xe35c0002, AL, CMP(r12, 2));
A(0x1015b47c, 0xe4c02001, AL, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b480, 0xa4c02001, GE, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b484, 0xc4c02001, GT, STRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b488, 0xe041100c, AL, SUB(r1, r1, r12));
A(0x1015b48c, 0xea000006, AL, B(0x1015b4ac));

A(0x1015b7c0, 0xe3a02000, AL, MOV(r2, 0));
A(0x1015b7c4, 0xe070c1a1, AL, RSBS(r12, r0, LSR(r1, 0x03)));
A(0x1015b7c8, 0x3a000020, CC, B(0x1015b850));
A(0x1015b7cc, 0xe070c421, AL, RSBS(r12, r0, LSR(r1, 0x08)));
A(0x1015b7d0, 0x3a00000f, CC, B(0x1015b814));
A(0x1015b7d4, 0xe1a00400, AL, MOV(r0, LSL(r0, 0x08)));
A(0x1015b7d8, 0xe38224ff, AL, ORR(r2, r2, ROR(255, 8)); /* 0xff000000 */);
A(0x1015b7dc, 0xe070c221, AL, RSBS(r12, r0, LSR(r1, 0x04)));
A(0x1015b7e0, 0x3a000017, CC, B(0x1015b844));
A(0x1015b7e4, 0xe070c421, AL, RSBS(r12, r0, LSR(r1, 0x08)));
A(0x1015b7e8, 0x3a000009, CC, B(0x1015b814));
A(0x1015b7ec, 0xe1a00400, AL, MOV(r0, LSL(r0, 0x08)));
A(0x1015b7f0, 0xe38228ff, AL, ORR(r2, r2, ROR(255, 16)); /* 0x00ff0000 */);
A(0x1015b7f4, 0xe070c421, AL, RSBS(r12, r0, LSR(r1, 0x08)));
A(0x1015b7f8, 0x21a00400, CS, MOV(r0, LSL(r0, 0x08)));
A(0x1015b7fc, 0x23822cff, CS, ORR(r2, r2, ROR(255, 24)); /* 0x0000ff00 */);
A(0x1015b800, 0xe070c221, AL, RSBS(r12, r0, LSR(r1, 0x04)));
A(0x1015b804, 0x3a00000e, CC, B(0x1015b844));
A(0x1015b808, 0xe270c000, AL, RSBS(r12, r0, 0));
A(0x1015b80c, 0x2a00115d, CS, B(0x1015fd88));
A(0x1015b810, 0x21a00420, CS, MOV(r0, LSR(r0, 0x08)));
A(0x1015b814, 0xe070c3a1, AL, RSBS(r12, r0, LSR(r1, 0x07)));
A(0x1015b818, 0x20411380, CS, SUB(r1, r1, LSL(r0, 0x07)));
A(0x1015b81c, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b820, 0xe070c321, AL, RSBS(r12, r0, LSR(r1, 0x06)));
A(0x1015b824, 0x20411300, CS, SUB(r1, r1, LSL(r0, 0x06)));
A(0x1015b828, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b82c, 0xe070c2a1, AL, RSBS(r12, r0, LSR(r1, 0x05)));
A(0x1015b830, 0x20411280, CS, SUB(r1, r1, LSL(r0, 0x05)));
A(0x1015b834, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b838, 0xe070c221, AL, RSBS(r12, r0, LSR(r1, 0x04)));
A(0x1015b83c, 0x20411200, CS, SUB(r1, r1, LSL(r0, 0x04)));
A(0x1015b840, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b844, 0xe070c1a1, AL, RSBS(r12, r0, LSR(r1, 0x03)));
A(0x1015b848, 0x20411180, CS, SUB(r1, r1, LSL(r0, 0x03)));
A(0x1015b84c, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b850, 0xe070c121, AL, RSBS(r12, r0, LSR(r1, 0x02)));
A(0x1015b854, 0x20411100, CS, SUB(r1, r1, LSL(r0, 0x02)));
A(0x1015b858, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b85c, 0xe070c0a1, AL, RSBS(r12, r0, LSR(r1, 0x01)));
A(0x1015b860, 0x20411080, CS, SUB(r1, r1, LSL(r0, 0x01)));
A(0x1015b864, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b868, 0xe070c001, AL, RSBS(r12, r0, r1));
A(0x1015b86c, 0x20411000, CS, SUB(r1, r1, r0));
A(0x1015b870, 0xe0b22002, AL, ADCS(r2, r2, r2));
A(0x1015b874, 0x2affffe5, CS, B(0x1015b810));
A(0x1015b878, 0xe1a00002, AL, MOV(r0, r2));
A(0x1015b87c, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1015b814, 0xe070c3a1, AL, RSBS(r12, r0, LSR(r1, 0x07)));
A(0x1015b818, 0x20411380, CS, SUB(r1, r1, LSL(r0, 0x07)));
A(0x1015b81c, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b820, 0xe070c321, AL, RSBS(r12, r0, LSR(r1, 0x06)));
A(0x1015b824, 0x20411300, CS, SUB(r1, r1, LSL(r0, 0x06)));
A(0x1015b828, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b82c, 0xe070c2a1, AL, RSBS(r12, r0, LSR(r1, 0x05)));
A(0x1015b830, 0x20411280, CS, SUB(r1, r1, LSL(r0, 0x05)));
A(0x1015b834, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b838, 0xe070c221, AL, RSBS(r12, r0, LSR(r1, 0x04)));
A(0x1015b83c, 0x20411200, CS, SUB(r1, r1, LSL(r0, 0x04)));
A(0x1015b840, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b844, 0xe070c1a1, AL, RSBS(r12, r0, LSR(r1, 0x03)));
A(0x1015b848, 0x20411180, CS, SUB(r1, r1, LSL(r0, 0x03)));
A(0x1015b84c, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b850, 0xe070c121, AL, RSBS(r12, r0, LSR(r1, 0x02)));
A(0x1015b854, 0x20411100, CS, SUB(r1, r1, LSL(r0, 0x02)));
A(0x1015b858, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b85c, 0xe070c0a1, AL, RSBS(r12, r0, LSR(r1, 0x01)));
A(0x1015b860, 0x20411080, CS, SUB(r1, r1, LSL(r0, 0x01)));
A(0x1015b864, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b868, 0xe070c001, AL, RSBS(r12, r0, r1));
A(0x1015b86c, 0x20411000, CS, SUB(r1, r1, r0));
A(0x1015b870, 0xe0b22002, AL, ADCS(r2, r2, r2));
A(0x1015b874, 0x2affffe5, CS, B(0x1015b810));
A(0x1015b878, 0xe1a00002, AL, MOV(r0, r2));
A(0x1015b87c, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1015b844, 0xe070c1a1, AL, RSBS(r12, r0, LSR(r1, 0x03)));
A(0x1015b848, 0x20411180, CS, SUB(r1, r1, LSL(r0, 0x03)));
A(0x1015b84c, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b850, 0xe070c121, AL, RSBS(r12, r0, LSR(r1, 0x02)));
A(0x1015b854, 0x20411100, CS, SUB(r1, r1, LSL(r0, 0x02)));
A(0x1015b858, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b85c, 0xe070c0a1, AL, RSBS(r12, r0, LSR(r1, 0x01)));
A(0x1015b860, 0x20411080, CS, SUB(r1, r1, LSL(r0, 0x01)));
A(0x1015b864, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b868, 0xe070c001, AL, RSBS(r12, r0, r1));
A(0x1015b86c, 0x20411000, CS, SUB(r1, r1, r0));
A(0x1015b870, 0xe0b22002, AL, ADCS(r2, r2, r2));
A(0x1015b874, 0x2affffe5, CS, B(0x1015b810));
A(0x1015b878, 0xe1a00002, AL, MOV(r0, r2));
A(0x1015b87c, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1015b850, 0xe070c121, AL, RSBS(r12, r0, LSR(r1, 0x02)));
A(0x1015b854, 0x20411100, CS, SUB(r1, r1, LSL(r0, 0x02)));
A(0x1015b858, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b85c, 0xe070c0a1, AL, RSBS(r12, r0, LSR(r1, 0x01)));
A(0x1015b860, 0x20411080, CS, SUB(r1, r1, LSL(r0, 0x01)));
A(0x1015b864, 0xe0a22002, AL, ADC(r2, r2, r2));
A(0x1015b868, 0xe070c001, AL, RSBS(r12, r0, r1));
A(0x1015b86c, 0x20411000, CS, SUB(r1, r1, r0));
A(0x1015b870, 0xe0b22002, AL, ADCS(r2, r2, r2));
A(0x1015b874, 0x2affffe5, CS, B(0x1015b810));
A(0x1015b878, 0xe1a00002, AL, MOV(r0, r2));
A(0x1015b87c, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1015fd88, 0xe3a00002, AL, MOV(r0, 2));
A(0x1015fd8c, 0xe3a01002, AL, MOV(r1, 2));
A(0x1015fd90, 0xea00220d, AL, B(0x101685cc));

A(0x10162ee0, 0xe10f0000, AL, MRS(r0, CPSR));
A(0x10162ee4, 0xe3c00080, AL, BIC(r0, r0, 128));
A(0x10162ee8, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x10162eec, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x10162ef8, 0xe10f0000, AL, MRS(r0, CPSR));
A(0x10162efc, 0xe3801080, AL, ORR(r1, r0, 128));
A(0x10162f00, 0xe121f001, AL, MSR(CPSR_Cxsf, r1));
A(0x10162f04, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x10162f08, 0xe129f000, AL, MSR(CPSR_CxsF, r0));
A(0x10162f0c, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

T(0x101654d4, 0x00004801, AL, LDR(r0, PC, 0x0004); /* [0x101654dc]:0x1016546d */);
T(0x101654d6, 0x00004902, AL, LDR(r1, PC, 0x0008); /* [0x101654e0]:0x10d0f134 */);
T(0x101654d8, 0x00006008, AL, STR(r0, r1); /* [0x10d0f134] */);
T(0x101654da, 0x00004770, AL, BX(LR); /* 0x1016546d */);

T(0x1016546c, 0x0000b410, AL, PUSH(rSP, r{....4...}););
T(0x1016546e, 0x00002190, AL, MOVS(r1, 0x90));
T(0x10165470, 0x00008001, AL, STRH(r1, r0); /* [0x00000000] */);
T(0x10165472, 0x00008801, AL, LDRH(r1, r0); /* [0x00000000] */);
T(0x10165474, 0x00002289, AL, MOVS(r2, 0x89));
T(0x10165476, 0x00004291, AL, CMP(r1, r2));
T(0x10165478, 0x0000d100, NE, B(0x1016547c); /* 0x1016547c + 0x000 */);
T(0x1016547a, 0x0000d007, EQ, B(0x1016548c); /* 0x1016547e + 0x00e */);

T(0x1016547c, 0x00002220, AL, MOVS(r2, 0x20));
T(0x1016547e, 0x00004291, AL, CMP(r1, r2));
T(0x10165480, 0x0000d100, NE, B(0x10165484); /* 0x10165484 + 0x000 */);
T(0x10165482, 0x0000d003, EQ, B(0x1016548c); /* 0x10165486 + 0x006 */);

T(0x10165484, 0x0000222c, AL, MOVS(r2, 0x2c));
T(0x10165486, 0x00004291, AL, CMP(r1, r2));
T(0x10165488, 0x0000d104, NE, B(0x10165494); /* 0x1016548c + 0x008 */);
T(0x1016548a, 0x0000d0ff, EQ, B(0x1016548c); /* 0x1016548e + 0xfffffffe */);

T(0x1016548c, 0x00008842, AL, LDRH(r2, r0, 0x002); /* [0x00000002] */);
T(0x1016548e, 0x000023ff, AL, MOVS(r3, 0xff));
T(0x10165490, 0x00008003, AL, STRH(r3, r0); /* [0x00000000] */);
T(0x10165492, 0x0000e015, AL, B(0x101654be); /* 0x10165495 + 0x02a*/);

T(0x10165494, 0x0000490c, AL, LDR(r1, PC, 0x0030); /* [0x101654c8]:0x0000aaaa */);
T(0x10165496, 0x00004a0d, AL, LDR(r2, PC, 0x0034); /* [0x101654cc]:0x00005554 */);
T(0x10165498, 0x000023aa, AL, MOVS(r3, 0xaa));
T(0x1016549a, 0x00005243, AL, STRH(r3, r0, r1));
T(0x1016549c, 0x00002355, AL, MOVS(r3, 0x55));
T(0x1016549e, 0x00005283, AL, STRH(r3, r0, r2));
T(0x101654a0, 0x00002390, AL, MOVS(r3, 0x90));
T(0x101654a2, 0x00005243, AL, STRH(r3, r0, r1));
T(0x101654a4, 0x00008801, AL, LDRH(r1, r0); /* [0x00000000] */);
T(0x101654a6, 0x00008842, AL, LDRH(r2, r0, 0x002); /* [0x00000002] */);
T(0x101654a8, 0x00004b09, AL, LDR(r3, PC, 0x0024); /* [0x101654d0]:0x0000227e */);
T(0x101654aa, 0x0000429a, AL, CMP(r2, r3));
T(0x101654ac, 0x0000d106, NE, B(0x101654bc); /* 0x101654b0 + 0x00c */);
T(0x101654ae, 0x00007f03, AL, LDRB(r3, r0, 0x01c); /* [0x0000001c] */);
T(0x101654b0, 0x0000021c, AL, LSL(r4, r3, 0x08));
T(0x101654b2, 0x00007f83, AL, LDRB(r3, r0, 0x01e); /* [0x0000001e] */);
T(0x101654b4, 0x00004323, AL, ORR(r3, r4));
T(0x101654b6, 0x00000612, AL, LSL(r2, r2, 0x18));
T(0x101654b8, 0x00000a12, AL, LSR(r2, r2, 0x08));
T(0x101654ba, 0x0000431a, AL, ORR(r2, r3));
T(0x101654bc, 0x000023f0, AL, MOVS(r3, 0xf0));
T(0x101654be, 0x00008003, AL, STRH(r3, r0); /* [0x00000000] */);
T(0x101654c0, 0x0000bc10, AL, POP(rSP, r{....4...}););
T(0x101654c2, 0x00000608, AL, LSL(r0, r1, 0x18));
T(0x101654c4, 0x00004310, AL, ORR(r0, r2));
T(0x101654c6, 0x00004770, AL, BX(LR); /* 0x00005554 */);

T(0x101654bc, 0x000023f0, AL, MOVS(r3, 0xf0));
T(0x101654be, 0x00008003, AL, STRH(r3, r0); /* [0x00000000] */);
T(0x101654c0, 0x0000bc10, AL, POP(rSP, r{....4...}););
T(0x101654c2, 0x00000608, AL, LSL(r0, r1, 0x18));
T(0x101654c4, 0x00004310, AL, ORR(r0, r2));
T(0x101654c6, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x101654be, 0x00008003, AL, STRH(r3, r0); /* [0x00000000] */);
T(0x101654c0, 0x0000bc10, AL, POP(rSP, r{....4...}););
T(0x101654c2, 0x00000608, AL, LSL(r0, r1, 0x18));
T(0x101654c4, 0x00004310, AL, ORR(r0, r2));
T(0x101654c6, 0x00004770, AL, BX(LR); /* 0x00000000 */);

A(0x10165834, 0xee110f10, AL, MRC(CP15, 0, r0, CRn(1), CRm(0));
A(0x10165838, 0xe3a01001, AL, MOV(r1, 1));
A(0x1016583c, 0xe0101001, AL, ANDS(r1, r0, r1));
A(0x10165840, 0x0a00000b, EQ, B(0x10165874));
A(0x10165844, 0xe10f0000, AL, MRS(r0, CPSR));
A(0x10165848, 0xe92d0001, AL, PUSH({0...............}));
A(0x1016584c, 0xe3800080, AL, ORR(r0, r0, 128));
A(0x10165850, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x10165854, 0xee17ff7a, AL, MRC(CP15, 0, PC, CRn(7), CRm(10), 3));

A(0x10165874, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x101658f8, 0xee110f10, AL, MRC(CP15, 0, r0, CRn(1), CRm(0));
A(0x101658fc, 0xe3a01001, AL, MOV(r1, 1));
A(0x10165900, 0xe0101001, AL, ANDS(r1, r0, r1));
A(0x10165904, 0x0a00000b, EQ, B(0x10165938));
A(0x10165908, 0xe10f0000, AL, MRS(r0, CPSR));
A(0x1016590c, 0xe92d0001, AL, PUSH({0...............}));
A(0x10165910, 0xe3800080, AL, ORR(r0, r0, 128));
A(0x10165914, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x10165918, 0xee17ff7e, AL, MRC(CP15, 0, PC, CRn(7), CRm(14), 3));

A(0x10165938, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x101659bc, 0xee110f10, AL, MRC(CP15, 0, r0, CRn(1), CRm(0));
A(0x101659c0, 0xe10f0000, AL, MRS(r0, CPSR));
A(0x101659c4, 0xe92d0001, AL, PUSH({0...............}));
A(0x101659c8, 0xe3800080, AL, ORR(r0, r0, 128));
A(0x101659cc, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x101659d0, 0xee111f10, AL, MRC(CP15, 0, r1, CRn(1), CRm(0));
A(0x101659d4, 0xe3c11d40, AL, BIC(r1, r1, ROR(64, 26)); /* 0x00001000 */);
A(0x101659d8, 0xe3c11004, AL, BIC(r1, r1, 4));
A(0x101659dc, 0xe59f22ac, AL, LDR(r2, PC, +0x02ac); /* [0x10165c90]:0x0005f3ff */);
A(0x101659e0, 0xe0011002, AL, AND(r1, r1, r2));
A(0x101659e4, 0xee011f10, AL, MCR(CP15, 0, r1, CRn(1), CRm(0));
A(0x101659e8, 0xee121f10, AL, MRC(CP15, 0, r1, CRn(2), CRm(0));
A(0x101659ec, 0xe1a01001, AL, MOV(r1, r1));
A(0x101659f0, 0xe24ff004, AL, SUB(PC, PC, 4); /* 0x101659f4 */);

A(0x10165a00, 0xee110f10, AL, MRC(CP15, 0, r0, CRn(1), CRm(0));
A(0x10165a04, 0xe3a01001, AL, MOV(r1, 1));
A(0x10165a08, 0xe0101001, AL, ANDS(r1, r0, r1));
A(0x10165a0c, 0x0a000001, EQ, B(0x10165a18));
A(0x10165a10, 0xe3c00001, AL, BIC(r0, r0, 1));
A(0x10165a14, 0xee010f10, AL, MCR(CP15, 0, r0, CRn(1), CRm(0));
A(0x10165a18, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x10165a18, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x10165a1c, 0xee070f9a, AL, MCR(CP15, 0, r0, CRn(7), CRm(10), 4));
A(0x10165a20, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x10165aa4, 0xee110f10, AL, MRC(CP15, 0, r0, CRn(1), CRm(0));
A(0x10165aa8, 0xe3a01001, AL, MOV(r1, 1));
A(0x10165aac, 0xe0101001, AL, ANDS(r1, r0, r1));
A(0x10165ab0, 0x1a000001, NE, B(0x10165abc));
A(0x10165ab4, 0xe3800001, AL, ORR(r0, r0, 1));
A(0x10165ab8, 0xee010f10, AL, MCR(CP15, 0, r0, CRn(1), CRm(0));
A(0x10165abc, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x10165abc, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x10165ac0, 0xee110f10, AL, MRC(CP15, 0, r0, CRn(1), CRm(0));
A(0x10165ac4, 0xe10f2000, AL, MRS(r2, CPSR));
A(0x10165ac8, 0xe10f0000, AL, MRS(r0, CPSR));
A(0x10165acc, 0xe3800080, AL, ORR(r0, r0, 128));
A(0x10165ad0, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x10165ad4, 0xee070f9a, AL, MCR(CP15, 0, r0, CRn(7), CRm(10), 4));
A(0x10165ad8, 0xee121f10, AL, MRC(CP15, 0, r1, CRn(2), CRm(0));
A(0x10165adc, 0xe1a01001, AL, MOV(r1, r1));
A(0x10165ae0, 0xe24ff004, AL, SUB(PC, PC, 4); /* 0x10165ae4 */);

A(0x10165b28, 0xee110f10, AL, MRC(CP15, 0, r0, CRn(1), CRm(0));
A(0x10165b2c, 0xe10f2000, AL, MRS(r2, CPSR));
A(0x10165b30, 0xe10f0000, AL, MRS(r0, CPSR));
A(0x10165b34, 0xe3800080, AL, ORR(r0, r0, 128));
A(0x10165b38, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x10165b3c, 0xee070f9a, AL, MCR(CP15, 0, r0, CRn(7), CRm(10), 4));
A(0x10165b40, 0xee121f10, AL, MRC(CP15, 0, r1, CRn(2), CRm(0));
A(0x10165b44, 0xe1a01001, AL, MOV(r1, r1));
A(0x10165b48, 0xe24ff004, AL, SUB(PC, PC, 4); /* 0x10165b4c */);

A(0x10165ba0, 0xee110f10, AL, MRC(CP15, 0, r0, CRn(1), CRm(0));
A(0x10165ba4, 0xe10f2000, AL, MRS(r2, CPSR));
A(0x10165ba8, 0xe10f0000, AL, MRS(r0, CPSR));
A(0x10165bac, 0xe3800080, AL, ORR(r0, r0, 128));
A(0x10165bb0, 0xe121f000, AL, MSR(CPSR_Cxsf, r0));
A(0x10165bb4, 0xe3a00000, AL, MOV(r0, 0));
A(0x10165bb8, 0xee080f17, AL, MCR(CP15, 0, r0, CRn(8), CRm(7));
A(0x10165bbc, 0xe129f002, AL, MSR(CPSR_CxsF, r2));
A(0x10165bc0, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x10165c10, 0xe3a014c0, AL, MOV(r1, ROR(192, 8)); /* 0xc0000000 */);
A(0x10165c14, 0xee112f10, AL, MRC(CP15, 0, r2, CRn(1), CRm(0));
A(0x10165c18, 0xe0011002, AL, AND(r1, r1, r2));
A(0x10165c1c, 0xe1801001, AL, ORR(r1, r0, r1));
A(0x10165c20, 0xee011f10, AL, MCR(CP15, 0, r1, CRn(1), CRm(0));
A(0x10165c24, 0xee120f10, AL, MRC(CP15, 0, r0, CRn(2), CRm(0));
A(0x10165c28, 0xe1a00000, AL, MOV(r0, r0));
A(0x10165c2c, 0xe24ff004, AL, SUB(PC, PC, 4); /* 0x10165c30 */);

A(0x10165c80, 0xee030f10, AL, MCR(CP15, 0, r0, CRn(3), CRm(0));
A(0x10165c84, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x10165c88, 0xee020f10, AL, MCR(CP15, 0, r0, CRn(2), CRm(0));
A(0x10165c8c, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

T(0x10165e60, 0x0000480a, AL, LDR(r0, PC, 0x0028); /* [0x10165e8c]:0x10400000 */);
T(0x10165e62, 0x0000490b, AL, LDR(r1, PC, 0x002c); /* [0x10165e90]:0x0090f148 */);
T(0x10165e64, 0x00001c0a, AL, SUBS(r2, r1, 0x0); /* 0x0090f148 - 0x00000000 = 0x0090f148 */ XXX);
T(0x10165e66, 0x00000909, AL, LSR(r1, r1, 0x04));
T(0x10165e68, 0x0000d00d, EQ, B(0x10165e86); /* 0x10165e6c + 0x01a */);
T(0x10165e6a, 0x00002400, AL, MOVS(r4, 0x00));
T(0x10165e6c, 0x00001c25, AL, SUBS(r5, r4, 0x0);
T(0x10165e6e, 0x00001c2e, AL, SUBS(r6, r5, 0x0);
T(0x10165e70, 0x00001c37, AL, SUBS(r7, r6, 0x0);
T(0x10165e72, 0x0000c0f0, AL, STMIA(r0.WB, {....4567}));
T(0x10165e74, 0x00001e49, AL, ADDS(r1, r1, 0x1);
T(0x10165e76, 0x0000d1fc, NE, B(0x10165e72); /* 0x10165e7a + 0xfffffff8 */);
T(0x10165e78, 0x0000210f, AL, MOVS(r1, 0x0f));
T(0x10165e7a, 0x0000400a, AL, AND(r2, r1));
T(0x10165e7c, 0x0000d003, EQ, B(0x10165e86); /* 0x10165e80 + 0x006 */);
T(0x10165e7e, 0x00007004, AL, STRB(r4, r0); /* [0x10400000] */);
T(0x10165e80, 0x00003001, AL, ADDS(r0, 0x01));
T(0x10165e82, 0x00001e52, AL, ADDS(r2, r2, 0x1);
T(0x10165e84, 0x0000d1fb, NE, B(0x10165e7e); /* 0x10165e88 + 0xfffffff6 */);

T(0x10165e86, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10165e94, 0x0000b5f0, AL, PUSH(rSP, r{....4567, LR}););
T(0x10165e96, 0x0000480a, AL, LDR(r0, PC, 0x0028); /* [0x10165ec0]:0x10323d60 */);
T(0x10165e98, 0x0000490a, AL, LDR(r1, PC, 0x0028); /* [0x10165ec4]:0x10d0f148 */);
T(0x10165e9a, 0x00004a0b, AL, LDR(r2, PC, 0x002c); /* [0x10165ec8]:0x0000005c */);
T(0x10165e9c, 0x00003210, AL, ADDS(r2, 0x10));
T(0x10165e9e, 0xf000f801, AL, BL(0x10165ea4); /* 0x10165ea3 + 0x00000002, LR = 0x10165ea2 */);
T(0x10165ea2, 0x0000bdf0, AL, POP(rSP, r{....4567, PC}););

T(0x10165ea4, 0x00000913, AL, LSR(r3, r2, 0x04));
T(0x10165ea6, 0x0000d003, EQ, B(0x10165eb0); /* 0x10165eaa + 0x006 */);
T(0x10165ea8, 0x0000c8f0, AL, LDMIA(r0.WB, {....4567}));
T(0x10165eaa, 0x0000c1f0, AL, STMIA(r1.WB, {....4567}));
T(0x10165eac, 0x00003b01, AL, SUBS(r3, 0x01));
T(0x10165eae, 0x0000d1fb, NE, B(0x10165ea8); /* 0x10165eb2 + 0xfffffff6 */);

T(0x10165eb0, 0x00002303, AL, MOVS(r3, 0x03));
T(0x10165eb2, 0x0000401a, AL, AND(r2, r3));
T(0x10165eb4, 0x0000d003, EQ, B(0x10165ebe); /* 0x10165eb8 + 0x006 */);
T(0x10165eb6, 0x0000c808, AL, LDMIA(r0.WB, {...3....}));
T(0x10165eb8, 0x0000c108, AL, STMIA(r1.WB, {...3....}));
T(0x10165eba, 0x00003a01, AL, SUBS(r2, 0x01));
T(0x10165ebc, 0x0000d1fb, NE, B(0x10165eb6); /* 0x10165ec0 + 0xfffffff6 */);

T(0x10165ebe, 0x000046f7, AL, MOV(PC, LR));

A(0x10166038, 0xe92d01f0, AL, PUSH({....45678.......}));
A(0x1016603c, 0xe2108003, AL, ANDS(r8, r0, 3));
A(0x10166040, 0x0a000004, EQ, B(0x10166058));
A(0x10166044, 0xe5d14000, AL, LDRB(r4, r1, +0x0000); /* [0x00000000] */);
A(0x10166048, 0xe4c04001, AL, STRB(r4, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1016604c, 0xe0233004, AL, EOR(r3, r3, r4));
A(0x10166050, 0xe2422001, AL, SUB(r2, r2, 1));
A(0x10166054, 0xeafffff8, AL, B(0x1016603c));

A(0x10166058, 0xe2522010, AL, SUBS(r2, r2, 16));
A(0x1016605c, 0xba000022, LT, B(0x101660ec));
A(0x10166060, 0xe5d14000, AL, LDRB(r4, r1, +0x0000); /* [0x00000000] */);
A(0x10166064, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x10166068, 0xe1844408, AL, ORR(r4, r4, LSL(r8, 0x08)));
A(0x1016606c, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x10166070, 0xe1844808, AL, ORR(r4, r4, LSL(r8, 0x10)));
A(0x10166074, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x10166078, 0xe1844c08, AL, ORR(r4, r4, LSL(r8, 0x18)));
A(0x1016607c, 0xe0233004, AL, EOR(r3, r3, r4));
A(0x10166080, 0xe5d15000, AL, LDRB(r5, r1, +0x0000); /* [0x00000000] */);
A(0x10166084, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x10166088, 0xe1855408, AL, ORR(r5, r5, LSL(r8, 0x08)));
A(0x1016608c, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x10166090, 0xe1855808, AL, ORR(r5, r5, LSL(r8, 0x10)));
A(0x10166094, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x10166098, 0xe1855c08, AL, ORR(r5, r5, LSL(r8, 0x18)));
A(0x1016609c, 0xe0233005, AL, EOR(r3, r3, r5));
A(0x101660a0, 0xe5d16000, AL, LDRB(r6, r1, +0x0000); /* [0x00000000] */);
A(0x101660a4, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x101660a8, 0xe1866408, AL, ORR(r6, r6, LSL(r8, 0x08)));
A(0x101660ac, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x101660b0, 0xe1866808, AL, ORR(r6, r6, LSL(r8, 0x10)));
A(0x101660b4, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x101660b8, 0xe1866c08, AL, ORR(r6, r6, LSL(r8, 0x18)));
A(0x101660bc, 0xe0233006, AL, EOR(r3, r3, r6));
A(0x101660c0, 0xe5d17000, AL, LDRB(r7, r1, +0x0000); /* [0x00000000] */);
A(0x101660c4, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x101660c8, 0xe1877408, AL, ORR(r7, r7, LSL(r8, 0x08)));
A(0x101660cc, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x101660d0, 0xe1877808, AL, ORR(r7, r7, LSL(r8, 0x10)));
A(0x101660d4, 0xe5d18000, AL, LDRB(r8, r1, +0x0000); /* [0x00000000] */);
A(0x101660d8, 0xe1877c08, AL, ORR(r7, r7, LSL(r8, 0x18)));
A(0x101660dc, 0xe0233007, AL, EOR(r3, r3, r7));
A(0x101660e0, 0xe8a000f0, AL, STMIA(r0.WB , {....4567........}));
A(0x101660e4, 0xe2522010, AL, SUBS(r2, r2, 16));
A(0x101660e8, 0xaaffffdc, GE, B(0x10166060));

A(0x101660ec, 0xe292200f, AL, ADDS(r2, r2, 15));
A(0x101660f0, 0xba000004, LT, B(0x10166108));
A(0x101660f4, 0xe5d14000, AL, LDRB(r4, r1, +0x0000); /* [0x00000000] */);
A(0x101660f8, 0xe4c04001, AL, STRB(r4, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x101660fc, 0xe0233004, AL, EOR(r3, r3, r4));
A(0x10166100, 0xe2522001, AL, SUBS(r2, r2, 1));
A(0x10166104, 0xaafffffa, GE, B(0x101660f4));

A(0x10166108, 0xe0233803, AL, EOR(r3, r3, LSL(r3, 0x10)));
A(0x1016610c, 0xe0233403, AL, EOR(r3, r3, LSL(r3, 0x08)));
A(0x10166110, 0xe1a03c23, AL, MOV(r3, LSR(r3, 0x18)));
A(0x10166114, 0xe59f200c, AL, LDR(r2, PC, +0x000c); /* [0x10166128]:0x1031bf13 */);
A(0x10166118, 0xe7d20003, AL, LDRB(r0, r2, +r3));
A(0x1016611c, 0xe2000001, AL, AND(r0, r0, 1));
A(0x10166120, 0xe8bd01f0, AL, POP({....45678.......}));
A(0x10166124, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

T(0x10166e54, 0x0000b500, AL, PUSH(rSP, r{........, LR}););
T(0x10166e56, 0x0000465c, AL, MOV(r4, r11));
T(0x10166e58, 0x00004665, AL, MOV(r5, r12));
T(0x10166e5a, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10166e5c, 0x00004907, AL, LDR(r1, PC, 0x001c); /* [0x10166e7c]:0x10d0f144 */);
T(0x10166e5e, 0x00006008, AL, STR(r0, r1); /* [0x10d0f144] */);
T(0x10166e60, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10166e62, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10166e64, 0xf7d7ff4e, AL, BL(0x1013ed04); /* 0x10166e69 + 0x00000e9c, LR = 0x10166e68 */);
T(0x10166e68, 0xf7d7ff34, AL, BL(0x1013ecd4); /* 0x10166e6d + 0x00000e68, LR = 0x10166e6c */);
T(0x10166e6c, 0x00002001, AL, MOVS(r0, 0x01));
T(0x10166e6e, 0x00004904, AL, LDR(r1, PC, 0x0010); /* [0x10166e80]:0x100b0ae5 */);
T(0x10166e70, 0xf7d7ff48, AL, BL(0x1013ed04); /* 0x10166e75 + 0x00000e90, LR = 0x10166e74 */);
T(0x10166e74, 0x000046a3, AL, MOV(r11, r4));
T(0x10166e76, 0x000046ac, AL, MOV(r12, r5));
T(0x10166e78, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x10166e7a, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x1013ecd4, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1013ecd6, 0x000043c9, AL, MVN(r1, r1));
T(0x1013ecd8, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x1013ecda, 0x00001c08, AL, SUBS(r0, r1, 0x0);
T(0x1013ecdc, 0xf01bfeb2, AL, BL(0x1015aa44); /* 0x1013ece1 + 0x00000d64, LR = 0x1013ece0 */);
T(0x1013ece0, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1013ece2, 0x0000201f, AL, MOVS(r0, 0x1f));
T(0x1013ece4, 0x00000200, AL, LSL(r0, r0, 0x08));
T(0x1013ece6, 0xf02deef4, AL, BLX(0x1016cad0); /* 0x1013eceb + 0x00000de8, LR = 0x1013ecea */);
T(0x1013ecea, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1013ecec, 0x00002003, AL, MOVS(r0, 0x03));
T(0x1013ecee, 0x00000580, AL, LSL(r0, r0, 0x16));
T(0x1013ecf0, 0xf02deeee, AL, BLX(0x1016cad0); /* 0x1013ecf5 + 0x00000ddc, LR = 0x1013ecf4 */);
T(0x1013ecf4, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1013ecf6, 0x00002001, AL, MOVS(r0, 0x01));
T(0x1013ecf8, 0x00000600, AL, LSL(r0, r0, 0x18));
T(0x1013ecfa, 0xf02deeea, AL, BLX(0x1016cad0); /* 0x1013ecff + 0x00000dd4, LR = 0x1013ecfe */);
T(0x1013ecfe, 0x0000b001, AL, ADD(SP, 0x004));
T(0x1013ed00, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x1013ed02, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x1013ed04, 0x00004a0e, AL, LDR(r2, PC, 0x0038); /* [0x1013ed40]:0x10ce9338 */);
T(0x1013ed06, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1013ed08, 0x0000d007, EQ, B(0x1013ed1a); /* 0x1013ed0c + 0x00e */);
T(0x1013ed0a, 0x00002801, AL, CMPS(r0, 0x01));
T(0x1013ed0c, 0x0000d00b, EQ, B(0x1013ed26); /* 0x1013ed10 + 0x016 */);
T(0x1013ed0e, 0x00002802, AL, CMPS(r0, 0x02));
T(0x1013ed10, 0x0000d00b, EQ, B(0x1013ed2a); /* 0x1013ed14 + 0x016 */);
T(0x1013ed12, 0x00002803, AL, CMPS(r0, 0x03));
T(0x1013ed14, 0x0000d100, NE, B(0x1013ed18); /* 0x1013ed18 + 0x000 */);
T(0x1013ed16, 0x00006091, AL, STR(r1, r2, 0x008); /* [0x10ce9340] */);
T(0x1013ed18, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1013ed18, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1013ed1a, 0x00001c10, AL, SUBS(r0, r2, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013ed1c, 0x00002200, AL, MOVS(r2, 0x00));
T(0x1013ed1e, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1013ed20, 0x00002300, AL, MOVS(r3, 0x00));
T(0x1013ed22, 0x0000c00e, AL, STMIA(r0.WB, {.123....}));
T(0x1013ed24, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1013ed26, 0x00006011, AL, STR(r1, r2); /* [0x00000000] */);
T(0x1013ed28, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1013ed2a, 0x00006051, AL, STR(r1, r2, 0x004); /* [0x00000004] */);
T(0x1013ed2c, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x1015aa44, 0x0000b5f0, AL, PUSH(rSP, r{....4567, LR}););
T(0x1015aa46, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1015aa48, 0x00001c0d, AL, SUBS(r5, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1015aa4a, 0x0000b083, AL, SUB(SP, 0x00c));
T(0x1015aa4c, 0xf011ef78, AL, BLX(0x1016c940); /* 0x1015aa51 + 0x00000ef0, LR = 0x1015aa50 */);
T(0x1015aa50, 0x00009400, AL, STR(r4, SP, 0x0000);
T(0x1015aa52, 0x00009501, AL, STR(r5, SP, 0x0004);
T(0x1015aa54, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015aa56, 0xf000f800, AL, BL(0x1015aa5a); /* 0x1015aa5b + 0x00000000, LR = 0x1015aa5a */);
T(0x1015aa5a, 0x00009002, AL, STR(r0, SP, 0x0008);
T(0x1015aa5c, 0x00004826, AL, LDR(r0, PC, 0x0098); /* [0x1015aaf8]:0x00000094 */);
T(0x1015aa5e, 0x00004669, AL, MOV(r1, SP));
T(0x1015aa60, 0x00004478, AL, ADD(r0, PC));
T(0x1015aa62, 0xf000f800, AL, BL(0x1015aa66); /* 0x1015aa67 + 0x00000000, LR = 0x1015aa66 */);
T(0x1015aa66, 0x00001c05, AL, SUBS(r5, r0, 0x0); /* 0x00000094 - 0x00000000 = 0x00000094 */ XXX);
T(0x1015aa68, 0x00001c0e, AL, SUBS(r6, r1, 0x0);
T(0x1015aa6a, 0x0000a900, AL, ADD(r1, SP, 0x000)));
T(0x1015aa6c, 0x0000c903, AL, LDMIA(r1.WB, {01......}));
T(0x1015aa6e, 0xf000f800, AL, BL(0x1015aa72); /* 0x1015aa73 + 0x00000000, LR = 0x1015aa72 */);
T(0x1015aa72, 0xf000f800, AL, BL(0x1015aa76); /* 0x1015aa77 + 0x00000000, LR = 0x1015aa76 */);
T(0x1015aa76, 0xf000fca5, AL, BL(0x1015b3c4); /* 0x1015aa7b + 0x0000094a, LR = 0x1015aa7a */);
T(0x1015aa7a, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1015aa7c, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015aa7e, 0xf000f800, AL, BL(0x1015aa82); /* 0x1015aa83 + 0x00000000, LR = 0x1015aa82 */);
T(0x1015aa82, 0x00001c07, AL, SUBS(r7, r0, 0x0);
T(0x1015aa84, 0xf005e946, AL, BLX(0x1015fd14); /* 0x1015aa89 + 0x0000028c, LR = 0x1015aa88 */);
T(0x1015aa88, 0x00001c04, AL, SUBS(r4, r0, 0x0);
T(0x1015aa8a, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1015aa8c, 0x00006207, AL, STR(r7, r0, 0x020));
T(0x1015aa8e, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015aa90, 0xf005f928, AL, BL(0x1015fce4); /* 0x1015aa95 + 0x00000250, LR = 0x1015aa94 */);
T(0x1015aa94, 0x00001c41, AL, SUBS(r1, r0, 0x1);
T(0x1015aa96, 0x00006261, AL, STR(r1, r4, 0x024));
T(0x1015aa98, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1015aa9a, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015aa9c, 0xf000f800, AL, BL(0x1015aaa0); /* 0x1015aaa1 + 0x00000000, LR = 0x1015aaa0 */);
T(0x1015aaa0, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1015aaa2, 0x000062a0, AL, STR(r0, r4, 0x028));
T(0x1015aaa4, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015aaa6, 0xf006fc77, AL, BL(0x10161398); /* 0x1015aaab + 0x000008ee, LR = 0x1015aaaa */);
T(0x1015aaaa, 0x00002100, AL, MOVS(r1, 0x00));
T(0x1015aaac, 0x000062e0, AL, STR(r0, r4, 0x02c));
T(0x1015aaae, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015aab0, 0xf000f800, AL, BL(0x1015aab4); /* 0x1015aab5 + 0x00000000, LR = 0x1015aab4 */);
T(0x1015aab4, 0x00006320, AL, STR(r0, r4, 0x030));
T(0x1015aab6, 0xf000f800, AL, BL(0x1015aaba); /* 0x1015aabb + 0x00000000, LR = 0x1015aaba */);
T(0x1015aaba, 0xf000f800, AL, BL(0x1015aabe); /* 0x1015aabf + 0x00000000, LR = 0x1015aabe */);
T(0x1015aabe, 0xf000f800, AL, BL(0x1015aac2); /* 0x1015aac3 + 0x00000000, LR = 0x1015aac2 */);
T(0x1015aac2, 0xf000f800, AL, BL(0x1015aac6); /* 0x1015aac7 + 0x00000000, LR = 0x1015aac6 */);
T(0x1015aac6, 0xf000f800, AL, BL(0x1015aaca); /* 0x1015aacb + 0x00000000, LR = 0x1015aaca */);
T(0x1015aaca, 0xf000f800, AL, BL(0x1015aace); /* 0x1015aacf + 0x00000000, LR = 0x1015aace */);
T(0x1015aace, 0xf000f800, AL, BL(0x1015aad2); /* 0x1015aad3 + 0x00000000, LR = 0x1015aad2 */);
T(0x1015aad2, 0xf000f800, AL, BL(0x1015aad6); /* 0x1015aad7 + 0x00000000, LR = 0x1015aad6 */);
T(0x1015aad6, 0x00001c28, AL, SUBS(r0, r5, 0x0);
T(0x1015aad8, 0x00001c31, AL, SUBS(r1, r6, 0x0);
T(0x1015aada, 0x0000b003, AL, ADD(SP, 0x00c));
T(0x1015aadc, 0x0000bcf0, AL, POP(rSP, r{....4567}););
T(0x1015aade, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x1015aae0, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x1015b3c4, 0x0000491b, AL, LDR(r1, PC, 0x006c); /* [0x1015b434]:0x10ce9450 */);
T(0x1015b3c6, 0x0000b430, AL, PUSH(rSP, r{....45..}););
T(0x1015b3c8, 0x00002017, AL, MOVS(r0, 0x17));
T(0x1015b3ca, 0x00006008, AL, STR(r0, r1); /* [0x10ce9450] */);
T(0x1015b3cc, 0x00002036, AL, MOVS(r0, 0x36));
T(0x1015b3ce, 0x00006048, AL, STR(r0, r1, 0x004); /* [0x10ce9454] */);
T(0x1015b3d0, 0x00004a18, AL, LDR(r2, PC, 0x0060); /* [0x1015b434]:0x10ce9450 */);
T(0x1015b3d2, 0x00004919, AL, LDR(r1, PC, 0x0064); /* [0x1015b438]:0x66d619e1 */);
T(0x1015b3d4, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015b3d6, 0x00002301, AL, MOVS(r3, 0x01));
T(0x1015b3d8, 0x00003208, AL, ADDS(r2, 0x08));
T(0x1015b3da, 0x00000c1c, AL, LSR(r4, r3, 0x10));
T(0x1015b3dc, 0x000018e4, AL, SUBS(r4, r4, r3);
T(0x1015b3de, 0x00000085, AL, LSL(r5, r0, 0x02));
T(0x1015b3e0, 0x00005154, AL, STR(r4, r2, r5));
T(0x1015b3e2, 0x00001c1c, AL, SUBS(r4, r3, 0x0);
T(0x1015b3e4, 0x00004b15, AL, LDR(r3, PC, 0x0054); /* [0x1015b43c]:0x00010dcd */);
T(0x1015b3e6, 0x00003001, AL, ADDS(r0, 0x01));
T(0x1015b3e8, 0x00004363, AL, MUL(r3, r4));
T(0x1015b3ea, 0x0000185b, AL, SUBS(r3, r3, r1);
T(0x1015b3ec, 0x00002837, AL, CMPS(r0, 0x37));
T(0x1015b3ee, 0x0000dbf4, LT, B(0x1015b3da); /* 0x1015b3f2 + 0xffffffe8 */);
T(0x1015b3f0, 0x0000bc30, AL, POP(rSP, r{....45..}););
T(0x1015b3f2, 0x00004770, AL, BX(LR); /* 0x66d619e1 */);

T(0x1015fce4, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x1015fce6, 0x00001c08, AL, SUBS(r0, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1015fce8, 0x0000d007, EQ, B(0x1015fcfa); /* 0x1015fcec + 0x00e */);
T(0x1015fcea, 0x00007801, AL, LDRB(r1, r0));
T(0x1015fcec, 0x00002900, AL, CMPS(r1, 0x00));
T(0x1015fcee, 0x0000d004, EQ, B(0x1015fcfa); /* 0x1015fcf2 + 0x008 */);
T(0x1015fcf0, 0x0000a105, AL, ADD(r1, PC, 0x014); /* 0x1015fd08 */));
T(0x1015fcf2, 0xf7fbee2a, AL, BLX(0x1015b948); /* 0x1015fcf7 + 0x00000c54, LR = 0x1015fcf6 */);
T(0x1015fcf6, 0x00002800, AL, CMPS(r0, 0x00));
T(0x1015fcf8, 0x0000d104, NE, B(0x1015fd04); /* 0x1015fcfc + 0x008 */);

A(0x1015b948, 0xe3100003, AL, TST(r0, 3));
A(0x1015b94c, 0x03110003, EQ, TST(r1, 3));
A(0x1015b950, 0x1a000017, NE, B(0x1015b9b4));
A(0x1015b954, 0xe92d4000, AL, PUSH({..............e.}));
A(0x1015b958, 0xe51fe020, AL, LDR(LR, PC, -0x0020); /* [0x1015b93f]:0x01010100 */);
A(0x1015b95c, 0xe4902004, AL, LDR(r2, r0 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b960, 0xe4913004, AL, LDR(r3, r1 | rWB, +0x0004); /* [0x00000004] */);
A(0x1015b964, 0xe042c00e, AL, SUB(r12, r2, LR));
A(0x1015b968, 0xe1ccc002, AL, BIC(r12, r12, r2));
A(0x1015b96c, 0xe01cc38e, AL, ANDS(r12, r12, LSL(LR, 0x07)));
A(0x1015b970, 0x01520003, EQ, CMP(r2, r3));
A(0x1015b974, 0x0afffff8, EQ, B(0x1015b95c));
A(0x1015b978, 0xe8bd4000, AL, POP({..............e.}));
A(0x1015b97c, 0xe1a00c03, AL, MOV(r0, LSL(r3, 0x18)));
A(0x1015b980, 0xe0500c02, AL, SUBS(r0, r0, LSL(r2, 0x18)));
A(0x1015b984, 0x031c0eff, EQ, TST(r12, ROR(255, 28)); /* 0x00000ff0 */);
A(0x1015b988, 0x1a000007, NE, B(0x1015b9ac));
A(0x1015b98c, 0xe1a00803, AL, MOV(r0, LSL(r3, 0x10)));
A(0x1015b990, 0xe0500802, AL, SUBS(r0, r0, LSL(r2, 0x10)));
A(0x1015b994, 0x031c0cff, EQ, TST(r12, ROR(255, 24)); /* 0x0000ff00 */);
A(0x1015b998, 0x1a000003, NE, B(0x1015b9ac));
A(0x1015b99c, 0xe1a00403, AL, MOV(r0, LSL(r3, 0x08)));
A(0x1015b9a0, 0xe0500402, AL, SUBS(r0, r0, LSL(r2, 0x08)));
A(0x1015b9a4, 0x031c08ff, EQ, TST(r12, ROR(255, 16)); /* 0x00ff0000 */);
A(0x1015b9a8, 0x00530002, EQ, SUBS(r0, r3, r2));
A(0x1015b9ac, 0x11a00060, NE, MOV(r0, RRX(r0)));
A(0x1015b9b0, 0xe12fff1e, AL, BX(LR); /* 0x01010100 */);

A(0x1015b9ac, 0x11a00060, NE, MOV(r0, RRX(r0)));
A(0x1015b9b0, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1015b9b4, 0xe4d02001, AL, LDRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b9b8, 0xe4d13001, AL, LDRB(r3, r1 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b9bc, 0xe3520001, AL, CMP(r2, 1));
A(0x1015b9c0, 0x21520003, CS, CMP(r2, r3));
A(0x1015b9c4, 0x1a000004, NE, B(0x1015b9dc));
A(0x1015b9c8, 0xe4d02001, AL, LDRB(r2, r0 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b9cc, 0xe4d13001, AL, LDRB(r3, r1 | rWB, +0x0001); /* [0x00000001] */);
A(0x1015b9d0, 0xe3520001, AL, CMP(r2, 1));
A(0x1015b9d4, 0x21520003, CS, CMP(r2, r3));
A(0x1015b9d8, 0x0afffff5, EQ, B(0x1015b9b4));

A(0x1015b9dc, 0xe0420003, AL, SUB(r0, r2, r3));
A(0x1015b9e0, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

T(0x1015fcfa, 0x00004804, AL, LDR(r0, PC, 0x0010); /* [0x1015fd0c]:0x001c3534 */);
T(0x1015fcfc, 0x00004478, AL, ADD(r0, PC));
T(0x1015fcfe, 0x0000b001, AL, ADD(SP, 0x004));
T(0x1015fd00, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x1015fd02, 0x00004718, AL, BX(r3); /* 0x1015fd06 */);

T(0x1015fd04, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1015fd06, 0x0000e7fa, AL, B(0x1015fcfc); /* 0x1015fd09 + 0xfffffff4*/);

T(0x1015fcfc, 0x00004478, AL, ADD(r0, PC));
T(0x1015fcfe, 0x0000b001, AL, ADD(SP, 0x004));
T(0x1015fd00, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x1015fd02, 0x00004718, AL, BX(r3); /* 0x1015fd06 */);

A(0x1015fd04, 0x0043e7fa, EQ, STRD(LR, r3 | rWB, -0x007a); /* [0xffffff85] */);
A(0x1015fd08, 0x35340000, CC, LDR(r0, r4 | rWB, -0x0000); /* [0xffffffff] */);
arm_step:0755: return(arm_step__fail_decode(cj))
A(0x1015fd0c, 0x4778001c, MI, IR[27, 25] = 0x03/* XXX */);
0x1015fd0c:(0x04): Failed to disassemble given code!
arm_step__fail_decode:0629: return(0)

A(0x1015fd14, 0xe59f0000, AL, LDR(r0, PC, +0x0000); /* [0x1015fd1c]:0x10ce9534 */);
A(0x1015fd18, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

T(0x10161398, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x1016139a, 0x00001c08, AL, SUBS(r0, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1016139c, 0x0000d007, EQ, B(0x101613ae); /* 0x101613a0 + 0x00e */);
T(0x1016139e, 0x00007801, AL, LDRB(r1, r0));
T(0x101613a0, 0x00002900, AL, CMPS(r1, 0x00));
T(0x101613a2, 0x0000d004, EQ, B(0x101613ae); /* 0x101613a6 + 0x008 */);
T(0x101613a4, 0x0000a105, AL, ADD(r1, PC, 0x014); /* 0x101613bc */));
T(0x101613a6, 0xf7faead0, AL, BLX(0x1015b948); /* 0x101613ab + 0x000005a0, LR = 0x101613aa */);
T(0x101613aa, 0x00002800, AL, CMPS(r0, 0x00));
T(0x101613ac, 0x0000d104, NE, B(0x101613b8); /* 0x101613b0 + 0x008 */);

T(0x101613ae, 0x00004804, AL, LDR(r0, PC, 0x0010); /* [0x101613c0]:0x001c2110 */);
T(0x101613b0, 0x00004478, AL, ADD(r0, PC));
T(0x101613b2, 0x0000b001, AL, ADD(SP, 0x004));
T(0x101613b4, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x101613b6, 0x00004718, AL, BX(r3); /* 0x101613ba */);

T(0x101613b8, 0x00002000, AL, MOVS(r0, 0x00));
T(0x101613ba, 0x0000e7fa, AL, B(0x101613b0); /* 0x101613bd + 0xfffffff4*/);

T(0x101613b0, 0x00004478, AL, ADD(r0, PC));
T(0x101613b2, 0x0000b001, AL, ADD(SP, 0x004));
T(0x101613b4, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x101613b6, 0x00004718, AL, BX(r3); /* 0x101613ba */);

A(0x101613b8, 0x0043e7fa, EQ, STRD(LR, r3 | rWB, -0x007a); /* [0xffffff85] */);
A(0x101613bc, 0x21100000, CS, TST(r0, r0));
arm_step:0755: return(arm_step__fail_decode(cj))
A(0x101613c0, 0x4778001c, MI, IR[27, 25] = 0x03/* XXX */);
0x101613c0:(0x04): Failed to disassemble given code!
arm_step__fail_decode:0629: return(0)

T(0x10166eb0, 0x0000b570, AL, PUSH(rSP, r{....456., LR}););
T(0x10166eb2, 0x00001c04, AL, SUBS(r4, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10166eb4, 0xf750ff58, AL, BL(0x100b7d68); /* 0x10166eb9 + 0x00000eb0, LR = 0x10166eb8 */);
T(0x10166eb8, 0x0000a300, AL, ADD(r3, PC, 0x000); /* 0x10166ebc */));
T(0x10166eba, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x100b7d68, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x100b7d6a, 0x00006900, AL, LDR(r0, r0, 0x010));
T(0x100b7d6c, 0x00002800, AL, CMPS(r0, 0x00));
T(0x100b7d6e, 0x0000d004, EQ, B(0x100b7d7a); /* 0x100b7d72 + 0x008 */);
T(0x100b7d70, 0x000068c1, AL, LDR(r1, r0, 0x00c));
T(0x100b7d72, 0x00006880, AL, LDR(r0, r0, 0x008));
T(0x100b7d74, 0x00000089, AL, LSL(r1, r1, 0x02));
T(0x100b7d76, 0xf7ddfc41, AL, BL(0x100955fc); /* 0x100b7d7b + 0x00000882, LR = 0x100b7d7a */);

T(0x100b7d7a, 0x0000bd08, AL, POP(rSP, r{...3...., PC}););

T(0x10166f98, 0x00004801, AL, LDR(r0, PC, 0x0004); /* [0x10166fa0]:0x10ce7a1c */);
T(0x10166f9a, 0x00006800, AL, LDR(r0, r0));
T(0x10166f9c, 0x00004770, AL, BX(LR); /* 0x10ce7a1c */);

T(0x10166fac, 0x0000a300, AL, ADD(r3, PC, 0x000); /* 0x10166fb0 */));
T(0x10166fae, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x10167854, 0x00002100, AL, MOVS(r1, 0x00));
T(0x10167856, 0x00006001, AL, STR(r1, r0); /* [0x00000000] */);
T(0x10167858, 0x00006041, AL, STR(r1, r0, 0x004); /* [0x00000004] */);
T(0x1016785a, 0x00006081, AL, STR(r1, r0, 0x008); /* [0x00000008] */);
T(0x1016785c, 0x000060c1, AL, STR(r1, r0, 0x00c); /* [0x0000000c] */);
T(0x1016785e, 0x00006101, AL, STR(r1, r0, 0x010); /* [0x00000010] */);
T(0x10167860, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10167864, 0x0000a100, AL, ADD(r1, PC, 0x000); /* 0x10167868 */));
T(0x10167866, 0x00004708, AL, BX(r1); /* 0x00000000 */);

T(0x10167930, 0x0000a100, AL, ADD(r1, PC, 0x000); /* 0x10167934 */));
T(0x10167932, 0x00004708, AL, BX(r1); /* 0x00000000 */);

T(0x10167d8c, 0x00004901, AL, LDR(r1, PC, 0x0004); /* [0x10167d94]:0x10ce7b10 */);
T(0x10167d8e, 0x00006808, AL, LDR(r0, r1); /* [0x10ce7b10] */);
T(0x10167d90, 0x00004770, AL, BX(LR); /* 0x00000000 */);

T(0x10167dac, 0x00004801, AL, LDR(r0, PC, 0x0004); /* [0x10167db4]:0x10ce7a5c */);
T(0x10167dae, 0x0000212d, AL, MOVS(r1, 0x2d));
T(0x10167db0, 0x00004770, AL, BX(LR); /* 0x10ce7a5c */);

T(0x10167ecc, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10167ece, 0x0000b085, AL, SUB(SP, 0x014));
T(0x10167ed0, 0x0000466c, AL, MOV(r4, SP));
T(0x10167ed2, 0x0000a301, AL, ADD(r3, PC, 0x004); /* 0x10167eda */));
T(0x10167ed4, 0x00004718, AL, BX(r3); /* 0x00000000 */);

T(0x10167f64, 0x0000a100, AL, ADD(r1, PC, 0x000); /* 0x10167f68 */));
T(0x10167f66, 0x00004708, AL, BX(r1); /* 0x00000000 */);

T(0x10168010, 0x0000b510, AL, PUSH(rSP, r{....4..., LR}););
T(0x10168012, 0x00002000, AL, MOVS(r0, 0x00));
T(0x10168014, 0x00004905, AL, LDR(r1, PC, 0x0014); /* [0x1016802c]:0x10ce7b10 */);
T(0x10168016, 0x00006008, AL, STR(r0, r1); /* [0x10ce7b10] */);
T(0x10168018, 0x00004905, AL, LDR(r1, PC, 0x0014); /* [0x10168030]:0x10ce7b14 */);
T(0x1016801a, 0x00006008, AL, STR(r0, r1); /* [0x10ce7b14] */);
T(0x1016801c, 0x00004805, AL, LDR(r0, PC, 0x0014); /* [0x10168034]:0x10ce7a48 */);
T(0x1016801e, 0xf7feff47, AL, BL(0x10166eb0); /* 0x10168023 + 0x00000e8e, LR = 0x10168022 */);
T(0x10168022, 0x00004905, AL, LDR(r1, PC, 0x0014); /* [0x10168038]:0x10ce7b1c */);
T(0x10168024, 0x00006008, AL, STR(r0, r1); /* [0x10ce7b1c] */);
T(0x10168026, 0x0000bc10, AL, POP(rSP, r{....4...}););
T(0x10168028, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x1016802a, 0x00004718, AL, BX(r3); /* 0x10ce7a48 */);

A(0x101685cc, 0xe59fc000, AL, LDR(r12, PC, +0x0000); /* [0x101685d4]:0x10160d81 */);
A(0x101685d0, 0xe12fff1c, AL, BX(r12); /* 0x10160d81 */);

T(0x10160d80, 0x0000b508, AL, PUSH(rSP, r{...3...., LR}););
T(0x10160d82, 0x00001c0b, AL, SUBS(r3, r1, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10160d84, 0x00001c02, AL, SUBS(r2, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x10160d86, 0x00004803, AL, LDR(r0, PC, 0x000c); /* [0x10160d94]:0x6e5d800c */);
T(0x10160d88, 0x00002102, AL, MOVS(r1, 0x02));
T(0x10160d8a, 0xf7ddff5f, AL, BL(0x1013ec4c); /* 0x10160d8f + 0x00000ebe, LR = 0x10160d8e */);
T(0x10160d8e, 0x0000b001, AL, ADD(SP, 0x004));
T(0x10160d90, 0x0000bc08, AL, POP(rSP, r{...3....}););
T(0x10160d92, 0x00004718, AL, BX(r3));

T(0x1013ec4c, 0x0000b40f, AL, PUSH(rSP, r{0123....}););
T(0x1013ec4e, 0x0000b5f0, AL, PUSH(rSP, r{....4567, LR}););
T(0x1013ec50, 0x0000b091, AL, SUB(SP, 0x044));
T(0x1013ec52, 0x0000ae01, AL, ADD(r6, SP, 0x004)));
T(0x1013ec54, 0x00001c05, AL, SUBS(r5, r0, 0x0); /* 0x00000000 - 0x00000000 = 0x00000000 */ XXX);
T(0x1013ec56, 0x00002140, AL, MOVS(r1, 0x40));
T(0x1013ec58, 0x00001c30, AL, SUBS(r0, r6, 0x0);
T(0x1013ec5a, 0x0000ac18, AL, ADD(r4, SP, 0x060)));
T(0x1013ec5c, 0xf01cec24, AL, BLX(0x1015b4a8); /* 0x1013ec61 + 0x00000848, LR = 0x1013ec60 */);
T(0x1013ec60, 0xf028f99a, AL, BL(0x10166f98); /* 0x1013ec65 + 0x00000334, LR = 0x1013ec64 */);
T(0x1013ec64, 0x00009001, AL, STR(r0, SP, 0x0004);
T(0x1013ec66, 0x00002000, AL, MOVS(r0, 0x00));
T(0x1013ec68, 0x00004b11, AL, LDR(r3, PC, 0x0044); /* [0x1013ecb0]:0x6e5d8004 */);
T(0x1013ec6a, 0x00004f12, AL, LDR(r7, PC, 0x0048); /* [0x1013ecb4]:0x10321df4 */);
T(0x1013ec6c, 0x0000e000, AL, B(0x1013ec6e); /* 0x1013ec6f + 0x000*/);

A(0x1016c940, 0xe92d4010, AL, PUSH({....4.........e.}));
A(0x1016c944, 0xfbff48de, NV, BLX(0x1013ecc4));
A(0x1016c948, 0xe3a01000, AL, MOV(r1, 0));
A(0x1016c94c, 0xe5801000, AL, STR(r1, r0, +0x0000); /* [0x00000000] */);
A(0x1016c950, 0xe8bd4010, AL, POP({....4.........e.}));
A(0x1016c954, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x1013ecc4, 0x481e4770, MI, LDMDA(LR, {....456.89a...e.}));
A(0x1013ecc8, 0x28006880, CS, STMDA(r0, {.......7...b.de.}));
A(0x1013eccc, 0x481cd101, MI, LDMDA(r12, {0.......8...c.ef}));
A(0x1013ecd0, 0x47703804, MI, LDRB(r3, r0 | rWBLSL(r4, 16)));
A(0x1013ecd4, 0x43c92100, MI, BIC(r2, r9, ROR(0, 2)); /* 0x00000000 */);
A(0x1013ecd8, 0x1c08b508, NE, STC(CP5, CRd(11), CRn(8), -0x020));
arm_step:0755: return(arm_step__fail_decode(cj))
A(0x1013ecd8, 0x1c08b508, NE, IR[27, 25] = 0x06/* XXX */);
0x1013ecd8:(0x04): Failed to disassemble given code!
arm_step__fail_decode:0629: return(0)

A(0x1016cad0, 0xe59f2030, AL, LDR(r2, PC, +0x0030); /* [0x1016cb08]:0xfe3fe0e0 */);
A(0x1016cad4, 0xe1c11002, AL, BIC(r1, r1, r2));
A(0x1016cad8, 0xe1c02002, AL, BIC(r2, r0, r2));
A(0x1016cadc, 0xe92d0003, AL, PUSH({01..............}));
A(0x1016cae0, 0xe92d500c, AL, PUSH({..23........c.e.}));
A(0x1016cae4, 0xfbff4876, NV, BLX(0x1013ecc4));
A(0x1016cae8, 0xe8bd500c, AL, POP({..23........c.e.}));
A(0x1016caec, 0xe1a03000, AL, MOV(r3, r0));
A(0x1016caf0, 0xe8bd0003, AL, POP({01..............}));
A(0x1016caf4, 0xe5930000, AL, LDR(r0, r3, +0x0000));
A(0x1016caf8, 0xe1c02002, AL, BIC(r2, r0, r2));
A(0x1016cafc, 0xe0222001, AL, EOR(r2, r2, r1));
A(0x1016cb00, 0xe5832000, AL, STR(r2, r3, +0x0000));
A(0x1016cb04, 0xe12fff1e, AL, BX(LR); /* 0x00000000 */);

A(0x102ca814, 0x0000000a, EQ, AND(r0, r0, r10));
A(0x102ca818, 0x102ca7ec, NE, EOR(r10, r12, ROR(r12, 0x0f)));
A(0x102ca81c, 0x102ca7ff, NE, STRD(r10, r12 | rWBXXX);

A(0x103212b0, 0x100fdf2b, NE, AND(SP, PC, LSR(r11, 0x1e)));
A(0x103212b4, 0x00000000, EQ, AND(r0, r0, r0));
A(0x103212b8, 0x10ce7ccc, NE, SBC(r7, LR, ASR(r12, 0x19)));
arm_step_group0:0689: return(arm_step__fail_decode(cj))
A(0x103212bc, 0x01fd0000, EQ, IR[27, 25] = 0x00, DPI_OP = 0x0f (MVN), IR[7] = 0, IR[4] = 0/* XXX */);
0x103212bc:(0x04): Failed to disassemble given code!
arm_step__fail_decode:0629: return(0)

arm_step:0755: return(arm_step__fail_decode(cj))
A(0x105f7248, 0xffffffff, NV, IR[27, 25] = 0x07, IR[27:24] = 0x0f, IR[4] = 1/* XXX */);
0x105f7248:(0x04): Failed to disassemble given code!
arm_step__fail_decode:0629: return(0)

arm_step:0755: return(arm_step__fail_decode(cj))
A(0x105fbc08, 0xffffffff, NV, IR[27, 25] = 0x07, IR[27:24] = 0x0f, IR[4] = 1/* XXX */);
0x105fbc08:(0x04): Failed to disassemble given code!
arm_step__fail_decode:0629: return(0)

arm_step:0755: return(arm_step__fail_decode(cj))
A(0x10af8f38, 0xffffffff, NV, IR[27, 25] = 0x07, IR[27:24] = 0x0f, IR[4] = 1/* XXX */);
0x10af8f38:(0x04): Failed to disassemble given code!
arm_step__fail_decode:0629: return(0)

arm_step:0755: return(arm_step__fail_decode(cj))
A(0x10ce7a1c, 0xffffffff, NV, IR[27, 25] = 0x07, IR[27:24] = 0x0f, IR[4] = 1/* XXX */);
0x10ce7a1c:(0x04): Failed to disassemble given code!
arm_step__fail_decode:0629: return(0)

arm_step:0755: return(arm_step__fail_decode(cj))
A(0xfffb4840, 0xffffffff, NV, IR[27, 25] = 0x07, IR[27:24] = 0x0f, IR[4] = 1/* XXX */);
0xfffb4840:(0x04): Failed to disassemble given code!
arm_step__fail_decode:0629: return(0)

A(0xfffb4840, 0xffffffff, NV, /* **** **** **** **** */);


/* **** **** **** **** */

symbol_log:136: 0x10020000: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10020010: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10020070: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10020078: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100200ec: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100200f4: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10020100: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10020164: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1002016c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100201f0: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10020200: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1002020c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1002021c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1002025c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10020270: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202b5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202b9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202bf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202c5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202cb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202d1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202d7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202dd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202e3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202e9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202ed: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100202f1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10020319: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1002031c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1160))
symbol_log:136: 0x10020320: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1038))
symbol_log:136: 0x10020324: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe100c))
symbol_log:136: 0x10020328: refs: 0x0000 size: 0x0010 (uint32_t (0x0000eaef))
symbol_log:136: 0x1002032c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1110))
symbol_log:136: 0x10020330: refs: 0x0000 size: 0x0010 (uint32_t (0x06040000))
symbol_log:136: 0x10020334: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1060))
symbol_log:136: 0x10020338: refs: 0x0000 size: 0x0010 (uint32_t (0xfffece18))
symbol_log:136: 0x1002033c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffece00))
symbol_log:136: 0x10020340: refs: 0x0000 size: 0x0010 (uint32_t (0x00000105))
symbol_log:136: 0x10020344: refs: 0x0000 size: 0x0010 (uint32_t (0x00002210))
symbol_log:136: 0x10020348: refs: 0x0000 size: 0x0010 (uint32_t (0x00002890))
symbol_log:136: 0x1002034c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecf00))
symbol_log:136: 0x10020350: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecc1c))
symbol_log:136: 0x10020354: refs: 0x0002 size: 0x0010 (uint32_t (0x03031011))
symbol_log:136: 0x10020358: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecc18))
symbol_log:136: 0x1002035c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecc14))
symbol_log:136: 0x10020360: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecc5c))
symbol_log:136: 0x10020364: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecc58))
symbol_log:136: 0x10020368: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecc54))
symbol_log:136: 0x1002036c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecc50))
symbol_log:136: 0x10020370: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1140))
symbol_log:136: 0x10020374: refs: 0x0000 size: 0x0010 (uint32_t (0xfffece04))
symbol_log:136: 0x10020378: refs: 0x0000 size: 0x0010 (uint32_t (0xfffece08))
symbol_log:136: 0x1002037c: refs: 0x0000 size: 0x0010 (uint32_t (0x0000098e))
symbol_log:136: 0x10020380: refs: 0x0000 size: 0x0010 (uint32_t (0xfffece14))
symbol_log:136: 0x10020384: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec808))
symbol_log:136: 0x10020388: refs: 0x0001 size: 0x0010 (uint32_t (0xfffeb048))
symbol_log:136: 0x1002038c: refs: 0x0000 size: 0x0010 (uint32_t (0x0000aaaa))
symbol_log:136: 0x10020390: refs: 0x0001 size: 0x0010 (uint32_t (0xfffeb034))
symbol_log:136: 0x10020394: refs: 0x0000 size: 0x0010 (uint32_t (0x00005555))
symbol_log:136: 0x10020398: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec700))
symbol_log:136: 0x1002039c: refs: 0x0001 size: 0x0010 (uint32_t (0xfffec708))
symbol_log:136: 0x100203a0: refs: 0x0000 size: 0x0010 (uint32_t (0x0000025b))
symbol_log:136: 0x100203a4: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb4018))
symbol_log:136: 0x100203a8: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0edf0))
symbol_log:136: 0x100203ac: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0eff0))
symbol_log:136: 0x100203b0: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0f030))
symbol_log:136: 0x100203b4: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0f130))
symbol_log:136: 0x100203b8: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0edb0))
symbol_log:136: 0x100203bc: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0edf0))
symbol_log:136: 0x100203c0: refs: 0x0000 size: 0x0010 (uint32_t (0x000001ff))
symbol_log:136: 0x100203c4: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0eff0))
symbol_log:136: 0x100203c8: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0f030))
symbol_log:136: 0x100203cc: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0f130))
symbol_log:136: 0x100203d0: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0f131))
symbol_log:136: 0x1005ea15: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1005ea1b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1006dab1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1006dabb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1006de70: refs: 0x0000 size: 0x0010 (uint32_t (0x102c70ec))
symbol_log:136: 0x10070917: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10070929: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007092b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007093d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007094d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10070950: refs: 0x0000 size: 0x0010 (uint32_t (0x105f7240))
symbol_log:136: 0x1007098d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007099d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100709b1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100709b3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100709b9: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100709bf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100709cd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100709d3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100709d9: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100709dd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10070a10: refs: 0x0001 size: 0x0010 (uint32_t (0x105f7248))
symbol_log:136: 0x10070a14: refs: 0x0000 size: 0x0010 (uint32_t (0x1007096d))
symbol_log:136: 0x10070a19: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10070a41: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10070a45: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10070a49: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10070a4c: refs: 0x0001 size: 0x0010 (uint32_t (0x105f7278))
symbol_log:136: 0x10070a50: refs: 0x0000 size: 0x0010 (uint32_t (0x105f7430))
symbol_log:136: 0x10071465: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007146f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071483: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071489: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007148f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100716dc: refs: 0x0000 size: 0x0010 (uint32_t (0x105f7538))
symbol_log:136: 0x1007175b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007176d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007176f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007177f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007178f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10071793: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071799: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007179f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100717a4: refs: 0x0000 size: 0x0010 (uint32_t (0x105f7538))
symbol_log:136: 0x1007181d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007182d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10071833: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071839: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007183b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007183f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071845: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007184b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007184f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071857: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007185b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071863: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10071867: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007186f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10071877: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071879: refs: 0x0004 TEXT ENTRY
symbol_log:136: 0x10071ab8: refs: 0x0000 size: 0x0010 (uint32_t (0x105f7540))
symbol_log:136: 0x10071bf9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c09: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c10: refs: 0x0000 size: 0x0010 (uint32_t (0x105f7540))
symbol_log:136: 0x10071c2d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c35: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c39: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c43: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10071c4f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c53: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c57: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c61: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c65: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071c7b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071ddf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071df1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071df3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071e03: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10071e13: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10071e48: refs: 0x0002 size: 0x0010 (uint32_t (0x105f7558))
symbol_log:136: 0x10071e4c: refs: 0x0000 size: 0x0010 (uint32_t (0x105f7248))
symbol_log:136: 0x1007b4cb: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1007b4e9: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1007b4ed: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b51f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b66d: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1007b681: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b68b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b81f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b821: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b878: refs: 0x0000 size: 0x0010 (uint32_t (0x105fbc08))
symbol_log:136: 0x1007b89c: refs: 0x0000 size: 0x0010 (uint32_t (0x00000ce4))
symbol_log:136: 0x1007b9b5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b9e5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b9ed: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b9f5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007b9fd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ba03: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ba0b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ba13: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ba19: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ba2d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bacf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bae1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bae9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007baed: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bb38: refs: 0x0002 size: 0x0010 (uint32_t (0x105fbc08))
symbol_log:136: 0x1007bb3c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbe4c0))
symbol_log:136: 0x1007bb40: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbe480))
symbol_log:136: 0x1007bb44: refs: 0x0000 size: 0x0010 (uint32_t (0x102c747c))
symbol_log:136: 0x1007bb48: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d074))
symbol_log:136: 0x1007bb4c: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d075))
symbol_log:136: 0x1007bd4d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bd57: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bd67: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007bd6d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007bd71: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bd7d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bd81: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bd8f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bd99: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bda9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bdad: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bdc1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bdc3: refs: 0x0004 TEXT ENTRY
symbol_log:136: 0x1007bdcf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007bde7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007bded: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007bdf5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007be08: refs: 0x0001 size: 0x0010 (uint32_t (0xfffe6020))
symbol_log:136: 0x1007be10: refs: 0x0001 size: 0x0010 (uint32_t (0x105fbc44))
symbol_log:136: 0x1007be28: refs: 0x0001 size: 0x0010 (uint32_t (0xfffe6000))
symbol_log:136: 0x1007be2c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe10c0))
symbol_log:136: 0x1007be30: refs: 0x0000 size: 0x0010 (uint32_t (0xfff7ffff))
symbol_log:136: 0x1007be34: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecb00))
symbol_log:136: 0x1007ca85: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007caa1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007caa9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007cab5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cabb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cac5: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007cacd: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007cb15: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cb21: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cb29: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cb3d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cb48: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb0840))
symbol_log:136: 0x1007cb4c: refs: 0x0001 size: 0x0010 (uint32_t (0x105fd684))
symbol_log:136: 0x1007cb50: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb0800))
symbol_log:136: 0x1007cb5c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1080))
symbol_log:136: 0x1007cb60: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec700))
symbol_log:136: 0x1007cb64: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb0850))
symbol_log:136: 0x1007cb68: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb0810))
symbol_log:136: 0x1007cb6c: refs: 0x0000 size: 0x0010 (uint32_t (0x10164f48))
symbol_log:136: 0x1007cb70: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe0040))
symbol_log:136: 0x1007cb74: refs: 0x0000 size: 0x0010 (uint32_t (0xffff7fff))
symbol_log:136: 0x1007cb79: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cb99: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cba5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cbb1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cbbd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cbc9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007cbcb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cbd7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cbdf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cbe5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cbef: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cbf3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cbfb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cc01: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cc03: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007cc11: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1007cc17: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cc19: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1007cc1d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007cc23: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cc25: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cc37: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cc3f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007cc43: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ce08: refs: 0x0007 size: 0x0010 (uint32_t (0x105fd694))
symbol_log:136: 0x1007ce0c: refs: 0x0000 size: 0x0010 (uint32_t (0x0000023f))
symbol_log:136: 0x1007ce10: refs: 0x0001 size: 0x0010 (uint32_t (0xfffbec00))
symbol_log:136: 0x1007ce14: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbec80))
symbol_log:136: 0x1007ce18: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce794c))
symbol_log:136: 0x1007ce1c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec700))
symbol_log:136: 0x1007ce20: refs: 0x0000 size: 0x0010 (uint32_t (0x0009b058))
symbol_log:136: 0x1007d181: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d1bd: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1007d1cd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d1e5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d2c9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007d2e9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d33f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d347: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d34d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d365: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d367: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d36f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d381: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d387: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d38f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d395: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007d4b0: refs: 0x0003 size: 0x0010 (uint32_t (0x10653914))
symbol_log:136: 0x1007d4b4: refs: 0x0002 size: 0x0010 (uint32_t (0x10653dd4))
symbol_log:136: 0x1007d4b8: refs: 0x0000 size: 0x0010 (uint32_t (0xfffed820))
symbol_log:136: 0x1007d51d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d523: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d531: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d53b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d541: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d54b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d564: refs: 0x0000 size: 0x0010 (uint32_t (0x10653dd4))
symbol_log:136: 0x1007d57c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffedc00))
symbol_log:136: 0x1007d5c1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d5d3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d5d7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d5db: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d5df: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007d5e0: refs: 0x0000 size: 0x0010 (uint32_t (0x10653f14))
symbol_log:136: 0x1007d5e4: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce95b0))
symbol_log:136: 0x1007da08: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1007da1c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007da2c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007da6c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007da74: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007dbb8: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007dbcc: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007dbd8: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007dbdc: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ddf4: refs: 0x0000 size: 0x0010 (uint32_t (0x10653f24))
symbol_log:136: 0x1007ddf8: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec000))
symbol_log:136: 0x1007de00: refs: 0x0000 size: 0x0010 (uint32_t (0x10fda7e0))
symbol_log:136: 0x1007de04: refs: 0x0000 size: 0x0010 (uint32_t (0x051438ef))
symbol_log:136: 0x1007de08: refs: 0x0000 size: 0x0010 (uint32_t (0x0605093f))
symbol_log:136: 0x1007de0c: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d080))
symbol_log:136: 0x1007de10: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d084))
symbol_log:136: 0x1007de14: refs: 0x0000 size: 0x0010 (uint32_t (0x00000206))
symbol_log:136: 0x1007de18: refs: 0x0001 size: 0x0010 (uint32_t (0xfffba000))
symbol_log:136: 0x1007de1c: refs: 0x0001 size: 0x0010 (uint32_t (0x00000151))
symbol_log:136: 0x1007de20: refs: 0x0001 size: 0x0010 (uint32_t (0x0000618b))
symbol_log:136: 0x1007de24: refs: 0x0001 size: 0x0010 (uint32_t (0x00004881))
symbol_log:136: 0x1007de28: refs: 0x0000 size: 0x0010 (uint32_t (0x10653f1c))
symbol_log:136: 0x1007e479: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e484: refs: 0x0000 size: 0x0010 (uint32_t (0x10653f2c))
symbol_log:136: 0x1007e489: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e48f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e49d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e4a1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e4af: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e4db: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e4e3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e4eb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e4ed: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e4f7: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007e4ff: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007e507: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e50b: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x1007e511: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e535: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e53d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e543: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e545: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e54f: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007e557: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007e55f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e563: refs: 0x0004 TEXT ENTRY
symbol_log:136: 0x1007e565: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e56b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e583: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e58b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e5b5: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e5bd: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e5c3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e5c7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e5d1: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007e5d9: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007e5e1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e5e5: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x1007e5eb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e601: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e607: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e60b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007e614: refs: 0x0003 size: 0x0010 (uint32_t (0xfffe0300))
symbol_log:136: 0x1007e618: refs: 0x0000 size: 0x0010 (uint32_t (0x00000404))
symbol_log:136: 0x1007e61c: refs: 0x0001 size: 0x0010 (uint32_t (0xfffe6820))
symbol_log:136: 0x1007e620: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe6800))
symbol_log:136: 0x1007e624: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe6840))
symbol_log:136: 0x1007e628: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe0340))
symbol_log:136: 0x1007e62c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec700))
symbol_log:136: 0x1007e630: refs: 0x0002 size: 0x0010 (uint32_t (0xfffffeff))
symbol_log:136: 0x1007e634: refs: 0x0001 size: 0x0010 (uint32_t (0xfffe0000))
symbol_log:136: 0x1007e638: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecb00))
symbol_log:136: 0x1007e63c: refs: 0x0000 size: 0x0010 (uint32_t (0x102c7644))
symbol_log:136: 0x1007e640: refs: 0x0000 size: 0x0010 (uint32_t (0x00000c63))
symbol_log:136: 0x1007e644: refs: 0x0000 size: 0x0010 (uint32_t (0x106542e4))
symbol_log:136: 0x1007e771: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e777: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e785: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e787: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e789: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e78d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007e900: refs: 0x0000 size: 0x0010 (uint32_t (0x7fffffff))
symbol_log:136: 0x1007eb4d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007eb53: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007eb5d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007eb63: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007eb73: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007eb8b: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007eb95: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007eb9d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007eba7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007ebab: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007ebac: refs: 0x0000 size: 0x0010 (uint32_t (0x10859404))
symbol_log:136: 0x1007ebb4: refs: 0x0000 size: 0x0010 (uint32_t (0x102c778c))
symbol_log:136: 0x1007ebbc: refs: 0x0001 size: 0x0010 (uint32_t (0x102c7758))
symbol_log:136: 0x1007ebc0: refs: 0x0001 size: 0x0010 (uint32_t (0x106542e8))
symbol_log:136: 0x1007f00f: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007f013: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f019: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f294: refs: 0x0000 size: 0x0010 (uint32_t (0x10655310))
symbol_log:136: 0x1007f2a1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f2c7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f2e9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f2fd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f303: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f30d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f313: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f31b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007f320: refs: 0x0001 size: 0x0010 (uint32_t (0x10655318))
symbol_log:136: 0x1007f324: refs: 0x0000 size: 0x0010 (uint32_t (0x00007fff))
symbol_log:136: 0x1007f328: refs: 0x0000 size: 0x0010 (uint32_t (0x10855318))
symbol_log:136: 0x1007f32c: refs: 0x0000 size: 0x0010 (uint32_t (0x10859318))
symbol_log:136: 0x1007fa79: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007fa7f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007fa91: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007fa9b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007fa9d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007faa9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007fad7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007fadf: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007fb0d: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007fb24: refs: 0x0000 size: 0x0010 (uint32_t (0x102c778c))
symbol_log:136: 0x1007fb28: refs: 0x0008 size: 0x0010 (uint32_t (0x1085932c))
symbol_log:136: 0x1007fb2c: refs: 0x0003 size: 0x0010 (uint32_t (0x1007eda3))
symbol_log:136: 0x1007fb30: refs: 0x0001 size: 0x0010 (uint32_t (0x1007f01b))
symbol_log:136: 0x1007fb34: refs: 0x0001 size: 0x0010 (uint32_t (0x1007ecb9))
symbol_log:136: 0x1007fb38: refs: 0x0001 size: 0x0010 (uint32_t (0x10086347))
symbol_log:136: 0x1007fb3c: refs: 0x0001 size: 0x0010 (uint32_t (0x100864c1))
symbol_log:136: 0x1007fb40: refs: 0x0001 size: 0x0010 (uint32_t (0x1085d090))
symbol_log:136: 0x1007fb44: refs: 0x0001 size: 0x0010 (uint32_t (0x100d80ef))
symbol_log:136: 0x1007fb48: refs: 0x0001 size: 0x0010 (uint32_t (0x100d8165))
symbol_log:136: 0x1007fb4c: refs: 0x0001 size: 0x0010 (uint32_t (0x100d7db7))
symbol_log:136: 0x1007fb57: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007fb61: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007fb91: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007fb99: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007fba3: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007fbab: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1007fbb1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007fbb7: refs: 0x0004 TEXT ENTRY
symbol_log:136: 0x1007fdcc: refs: 0x0002 size: 0x0010 (uint32_t (0x10859444))
symbol_log:136: 0x1007fde4: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb3820))
symbol_log:136: 0x1007fde8: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb3800))
symbol_log:136: 0x1007fdec: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec700))
symbol_log:136: 0x1007fe41: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007fedf: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007fee7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007ff01: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007ff09: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1007ff17: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ff2b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ff2f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ff43: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ff45: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ff4b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ff5b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1007ff7f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080084: refs: 0x0000 size: 0x0010 (uint32_t (0x10859464))
symbol_log:136: 0x10080088: refs: 0x0003 size: 0x0010 (uint32_t (0xfffb1000))
symbol_log:136: 0x1008008c: refs: 0x0002 size: 0x0010 (uint32_t (0x102c77e8))
symbol_log:136: 0x10080090: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb1020))
symbol_log:136: 0x10080094: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec700))
symbol_log:136: 0x10080098: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe10c0))
symbol_log:136: 0x1008009c: refs: 0x0000 size: 0x0010 (uint32_t (0xffefffff))
symbol_log:136: 0x100800a0: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecb00))
symbol_log:136: 0x100800a4: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1080))
symbol_log:136: 0x100800cb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100800cd: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100800db: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100800e1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100800e9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100800eb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100800ed: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100800ff: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080105: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008010b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008010f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10080115: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080119: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008011b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008011d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008012b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10080133: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10080139: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008013c: refs: 0x0001 size: 0x0010 (uint32_t (0x10859468))
symbol_log:136: 0x10080140: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec700))
symbol_log:136: 0x10080144: refs: 0x0000 size: 0x0010 (uint32_t (0x00000bbb))
symbol_log:136: 0x10080149: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080151: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080159: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008015c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbe400))
symbol_log:136: 0x10080363: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008036d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080379: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080380: refs: 0x0000 size: 0x0010 (uint32_t (0x10859474))
symbol_log:136: 0x1008038c: refs: 0x0000 size: 0x0010 (uint32_t (0x102c77fc))
symbol_log:136: 0x100808ad: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808b3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808b9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808bd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808c1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808c7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808c9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808cf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808d5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808d9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808dd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808e3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100808e5: refs: 0x000a TEXT ENTRY
symbol_log:136: 0x100808f1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080951: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080957: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080973: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10080977: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080999: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809a5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809af: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809b3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809b5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809bb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809c1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809c7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809cb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809d1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809d5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809d9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100809dc: refs: 0x0002 size: 0x0010 (uint32_t (0x10f00000))
symbol_log:136: 0x100809e0: refs: 0x0000 size: 0x0010 (uint32_t (0x55555555))
symbol_log:136: 0x100809e4: refs: 0x0000 size: 0x0010 (uint32_t (0x0005027b))
symbol_log:136: 0x10080a23: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080a2b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080a2f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080a59: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080a7d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080a8b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080a99: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080aa7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080acd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080af3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080b19: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080b3d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080b5f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080b81: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080b8b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080b8c: refs: 0x0000 size: 0x0010 (uint32_t (0x1085aca8))
symbol_log:136: 0x10080b94: refs: 0x0000 size: 0x0010 (uint32_t (0x10f00000))
symbol_log:136: 0x10080b98: refs: 0x0000 size: 0x0010 (uint32_t (0xfff00000))
symbol_log:136: 0x10080bf9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080c03: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080c08: refs: 0x0000 size: 0x0010 (uint32_t (0x1085acac))
symbol_log:136: 0x10080c89: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080c9d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080ca1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080ca7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10080cb1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10080e90: refs: 0x0001 size: 0x0010 (uint32_t (0x1085acc0))
symbol_log:136: 0x100825db: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100825e3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100825f7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008264f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008265b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008265f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082661: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008266b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082675: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008267f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082680: refs: 0x0002 size: 0x0010 (uint32_t (0x1085acc0))
symbol_log:136: 0x10082684: refs: 0x0002 size: 0x0010 (uint32_t (0x1085cff0))
symbol_log:136: 0x100826fc: refs: 0x0000 size: 0x0010 (uint32_t (0x1085b010))
symbol_log:136: 0x10082700: refs: 0x0000 size: 0x0010 (uint32_t (0x1085cc10))
symbol_log:136: 0x10082714: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d0ec))
symbol_log:136: 0x10082967: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082973: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082980: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d004))
symbol_log:136: 0x100829dd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100829ed: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100829f1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100829f4: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d020))
symbol_log:136: 0x10082a15: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082a2d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082a35: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082a3b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082a43: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082a59: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082a61: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082a67: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082a6f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082a73: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082a77: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082a7d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082a83: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082a84: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d030))
symbol_log:136: 0x10082a88: refs: 0x0001 size: 0x0010 (uint32_t (0xfffbe480))
symbol_log:136: 0x10082a8c: refs: 0x0001 size: 0x0010 (uint32_t (0xfffec700))
symbol_log:136: 0x10082a90: refs: 0x0000 size: 0x0010 (uint32_t (0x000002f1))
symbol_log:136: 0x10082a94: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbe4c0))
symbol_log:136: 0x10082d4f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082d65: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082d69: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082d6d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082d71: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082d79: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082d7f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082d8d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082d91: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082d95: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082d9d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082da1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082da9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082dad: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082e03: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082e10: refs: 0x0005 size: 0x0010 (uint32_t (0x1085d038))
symbol_log:136: 0x10082e14: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d050))
symbol_log:136: 0x10082e18: refs: 0x0000 size: 0x0010 (uint32_t (0x00001d4c))
symbol_log:136: 0x10082e1c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbbc00))
symbol_log:136: 0x10082e20: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d048))
symbol_log:136: 0x10082ee9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082f00: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d048))
symbol_log:136: 0x10082f53: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082f59: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082f5f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10082f63: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082f67: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10082f80: refs: 0x0000 size: 0x0010 (uint32_t (0x00001d4c))
symbol_log:136: 0x10082f84: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbbc00))
symbol_log:136: 0x100830f7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083128: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d060))
symbol_log:136: 0x10083138: refs: 0x0000 size: 0x0010 (uint32_t (0x00000dac))
symbol_log:136: 0x1008313c: refs: 0x0000 size: 0x0010 (uint32_t (0x00001964))
symbol_log:136: 0x10083140: refs: 0x0000 size: 0x0010 (uint32_t (0x000003ca))
symbol_log:136: 0x10083501: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008351d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083527: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008352b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008352d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083537: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008353b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10083545: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008354d: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10083560: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d074))
symbol_log:136: 0x10083564: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d088))
symbol_log:136: 0x10083573: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083575: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083597: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100835a5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100835a9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100835b7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100835bb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100835c9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100835cd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100835db: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100835df: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100835ed: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083649: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083659: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008365d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008366f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083673: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083675: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083683: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083695: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083699: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100836a3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100836bb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083779: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083787: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083795: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083799: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008379d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100837a1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100837a5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100837a9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100837ad: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100837b1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100837b5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100837b9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100837bc: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecb00))
symbol_log:136: 0x100837c0: refs: 0x0002 size: 0x0010 (uint32_t (0xfffe0100))
symbol_log:136: 0x100837c4: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe0200))
symbol_log:136: 0x100837c8: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe0300))
symbol_log:136: 0x100837cc: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecb1c))
symbol_log:136: 0x100837d0: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe001c))
symbol_log:136: 0x100837d4: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe011c))
symbol_log:136: 0x100837d8: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe021c))
symbol_log:136: 0x100837dc: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe031c))
symbol_log:136: 0x100837e0: refs: 0x0001 size: 0x0010 (uint32_t (0xfffecb40))
symbol_log:136: 0x100837e4: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe0140))
symbol_log:136: 0x100837e8: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe0180))
symbol_log:136: 0x100837ec: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecb80))
symbol_log:136: 0x100837f0: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe0000))
symbol_log:136: 0x100837f4: refs: 0x0000 size: 0x0010 (uint32_t (0xe59ff000))
symbol_log:136: 0x100837f8: refs: 0x0000 size: 0x0010 (uint32_t (0x101653fc))
symbol_log:136: 0x100837fc: refs: 0x0000 size: 0x0010 (uint32_t (0x10165420))
symbol_log:136: 0x10083800: refs: 0x0000 size: 0x0010 (uint32_t (0x20000040))
symbol_log:136: 0x10083804: refs: 0x0000 size: 0x0010 (uint32_t (0x101653d8))
symbol_log:136: 0x10083808: refs: 0x0000 size: 0x0010 (uint32_t (0x101653b4))
symbol_log:136: 0x1008380c: refs: 0x0000 size: 0x0010 (uint32_t (0x101654e4))
symbol_log:136: 0x10083810: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1000))
symbol_log:136: 0x10083814: refs: 0x0000 size: 0x0010 (uint32_t (0x00012480))
symbol_log:136: 0x10083818: refs: 0x0000 size: 0x0010 (uint32_t (0x00010003))
symbol_log:136: 0x1008381c: refs: 0x0000 size: 0x0010 (uint32_t (0x1224201b))
symbol_log:136: 0x10083820: refs: 0x0000 size: 0x0010 (uint32_t (0x00092690))
symbol_log:136: 0x10083824: refs: 0x0000 size: 0x0010 (uint32_t (0x00080003))
symbol_log:136: 0x10083828: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1080))
symbol_log:136: 0x1008382c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1040))
symbol_log:136: 0x10083830: refs: 0x0000 size: 0x0010 (uint32_t (0xd4442a5d))
symbol_log:136: 0x10083834: refs: 0x0000 size: 0x0010 (uint32_t (0xfffffefd))
symbol_log:136: 0x10083838: refs: 0x0000 size: 0x0010 (uint32_t (0x87fffff7))
symbol_log:136: 0x1008383c: refs: 0x0000 size: 0x0010 (uint32_t (0x06030400))
symbol_log:136: 0x10083840: refs: 0x0000 size: 0x0010 (uint32_t (0x003dd400))
symbol_log:136: 0x10083844: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe10c0))
symbol_log:136: 0x10083848: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbe400))
symbol_log:136: 0x1008384c: refs: 0x0000 size: 0x0010 (uint32_t (0xffff7efb))
symbol_log:136: 0x10083850: refs: 0x0000 size: 0x0010 (uint32_t (0x00004050))
symbol_log:136: 0x10083854: refs: 0x0000 size: 0x0010 (uint32_t (0xffff2e2b))
symbol_log:136: 0x10083858: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbec00))
symbol_log:136: 0x1008385c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffff7fa))
symbol_log:136: 0x10083860: refs: 0x0000 size: 0x0010 (uint32_t (0xffff77f8))
symbol_log:136: 0x10083864: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbb400))
symbol_log:136: 0x10083868: refs: 0x0000 size: 0x0010 (uint32_t (0xfffff030))
symbol_log:136: 0x1008386c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbbc00))
symbol_log:136: 0x10083870: refs: 0x0000 size: 0x0010 (uint32_t (0xfffffefb))
symbol_log:136: 0x10083874: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d080))
symbol_log:136: 0x100838cd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100838e7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100838ed: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100838f3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100838f9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100838fb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083901: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10083903: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083929: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008392f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10083933: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008393f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083943: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083951: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083965: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008396b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10083981: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10083989: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008398d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10083991: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10083993: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008399d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100839a1: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100839a9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839b3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839b7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839bb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839bf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839c5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839c9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839cd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839d3: refs: 0x0004 TEXT ENTRY
symbol_log:136: 0x100839d5: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100839df: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100839e3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100839e9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839ed: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100839f7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100839fd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a01: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a09: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a0f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a13: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a17: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a1b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a1f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a23: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a27: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a2b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a2f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a33: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a37: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a3b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a47: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a4b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a4f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a53: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a57: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a5d: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10083a61: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a65: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a69: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a6d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a71: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a75: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a79: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a7d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a81: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a83: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083a95: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10083a9b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10083ab3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083ac1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083ae3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083af1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083b28: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecf00))
symbol_log:136: 0x10083b2c: refs: 0x0001 size: 0x0010 (uint32_t (0x1085d084))
symbol_log:136: 0x10083b30: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe6000))
symbol_log:136: 0x10083b34: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbe4c0))
symbol_log:136: 0x10083b38: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbb4c0))
symbol_log:136: 0x10083b3c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbb480))
symbol_log:136: 0x10083b40: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbe480))
symbol_log:136: 0x10083b44: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe6020))
symbol_log:136: 0x10083b48: refs: 0x0000 size: 0x0010 (uint32_t (0x00000ce4))
symbol_log:136: 0x10083b4c: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d090))
symbol_log:136: 0x10083b50: refs: 0x0000 size: 0x0010 (uint32_t (0x102c7838))
symbol_log:136: 0x10083b54: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbbc00))
symbol_log:136: 0x10083b58: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe1140))
symbol_log:136: 0x10083b5c: refs: 0x0001 size: 0x0010 (uint32_t (0xfffecc00))
symbol_log:136: 0x10083b60: refs: 0x0001 size: 0x0010 (uint32_t (0x000032b6))
symbol_log:136: 0x10083b64: refs: 0x0000 size: 0x0010 (uint32_t (0x000032f6))
symbol_log:136: 0x10083b68: refs: 0x0000 size: 0x0010 (uint32_t (0xfffecc40))
symbol_log:136: 0x10083b6c: refs: 0x0000 size: 0x0010 (uint32_t (0x000072a1))
symbol_log:136: 0x10083b70: refs: 0x0000 size: 0x0010 (uint32_t (0x03031011))
symbol_log:136: 0x10083b74: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d080))
symbol_log:136: 0x10083b78: refs: 0x0000 size: 0x0010 (uint32_t (0x0000bb80))
symbol_log:136: 0x10083b7c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb9000))
symbol_log:136: 0x10083b80: refs: 0x0001 size: 0x0010 (uint32_t (0xfffec500))
symbol_log:136: 0x10083b84: refs: 0x0000 size: 0x0010 (uint32_t (0xfffec600))
symbol_log:136: 0x10083b88: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb1c00))
symbol_log:136: 0x10083b8c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffe890))
symbol_log:136: 0x10083b90: refs: 0x0001 size: 0x0010 (uint32_t (0x00001863))
symbol_log:136: 0x10083b94: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb1c40))
symbol_log:136: 0x10083b98: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb2400))
symbol_log:136: 0x10083b9c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffffc18))
symbol_log:136: 0x10083ba0: refs: 0x0000 size: 0x0010 (uint32_t (0xfffffe0b))
symbol_log:136: 0x10083ba4: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb2440))
symbol_log:136: 0x10083ba8: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb3400))
symbol_log:136: 0x10083bac: refs: 0x0000 size: 0x0010 (uint32_t (0x00001442))
symbol_log:136: 0x10083bb0: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb3440))
symbol_log:136: 0x10083bb5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083bbb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083bcf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10083bd0: refs: 0x0000 size: 0x0010 (uint32_t (0xfffffdff))
symbol_log:136: 0x10083bd4: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe0300))
symbol_log:136: 0x1008425f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084267: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008426b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008426f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084273: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084277: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084281: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084289: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100842a1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100842a4: refs: 0x0000 size: 0x0010 (uint32_t (0x102c7878))
symbol_log:136: 0x100842cc: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d094))
symbol_log:136: 0x1008435f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084369: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084385: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084389: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008438d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100843a5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100843ad: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100843b1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100843b5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100843cd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100843dd: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100843df: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100843e1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100843ef: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084411: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008442f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084433: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084435: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084450: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d0a0))
symbol_log:136: 0x1008446c: refs: 0x0002 size: 0x0010 (uint32_t (0x102c7878))
symbol_log:136: 0x10084470: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d090))
symbol_log:136: 0x10084474: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d092))
symbol_log:136: 0x10084478: refs: 0x0003 size: 0x0010 (uint32_t (0x10d0f178))
symbol_log:136: 0x1008447c: refs: 0x0000 size: 0x0010 (uint32_t (0x0fae0000))
symbol_log:136: 0x10084480: refs: 0x0000 size: 0x0010 (uint32_t (0x4c6e0000))
symbol_log:136: 0x10084484: refs: 0x0000 size: 0x0010 (uint32_t (0x3ebe0000))
symbol_log:136: 0x10084488: refs: 0x0000 size: 0x0010 (uint32_t (0x71ce0000))
symbol_log:136: 0x1008448c: refs: 0x0000 size: 0x0010 (uint32_t (0x71d00000))
symbol_log:136: 0x1008482d: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084839: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1008484f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008485d: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084867: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084871: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1008487f: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084887: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084891: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084895: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100848a9: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x100848b1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848b5: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100848bb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848bf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848c7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848cb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848cf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848d9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848dd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848e3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848e7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848ed: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100848f1: refs: 0x0008 TEXT ENTRY
symbol_log:136: 0x100848f5: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100848f7: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x100848ff: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084903: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008490b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008490f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084919: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008491d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084923: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084925: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008492d: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1008492f: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084935: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1008493b: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1008493d: refs: 0x0007 TEXT ENTRY
symbol_log:136: 0x10084a5c: refs: 0x0001 size: 0x0010 (uint32_t (0x1085d1cc))
symbol_log:136: 0x10084a60: refs: 0x0001 size: 0x0010 (uint32_t (0x102c7878))
symbol_log:136: 0x10084cfd: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084d19: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d23: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d27: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084d2d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d31: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d39: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d3d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d41: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d45: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d49: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d4d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d61: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084d7b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084d87: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084d8b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d93: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084d95: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084d9d: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084da7: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084da9: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084dad: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084db1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084db5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084dbb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084dbf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084dc5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084dc9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084dd1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084dd3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084dd7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084ddb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084ddd: refs: 0x0007 TEXT ENTRY
symbol_log:136: 0x10084de5: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084de7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084df3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084df9: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x10084dfd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e03: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e09: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e15: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e1b: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084e3b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e43: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084e5b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e5f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e63: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084e7b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e7f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e85: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e89: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e8d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e93: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e99: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084e9b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084eb1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084eb5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084ecd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084ed1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084ee9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084eeb: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x10084ef7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084f07: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084f0b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084f0f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084f13: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084f1f: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x10084f27: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084f2b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084f35: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084f3d: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084f4b: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084f53: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084f5b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084f5f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084f65: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084f67: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084f73: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084f79: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10084f7d: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084f87: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084fa7: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084fab: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10084faf: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x10084fb5: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084fb7: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10084fc1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084fdb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084fe9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084ff9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10084fff: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085015: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1008501b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085020: refs: 0x0005 size: 0x0010 (uint32_t (0x102c7878))
symbol_log:136: 0x1008502c: refs: 0x0000 size: 0x0010 (uint32_t (0x102c7ae4))
symbol_log:136: 0x10085030: refs: 0x0004 size: 0x0010 (uint32_t (0x102c79a4))
symbol_log:136: 0x10085034: refs: 0x0008 size: 0x0010 (uint32_t (0x1085d0ec))
symbol_log:136: 0x10085038: refs: 0x0002 size: 0x0010 (uint32_t (0x10d0f134))
symbol_log:136: 0x1008503c: refs: 0x0008 size: 0x0010 (uint32_t (0x10084cb9))
symbol_log:136: 0x10085040: refs: 0x0008 size: 0x0010 (uint32_t (0x10084cbd))
symbol_log:136: 0x10085044: refs: 0x0007 size: 0x0010 (uint32_t (0x10084cc1))
symbol_log:136: 0x10085048: refs: 0x0008 size: 0x0010 (uint32_t (0x10084491))
symbol_log:136: 0x1008504c: refs: 0x0008 size: 0x0010 (uint32_t (0x10084493))
symbol_log:136: 0x10085050: refs: 0x0000 size: 0x0010 (uint32_t (0x100e0959))
symbol_log:136: 0x10085054: refs: 0x0000 size: 0x0010 (uint32_t (0x100e079b))
symbol_log:136: 0x10085058: refs: 0x0002 size: 0x0010 (uint32_t (0x102c7ae8))
symbol_log:136: 0x1008505c: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d214))
symbol_log:136: 0x10085070: refs: 0x0000 size: 0x0010 (uint32_t (0x102c78ce))
symbol_log:136: 0x100855b7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100855c1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100855c9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100855d4: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d228))
symbol_log:136: 0x100855f7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085824: refs: 0x0000 size: 0x0010 (uint32_t (0xfffb4840))
symbol_log:136: 0x10085853: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085a94: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d23c))
symbol_log:136: 0x10085acb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085ad7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085adb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085b2c: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d246))
symbol_log:136: 0x10085bf5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085bfb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085c03: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10085e24: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d248))
symbol_log:136: 0x1008631d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086325: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086337: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086341: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086345: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086644: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d24c))
symbol_log:136: 0x10086691: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100866a3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100866a9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100866dd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100867d1: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100867e1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100867f9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100867fd: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10086805: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10086829: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x1008682f: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x10086833: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10086839: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1008683c: refs: 0x0001 size: 0x0010 (uint32_t (0xfffb0c00))
symbol_log:136: 0x10086840: refs: 0x0003 size: 0x0010 (uint32_t (0x1085d288))
symbol_log:136: 0x10086850: refs: 0x0000 size: 0x0010 (uint32_t (0x102c7b0b))
symbol_log:136: 0x10086989: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10086a49: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086a55: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086a63: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086a67: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086a6b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086a6c: refs: 0x0002 size: 0x0010 (uint32_t (0x1085d29c))
symbol_log:136: 0x10086a81: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10086dd1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10087cb9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10087ccd: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10087cd9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10087d60: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d0ec))
symbol_log:136: 0x100955fd: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10095607: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b37c7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b37d0: refs: 0x0000 size: 0x0010 (uint32_t (0x108ec130))
symbol_log:136: 0x100b46f5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b4725: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b4729: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b472d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b4731: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b4739: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b4740: refs: 0x0000 size: 0x0010 (uint32_t (0x108ec144))
symbol_log:136: 0x100b4744: refs: 0x0000 size: 0x0010 (uint32_t (0x108ec15c))
symbol_log:136: 0x100b4748: refs: 0x0000 size: 0x0010 (uint32_t (0x108ec135))
symbol_log:136: 0x100b4eff: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b4f09: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b4f13: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b4f1c: refs: 0x0000 size: 0x0010 (uint32_t (0x108ec158))
symbol_log:136: 0x100b4f20: refs: 0x0000 size: 0x0010 (uint32_t (0x102ca700))
symbol_log:136: 0x100b5539: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b5553: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b555d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b556b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b5575: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b5581: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b5584: refs: 0x0001 size: 0x0010 (uint32_t (0x108ee170))
symbol_log:136: 0x100b5588: refs: 0x0000 size: 0x0010 (uint32_t (0x102ca754))
symbol_log:136: 0x100b6145: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b614b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b6153: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b615d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b615f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b62e8: refs: 0x0002 size: 0x0010 (uint32_t (0x108ee198))
symbol_log:136: 0x100b62ec: refs: 0x0000 size: 0x0010 (uint32_t (0x102ca814))
symbol_log:136: 0x100b62f0: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d090))
symbol_log:136: 0x100b7d69: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7d71: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7d7b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b7d97: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7d9d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7da3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7da7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7dad: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7db1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7db7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7dbb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7dc5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7dcf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7dd9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7dec: refs: 0x0000 size: 0x0010 (uint32_t (0x108eef1c))
symbol_log:136: 0x100b7df0: refs: 0x0000 size: 0x0010 (uint32_t (0x102cabbc))
symbol_log:136: 0x100b7df5: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b7dfb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7e05: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7e11: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100b7e21: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7e25: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b7e2f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b7e37: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7e3d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100b7e41: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b7e49: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100b7e4c: refs: 0x0003 size: 0x0010 (uint32_t (0x10aeef24))
symbol_log:136: 0x100d7e11: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d7e17: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d7e23: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d7e2f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d7e39: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d7e3d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d7ea0: refs: 0x0000 size: 0x0010 (uint32_t (0x10af290c))
symbol_log:136: 0x100d8621: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d863f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d8657: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d8669: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100d8804: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbecc0))
symbol_log:136: 0x100d880c: refs: 0x0000 size: 0x0010 (uint32_t (0xfffbec00))
symbol_log:136: 0x100d8810: refs: 0x0000 size: 0x0010 (uint32_t (0xfffe0100))
symbol_log:136: 0x100d8814: refs: 0x0000 size: 0x0010 (uint32_t (0xfffffeff))
symbol_log:136: 0x100de7ab: refs: 0x000c TEXT ENTRY
symbol_log:136: 0x100de7b5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de7bd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de7c3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de7cb: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100de7cd: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100de7d1: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100de7f3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de7f9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de823: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100de827: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de82d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de843: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de84d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de87d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100de8a3: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100de8a9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100de8ad: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100de8b3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100de8b7: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100de8bb: refs: 0x0004 TEXT ENTRY
symbol_log:136: 0x100de8c9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de8d1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de8d7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100de8df: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100de8e1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100de8e7: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100de8f3: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100de8fc: refs: 0x0001 size: 0x0010 (uint32_t (0x10af8f38))
symbol_log:136: 0x100de900: refs: 0x0001 size: 0x0010 (uint32_t (0x102c7950))
symbol_log:136: 0x100de904: refs: 0x0001 size: 0x0010 (uint32_t (0x10af72e8))
symbol_log:136: 0x100df237: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df263: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df269: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100df271: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df279: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df27f: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df285: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df28d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df297: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df29f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df2a9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df2bb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df2bf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df2cb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df2d1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df2dd: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df2df: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df2e7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df2f3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df2f9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df305: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df307: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df30f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df315: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df31d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df323: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x100df327: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df32f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df33b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df33f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df345: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df349: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df34b: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df353: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df359: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df367: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100df36d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df371: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df37f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df387: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df38b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df395: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df399: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df39d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df39f: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df3a3: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x100df3ab: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df3ad: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df3b7: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df3bb: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df3bf: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df3c1: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df3c3: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df3c5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df3c7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df3cb: refs: 0x0004 TEXT ENTRY
symbol_log:136: 0x100df3cf: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df3d1: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df3e4: refs: 0x0004 size: 0x0010 (uint32_t (0x10af8f38))
symbol_log:136: 0x100df3f4: refs: 0x0002 size: 0x0010 (uint32_t (0x10af8f24))
symbol_log:136: 0x100df3f8: refs: 0x0001 size: 0x0010 (uint32_t (0x102c7878))
symbol_log:136: 0x100df3fc: refs: 0x0000 size: 0x0010 (uint32_t (0x108ec146))
symbol_log:136: 0x100df55b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df575: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df577: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df57d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df591: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df599: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5af: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5b5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5bd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5c3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5cd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5dd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5e7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5ef: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5f3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df5fb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df605: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df60f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df61f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df629: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df62b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df635: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df645: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df64d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df651: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df659: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df661: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100df663: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df66b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df671: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df67b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df681: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df68b: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df68d: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100df699: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df6a1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df6a5: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x100df6a7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df6ad: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df6b3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100df6c8: refs: 0x0000 size: 0x0010 (uint32_t (0x102c7878))
symbol_log:136: 0x100df6cc: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d0ec))
symbol_log:136: 0x100df6d0: refs: 0x0007 size: 0x0010 (uint32_t (0x10af7308))
symbol_log:136: 0x100df6e4: refs: 0x0002 size: 0x0010 (uint32_t (0x10af8f24))
symbol_log:136: 0x100df6e8: refs: 0x0001 size: 0x0010 (uint32_t (0x10af8f38))
symbol_log:136: 0x100e0e0f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e13: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e19: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e21: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e2d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e3b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e4d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e61: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e65: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e83: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0e88: refs: 0x0000 size: 0x0010 (uint32_t (0x10af8f24))
symbol_log:136: 0x100e0ea4: refs: 0x0000 size: 0x0010 (uint32_t (0x10af7710))
symbol_log:136: 0x100e0eb8: refs: 0x0002 size: 0x0010 (uint32_t (0x10af72e4))
symbol_log:136: 0x100e0ebc: refs: 0x0000 size: 0x0010 (uint32_t (0x10af7f24))
symbol_log:136: 0x100e0ec1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0ec7: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100e0ed1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0ed9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0ee1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0ee5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0eeb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0ef1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0efb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0eff: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0f0b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0f11: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0f1d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f1f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f25: refs: 0x0006 TEXT ENTRY
symbol_log:136: 0x100e0f29: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f2d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0f33: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0f35: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f37: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f41: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f45: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f51: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f57: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f63: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100e0f65: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100e0f6b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f6f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0f77: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0f79: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100e0f83: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0f87: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0f93: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0f99: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e0fa5: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0fa7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0fad: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0fb1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e0fb5: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x100e11fc: refs: 0x0007 size: 0x0010 (uint32_t (0x10af8f38))
symbol_log:136: 0x100e1200: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce794c))
symbol_log:136: 0x100e1204: refs: 0x0000 size: 0x0010 (uint32_t (0x00001388))
symbol_log:136: 0x100e1215: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e121d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e122d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e1235: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e123d: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x100e1249: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e1275: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e127b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100e127d: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x100e1283: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100e1284: refs: 0x0000 size: 0x0010 (uint32_t (0x102c79a4))
symbol_log:136: 0x100e1288: refs: 0x0000 size: 0x0010 (uint32_t (0x102c7ae4))
symbol_log:136: 0x100e128c: refs: 0x0001 size: 0x0010 (uint32_t (0x102c7878))
symbol_log:136: 0x100e1290: refs: 0x0001 size: 0x0010 (uint32_t (0x102c7950))
symbol_log:136: 0x100e1294: refs: 0x0001 size: 0x0010 (uint32_t (0x10af72e8))
symbol_log:136: 0x100e1298: refs: 0x0001 size: 0x0010 (uint32_t (0x10af72ea))
symbol_log:136: 0x100e129c: refs: 0x0001 size: 0x0010 (uint32_t (0x10af72ee))
symbol_log:136: 0x100fd1f1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd1f7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd1ff: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd227: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd230: refs: 0x0004 size: 0x0010 (uint32_t (0x10ce794c))
symbol_log:136: 0x100fd234: refs: 0x0000 size: 0x0010 (uint32_t (0x100fd1e9))
symbol_log:136: 0x100fd239: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd269: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd281: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd289: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd291: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd2a3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd2a8: refs: 0x0003 size: 0x0010 (uint32_t (0x10ce7a18))
symbol_log:136: 0x100fd2ac: refs: 0x0000 size: 0x0010 (uint32_t (0x10168055))
symbol_log:136: 0x100fd2b0: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce794c))
symbol_log:136: 0x100fd2b4: refs: 0x0000 size: 0x0010 (uint32_t (0x10167b21))
symbol_log:136: 0x100fd2b9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100fd2c9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd2cd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fd2d9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100fd2e8: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce7b44))
symbol_log:136: 0x100fd987: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fdc94: refs: 0x0000 size: 0x0010 (uint32_t (0x103212a8))
symbol_log:136: 0x100fde6f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fde81: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fde8d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fde99: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fdeb9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fdecd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fded3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fded5: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100fdeed: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100fdef3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100fdef7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x100fdf13: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x100fdf1f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x100fe064: refs: 0x0003 size: 0x0010 (uint32_t (0x10ce7b6c))
symbol_log:136: 0x100fe0bc: refs: 0x0000 size: 0x0010 (uint32_t (0x100fe1c3))
symbol_log:136: 0x100fe0c0: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce7a20))
symbol_log:136: 0x100fe0c4: refs: 0x0000 size: 0x0010 (uint32_t (0x100fe1a1))
symbol_log:136: 0x100fe0c8: refs: 0x0001 size: 0x0010 (uint32_t (0x00005fff))
symbol_log:136: 0x100fe0cc: refs: 0x0000 size: 0x0010 (uint32_t (0x103212b0))
symbol_log:136: 0x10101b9f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ec4d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ec61: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ec65: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ec6f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ecb0: refs: 0x0000 size: 0x0010 (uint32_t (0x6e5d8004))
symbol_log:136: 0x1013ecb4: refs: 0x0000 size: 0x0010 (uint32_t (0x10321df4))
symbol_log:136: 0x1013ecc4: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1013ecd5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ece1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013eceb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ecf5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ecff: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ed05: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1013ed0b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ed0f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ed13: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ed17: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ed19: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ed1b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ed27: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ed2b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013ed40: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce9338))
symbol_log:136: 0x1013fad1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013fadf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013fb19: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1013fb2d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013fb35: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013fb37: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1013fb3d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013fb3f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1013fb43: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1013fb49: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1013fb4b: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1013fb53: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1013fb57: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1013fb59: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1013fb5d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1013fb6d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1013fb73: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1015aa45: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015aa51: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015aa5b: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aa67: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aa73: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aa77: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aa7b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015aa83: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aa89: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015aa95: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015aaa1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aaab: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015aab5: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aabb: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aabf: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aac3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aac7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aacb: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aacf: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aad3: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aad7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015aaf8: refs: 0x0000 size: 0x0010 (uint32_t (0x00000094))
symbol_log:136: 0x1015ab68: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015ab78: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015abc4: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1015b079: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b07f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b087: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b08f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b095: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b099: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b09d: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1015b0a1: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1015b0a7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b0ab: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b0af: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1015b0b9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b0bb: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b0c7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b0cb: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x1015b3c5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b3db: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b3f1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b434: refs: 0x0001 size: 0x0010 (uint32_t (0x10ce9450))
symbol_log:136: 0x1015b438: refs: 0x0000 size: 0x0010 (uint32_t (0x66d619e1))
symbol_log:136: 0x1015b43c: refs: 0x0000 size: 0x0010 (uint32_t (0x00010dcd))
symbol_log:136: 0x1015b460: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b464: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b46c: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b474: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b490: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b4a8: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x1015b4ac: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1015b4c0: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b4d0: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b504: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b50c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b514: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b538: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b540: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b548: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b554: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b558: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1015b570: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b578: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1015b590: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b598: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1015b5b0: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b5bc: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b5c8: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b5e0: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b608: refs: 0x0006 TEXT ENTRY
symbol_log:136: 0x1015b6d0: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b7c0: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b7cc: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b7d4: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b7e4: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b7ec: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b808: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b810: refs: 0x0004 TEXT ENTRY
symbol_log:136: 0x1015b814: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b844: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b850: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b878: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x1015b93f: refs: 0x0000 size: 0x0010 (uint32_t (0x01010100))
symbol_log:136: 0x1015b948: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b954: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b95c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b978: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b98c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b99c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b9ac: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b9b4: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015b9c8: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015b9dc: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015fce5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015fceb: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015fcf1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015fcf7: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015fcfb: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1015fcfd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015fd05: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015fd06: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1015fd0c: refs: 0x0000 size: 0x0010 (uint32_t (0x001c3534))
symbol_log:136: 0x1015fd14: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1015fd1c: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce9534))
symbol_log:136: 0x1015fd88: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10160d81: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10160d8f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10160d94: refs: 0x0000 size: 0x0010 (uint32_t (0x6e5d800c))
symbol_log:136: 0x10161399: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1016139f: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101613a5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101613ab: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101613af: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x101613b1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101613b9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101613ba: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x101613c0: refs: 0x0000 size: 0x0010 (uint32_t (0x001c2110))
symbol_log:136: 0x10162ee0: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10162ef8: refs: 0x0013 TEXT ENTRY
symbol_log:136: 0x10162f08: refs: 0x0013 TEXT ENTRY
symbol_log:136: 0x1016546d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1016547b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1016547d: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10165483: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165485: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1016548b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1016548d: refs: 0x0003 TEXT ENTRY
symbol_log:136: 0x10165495: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101654af: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101654bd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101654bf: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101654c8: refs: 0x0000 size: 0x0010 (uint32_t (0x0000aaaa))
symbol_log:136: 0x101654cc: refs: 0x0000 size: 0x0010 (uint32_t (0x00005554))
symbol_log:136: 0x101654d0: refs: 0x0000 size: 0x0010 (uint32_t (0x0000227e))
symbol_log:136: 0x101654d5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101654dc: refs: 0x0000 size: 0x0010 (uint32_t (0x1016546d))
symbol_log:136: 0x101654e0: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0f134))
symbol_log:136: 0x10165834: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165844: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165874: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101658f8: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165908: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165938: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101659bc: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101659f4: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165a00: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165a10: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165a18: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165a1c: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10165aa4: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165ab4: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165abc: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165ac0: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165ae4: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165b28: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10165b4c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165ba0: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10165c10: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165c30: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165c80: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165c88: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165c90: refs: 0x0000 size: 0x0010 (uint32_t (0x0005f3ff))
symbol_log:136: 0x10165e61: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165e6b: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165e73: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165e79: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165e7f: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10165e87: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10165e8c: refs: 0x0000 size: 0x0010 (uint32_t (0x10400000))
symbol_log:136: 0x10165e90: refs: 0x0000 size: 0x0010 (uint32_t (0x0090f148))
symbol_log:136: 0x10165e95: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165ea3: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165ea5: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10165ea9: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10165eb1: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10165eb7: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10165ebf: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10165ec0: refs: 0x0000 size: 0x0010 (uint32_t (0x10323d60))
symbol_log:136: 0x10165ec4: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0f148))
symbol_log:136: 0x10165ec8: refs: 0x0000 size: 0x0010 (uint32_t (0x0000005c))
symbol_log:136: 0x10166038: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x1016603c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10166044: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10166058: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10166060: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x101660ec: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x101660f4: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10166108: refs: 0x0001 TEXT ENTRY
symbol_log:136: 0x10166128: refs: 0x0000 size: 0x0010 (uint32_t (0x1031bf13))
symbol_log:136: 0x10166e55: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10166e69: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10166e6d: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10166e75: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10166e7c: refs: 0x0000 size: 0x0010 (uint32_t (0x10d0f144))
symbol_log:136: 0x10166e80: refs: 0x0000 size: 0x0010 (uint32_t (0x100b0ae5))
symbol_log:136: 0x10166eb1: refs: 0x0006 TEXT ENTRY
symbol_log:136: 0x10166eb9: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10166f99: refs: 0x0005 TEXT ENTRY
symbol_log:136: 0x10166fa0: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce7a1c))
symbol_log:136: 0x10166fad: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10167855: refs: 0x0018 TEXT ENTRY
symbol_log:136: 0x10167865: refs: 0x000b TEXT ENTRY
symbol_log:136: 0x10167931: refs: 0x0006 TEXT ENTRY
symbol_log:136: 0x10167d8d: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x10167d94: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce7b10))
symbol_log:136: 0x10167dad: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10167db4: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce7a5c))
symbol_log:136: 0x10167ecd: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10167f65: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10168011: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10168023: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1016802c: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce7b10))
symbol_log:136: 0x10168030: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce7b14))
symbol_log:136: 0x10168034: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce7a48))
symbol_log:136: 0x10168038: refs: 0x0000 size: 0x0010 (uint32_t (0x10ce7b1c))
symbol_log:136: 0x101685cc: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x101685d4: refs: 0x0000 size: 0x0010 (uint32_t (0x10160d81))
symbol_log:136: 0x1016c940: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1016c948: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1016cad0: refs: 0x0002 TEXT ENTRY
symbol_log:136: 0x1016cae8: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x1016cb08: refs: 0x0000 size: 0x0010 (uint32_t (0xfe3fe0e0))
symbol_log:136: 0x102c7480: refs: 0x0000 size: 0x0002 (uint8_t (0x03))
symbol_log:136: 0x102c7481: refs: 0x0000 size: 0x0002 (uint8_t (0x03))
symbol_log:136: 0x102c7482: refs: 0x0000 size: 0x0002 (uint8_t (0x03))
symbol_log:136: 0x102c78b4: refs: 0x0000 size: 0x0010 (uint32_t (0x1085d0b4))
symbol_log:136: 0x102c7ae4: refs: 0x0000 size: 0x0004 (uint16_t (0x0010))
symbol_log:136: 0x102ca814: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x103212b0: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10400000: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x105f7240: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105f7244: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105f7248: refs: 0x0001 TEXT ENTRY
 size: 0x0012 (uint32_t (0xffffffff)) | (uint8_t (0xff))
symbol_log:136: 0x105f724c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105f7250: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105f7258: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105f7538: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105f753c: refs: 0x0003 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105f7540: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105f7558: refs: 0x0002 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x105f755c: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105fbc08: refs: 0x0001 TEXT ENTRY
 size: 0x0012 (uint32_t (0xffffffff)) | (uint8_t (0xff))
symbol_log:136: 0x105fbc09: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x105fbc0a: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x105fbc0b: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x105fbc0c: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x105fbc0d: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x105fbc0e: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x105fbc10: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x105fbc12: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x105fbc14: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105fbc18: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105fbc54: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x105fd694: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x105fd696: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x105fd698: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x105fd69a: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x105fd69c: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x10653f14: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10653f1c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10653f24: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10653f26: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x10653f28: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x10653f2c: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10653f30: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10653f34: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x106542e4: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x106542e8: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10655318: refs: 0x0004 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1065531c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10655320: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x10655322: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x10655324: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x10859328: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085932c: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085932d: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085932e: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085932f: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10859330: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10859331: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10859332: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10859333: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10859444: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10859446: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x10859464: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10859468: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085aca8: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085acbc: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085acc0: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085acc4: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085acdc: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d000: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d020: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d022: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d024: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d038: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d039: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d03a: refs: 0x0003 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d03b: refs: 0x0002 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d03c: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d040: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d048: refs: 0x0001 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d04a: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d050: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d060: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d061: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d064: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d066: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d068: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d06a: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d06c: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d06e: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d070: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x1085d074: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d075: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d076: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d077: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d078: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d079: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d07a: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d07c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d080: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d084: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d088: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d090: refs: 0x0001 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d094: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d098: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d09c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d0b0: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d224: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d238: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x1085d23c: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d246: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x1085d298: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x108ec130: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x108ec131: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x108ec135: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x108ec144: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x108ec146: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x108ec147: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x108ec148: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x108ec149: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x108ec14a: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x108ec14c: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x108ec14e: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x108ec150: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x108ec154: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x108ec15c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x108ee170: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10af72e6: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0x10af7720: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10af8f34: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10af8f38: refs: 0x0001 TEXT ENTRY
 size: 0x0012 (uint32_t (0xffffffff)) | (uint8_t (0xff))
symbol_log:136: 0x10ce794c: refs: 0x0002 TEXT ENTRY
 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10ce7a18: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10ce7a1c: refs: 0x0003 TEXT ENTRY
 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10ce7a48: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10ce7a5c: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0x10ce7b10: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10ce7b14: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10ce7b1c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10ce9340: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10ce9450: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10ce9454: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10d0f130: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10d0f131: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0x10d0f134: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10d0f144: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10d0f18c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x10fda7e0: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x20000064: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x20000068: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x2000006c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x20000070: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x20000078: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0x66d619e1: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0xfffb0808: refs: 0x0005 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0xfffb080c: refs: 0x0005 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0xfffb0810: refs: 0x0003 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0xfffb081c: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0xfffb0840: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0xfffb0854: refs: 0x0001 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0xfffb0858: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0xfffb0c10: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb0c14: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb0c24: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb0c2c: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb0c30: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb0c34: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb1008: refs: 0x0005 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb1010: refs: 0x0001 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb1012: refs: 0x0001 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb1014: refs: 0x0003 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb1016: refs: 0x0003 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb1024: refs: 0x0001 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb1c10: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb1c18: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb1c1c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb1c20: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb1c24: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb1c2c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb1c38: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb1c40: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb2410: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb2418: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb241c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb2420: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb2424: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb242c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb2438: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb2440: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb3410: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb3418: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb341c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb3420: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb3424: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb3440: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb3804: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb3810: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb3814: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb3820: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb3824: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb3828: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb382c: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb3830: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb3834: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb3838: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb4018: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffb4840: refs: 0x0001 TEXT ENTRY
 size: 0x0012 (uint32_t (0xffffffff)) | (uint8_t (0xff))
symbol_log:136: 0xfffb4844: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0xfffb4848: refs: 0x0000 size: 0x0002 (uint8_t (0xff))
symbol_log:136: 0xfffb9000: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffb9008: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbac00: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbac04: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbac08: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbac0c: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbac10: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbac14: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbac18: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbac1c: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbac20: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbb430: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbb434: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbb4b0: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbb4f0: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbbc00: refs: 0x0000 TEXT ENTRY
symbol_log:136: 0xfffbbc2c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbbc30: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbbc34: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbe430: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbe434: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbe4b0: refs: 0x0003 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbe4f0: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbec1c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbec30: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbec34: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbec3c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbecb0: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffbecf0: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0000: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0018: refs: 0x0003 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe001c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0058: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0100: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0104: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe011c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0124: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0128: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe012c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe013c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0170: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0174: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0178: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe017c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0180: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0184: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0188: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe018c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0190: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0194: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0200: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0204: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe021c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0300: refs: 0x0004 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0304: refs: 0x0006 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe031c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0338: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe033c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe0340: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe100c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1010: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1014: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1018: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe101c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1020: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1024: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1028: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe102c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1030: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1034: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1038: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1040: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1044: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1048: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe104c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1060: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1064: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1080: refs: 0x0003 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1090: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1094: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1098: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe109c: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe10a0: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe10ac: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe10b4: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe10b8: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe10bc: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe10c0: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe10c4: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe10ec: refs: 0x0003 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1110: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1140: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe1160: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffe6010: refs: 0x0001 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6014: refs: 0x0003 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6018: refs: 0x0001 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6020: refs: 0x0001 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6024: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6030: refs: 0x0003 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6034: refs: 0x0002 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6804: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6820: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6838: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffe6844: refs: 0x0000 size: 0x0004 (uint16_t (0xffff))
symbol_log:136: 0xfffeb034: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffeb048: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec000: refs: 0x0002 size: 0x0014 (uint32_t (0xffffffff)) | (uint16_t (0xffff))
symbol_log:136: 0xfffec004: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec008: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec00c: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec010: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec014: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec018: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec500: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec504: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec600: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec604: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec700: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec704: refs: 0x0000 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec708: refs: 0x0014 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffec808: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffecb00: refs: 0x0004 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffecb04: refs: 0x0008 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffecb18: refs: 0x0002 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffecb1c: refs: 0x0001 size: 0x0010 (uint32_t (0xffffffff))
symbol_log:136: 0xfffecb24: refs: 0x0000 size: 0x0010 (uint32_t (